Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[772,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[366,0,0,"-"],creation_functions:[367,0,0,"-"],data_type_functions:[368,0,0,"-"],data_types:[372,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[368,1,1,""],finfo:[370,2,1,""],iinfo:[371,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[368,3,1,""],bits:[368,3,1,""],eps:[368,3,1,""],max:[368,3,1,""],min:[368,3,1,""],smallest_normal:[368,3,1,""]},"ivy.functional.ivy":{array_api:[773,0,0,"-"],core:[793,0,0,"-"],nn:[1139,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[774,0,0,"-"],creation_functions:[775,0,0,"-"],data_type_functions:[776,0,0,"-"],data_types:[779,0,0,"-"],elementwise_functions:[780,0,0,"-"],function_and_method_signatures:[783,0,0,"-"],linear_algebra_extension:[784,0,0,"-"],linear_algebra_functions:[785,0,0,"-"],manipulation_functions:[786,0,0,"-"],searching_functions:[787,0,0,"-"],set_functions:[788,0,0,"-"],sorting_functions:[789,0,0,"-"],statistical_functions:[790,0,0,"-"],utility_functions:[791,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[777,2,1,""],iinfo:[778,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{cos:[781,2,1,""],isfinite:[782,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[792,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[794,0,0,"-"],compilation:[833,0,0,"-"],device:[835,0,0,"-"],dtype:[885,0,0,"-"],general:[909,0,0,"-"],gradients:[1011,0,0,"-"],image:[1027,0,0,"-"],linalg:[1034,0,0,"-"],logic:[1042,0,0,"-"],math:[1046,0,0,"-"],meta:[1063,0,0,"-"],multi_node:[1067,0,0,"-"],nest:[1111,0,0,"-"],random:[1123,0,0,"-"],reductions:[1130,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[795,2,1,""],builtin_add:[796,2,1,""],builtin_and:[797,2,1,""],builtin_bool:[798,2,1,""],builtin_contains:[799,2,1,""],builtin_deepcopy:[800,2,1,""],builtin_dir:[801,2,1,""],builtin_eq:[802,2,1,""],builtin_float:[803,2,1,""],builtin_floordiv:[804,2,1,""],builtin_ge:[805,2,1,""],builtin_getattr:[806,2,1,""],builtin_getattribute:[807,2,1,""],builtin_getitem:[808,2,1,""],builtin_gt:[809,2,1,""],builtin_int:[810,2,1,""],builtin_invert:[811,2,1,""],builtin_le:[812,2,1,""],builtin_lt:[813,2,1,""],builtin_mul:[814,2,1,""],builtin_ne:[815,2,1,""],builtin_neg:[816,2,1,""],builtin_or:[817,2,1,""],builtin_pos:[818,2,1,""],builtin_pow:[819,2,1,""],builtin_radd:[820,2,1,""],builtin_rand:[821,2,1,""],builtin_rfloordiv:[822,2,1,""],builtin_rmul:[823,2,1,""],builtin_ror:[824,2,1,""],builtin_rpow:[825,2,1,""],builtin_rsub:[826,2,1,""],builtin_rtruediv:[827,2,1,""],builtin_rxor:[828,2,1,""],builtin_setitem:[829,2,1,""],builtin_sub:[830,2,1,""],builtin_truediv:[831,2,1,""],builtin_xor:[832,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[834,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[835,1,1,""],DevClonedItem:[837,1,1,""],DevClonedIter:[838,1,1,""],DevClonedNest:[839,1,1,""],DevDistItem:[840,1,1,""],DevDistIter:[841,1,1,""],DevDistNest:[842,1,1,""],DevManager:[835,1,1,""],DevMapper:[844,1,1,""],DevMapperMultiProc:[845,1,1,""],MultiDev:[835,1,1,""],MultiDevItem:[847,1,1,""],MultiDevIter:[848,1,1,""],MultiDevNest:[849,1,1,""],Profiler:[850,1,1,""],clear_mem_on_dev:[851,2,1,""],default_device:[852,2,1,""],dev:[853,2,1,""],dev_clone:[854,2,1,""],dev_clone_array:[855,2,1,""],dev_clone_iter:[856,2,1,""],dev_clone_nest:[857,2,1,""],dev_dist:[858,2,1,""],dev_dist_array:[859,2,1,""],dev_dist_iter:[860,2,1,""],dev_dist_nest:[861,2,1,""],dev_from_str:[862,2,1,""],dev_to_str:[863,2,1,""],dev_unify:[864,2,1,""],dev_unify_array:[865,2,1,""],dev_unify_iter:[866,2,1,""],dev_unify_nest:[867,2,1,""],dev_util:[868,2,1,""],get_all_arrays_on_dev:[869,2,1,""],gpu_is_available:[870,2,1,""],num_arrays_on_dev:[871,2,1,""],num_cpu_cores:[872,2,1,""],num_gpus:[873,2,1,""],percent_used_mem_on_dev:[874,2,1,""],print_all_arrays_on_dev:[875,2,1,""],set_default_device:[876,2,1,""],set_split_factor:[877,2,1,""],split_factor:[878,2,1,""],split_func_call:[879,2,1,""],to_dev:[880,2,1,""],total_mem_on_dev:[881,2,1,""],tpu_is_available:[882,2,1,""],unset_default_device:[883,2,1,""],used_mem_on_dev:[884,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[835,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[835,3,1,""],da_tune_step:[835,3,1,""],dim_size:[835,3,1,""],ds_tune_step:[835,3,1,""],map:[835,3,1,""],repeated_config_check:[835,3,1,""],tune_step:[835,3,1,""],tuned:[835,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[844,3,1,""],map:[844,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[845,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[835,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[847,3,1,""],items:[847,3,1,""],keys:[847,3,1,""],shape:[847,3,1,""],values:[847,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[848,3,1,""],at_dev:[848,3,1,""],at_devs:[848,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[849,3,1,""],at_dev:[849,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[850,3,1,""],start:[850,3,1,""],stop:[850,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[885,1,1,""],DefaultFloatDtype:[885,1,1,""],DefaultIntDtype:[885,1,1,""],astype:[885,2,1,""],cast:[889,2,1,""],closest_valid_dtype:[890,2,1,""],convert_dtype:[891,2,1,""],default_dtype:[892,2,1,""],default_float_dtype:[893,2,1,""],default_int_dtype:[894,2,1,""],dtype:[895,2,1,""],dtype_bits:[896,2,1,""],dtype_from_str:[897,2,1,""],dtype_to_str:[898,2,1,""],invalid_dtype:[899,2,1,""],is_float_dtype:[900,2,1,""],is_int_dtype:[901,2,1,""],set_default_dtype:[902,2,1,""],set_default_float_dtype:[903,2,1,""],set_default_int_dtype:[904,2,1,""],unset_default_dtype:[905,2,1,""],unset_default_float_dtype:[906,2,1,""],unset_default_int_dtype:[907,2,1,""],valid_dtype:[908,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[885,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[885,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[885,3,1,""]},"ivy.functional.ivy.core.general":{"default":[935,2,1,""],abs:[910,2,1,""],all_equal:[911,2,1,""],arange:[912,2,1,""],arg_names:[913,2,1,""],argmax:[914,2,1,""],argmin:[915,2,1,""],argsort:[916,2,1,""],array:[917,2,1,""],array_equal:[918,2,1,""],arrays_equal:[919,2,1,""],asarray:[909,2,1,""],assert_supports_inplace:[920,2,1,""],broadcast_to:[921,2,1,""],cache_fn:[922,2,1,""],ceil:[923,2,1,""],clip:[924,2,1,""],clip_matrix_norm:[925,2,1,""],clip_vector_norm:[926,2,1,""],concatenate:[927,2,1,""],constant_pad:[928,2,1,""],container_types:[929,2,1,""],copy_array:[930,2,1,""],cross:[931,2,1,""],cumprod:[932,2,1,""],cumsum:[933,2,1,""],current_framework_str:[934,2,1,""],einops_rearrange:[936,2,1,""],einops_reduce:[937,2,1,""],einops_repeat:[938,2,1,""],equal:[939,2,1,""],exists:[940,2,1,""],expand_dims:[941,2,1,""],flip:[942,2,1,""],floor:[943,2,1,""],floormod:[944,2,1,""],fourier_encode:[945,2,1,""],full:[946,2,1,""],gather:[947,2,1,""],gather_nd:[948,2,1,""],get_all_arrays_in_memory:[949,2,1,""],get_min_base:[950,2,1,""],get_min_denominator:[951,2,1,""],get_num_dims:[952,2,1,""],get_referrers_recursive:[953,2,1,""],has_nans:[954,2,1,""],identity:[955,2,1,""],indices_where:[956,2,1,""],inplace_arrays_supported:[957,2,1,""],inplace_decrement:[958,2,1,""],inplace_increment:[959,2,1,""],inplace_update:[960,2,1,""],inplace_variables_supported:[961,2,1,""],is_array:[962,2,1,""],isinf:[963,2,1,""],isnan:[964,2,1,""],linear_resample:[965,2,1,""],linspace:[966,2,1,""],logspace:[967,2,1,""],match_kwargs:[968,2,1,""],matmul:[969,2,1,""],maximum:[970,2,1,""],meshgrid:[971,2,1,""],minimum:[972,2,1,""],multiprocessing:[973,2,1,""],num_arrays_in_memory:[974,2,1,""],one_hot:[975,2,1,""],ones:[976,2,1,""],ones_like:[977,2,1,""],print_all_arrays_in_memory:[978,2,1,""],queue_timeout:[979,2,1,""],repeat:[980,2,1,""],reshape:[981,2,1,""],round:[982,2,1,""],scatter_flat:[983,2,1,""],scatter_nd:[984,2,1,""],set_min_base:[985,2,1,""],set_min_denominator:[986,2,1,""],set_queue_timeout:[987,2,1,""],set_tmp_dir:[988,2,1,""],shape:[989,2,1,""],shape_to_tuple:[990,2,1,""],split:[991,2,1,""],squeeze:[992,2,1,""],stable_divide:[993,2,1,""],stable_pow:[994,2,1,""],stack:[995,2,1,""],supports_inplace:[996,2,1,""],swapaxes:[997,2,1,""],tile:[998,2,1,""],tmp_dir:[999,2,1,""],to_list:[1000,2,1,""],to_numpy:[1001,2,1,""],to_scalar:[1002,2,1,""],transpose:[1003,2,1,""],try_else_none:[1004,2,1,""],unstack:[1005,2,1,""],value_is_nan:[1006,2,1,""],where:[1007,2,1,""],zero_pad:[1008,2,1,""],zeros:[1009,2,1,""],zeros_like:[1010,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1011,1,1,""],adam_step:[1013,2,1,""],adam_update:[1014,2,1,""],execute_with_gradients:[1015,2,1,""],gradient_descent_update:[1016,2,1,""],is_variable:[1017,2,1,""],lamb_update:[1018,2,1,""],lars_update:[1019,2,1,""],optimizer_update:[1020,2,1,""],set_with_grads:[1021,2,1,""],stop_gradient:[1022,2,1,""],unset_with_grads:[1023,2,1,""],variable:[1024,2,1,""],variable_data:[1025,2,1,""],with_grads:[1026,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1011,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1028,2,1,""],float_img_to_uint8_img:[1029,2,1,""],gradient_image:[1030,2,1,""],random_crop:[1031,2,1,""],stack_images:[1032,2,1,""],uint8_img_to_float_img:[1033,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1035,2,1,""],inv:[1036,2,1,""],matrix_norm:[1037,2,1,""],pinv:[1038,2,1,""],svd:[1039,2,1,""],vector_norm:[1040,2,1,""],vector_to_skew_symmetric_matrix:[1041,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1043,2,1,""],logical_not:[1044,2,1,""],logical_or:[1045,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1047,2,1,""],acosh:[1048,2,1,""],asin:[1049,2,1,""],asinh:[1050,2,1,""],atan2:[1052,2,1,""],atan:[1051,2,1,""],atanh:[1053,2,1,""],cosh:[1054,2,1,""],divide:[1055,2,1,""],erf:[1056,2,1,""],exp:[1057,2,1,""],log:[1058,2,1,""],sin:[1059,2,1,""],sinh:[1060,2,1,""],tan:[1061,2,1,""],tanh:[1062,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1064,2,1,""],maml_step:[1065,2,1,""],reptile_step:[1066,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1067,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1112,2,1,""],copy_nest:[1113,2,1,""],index_nest:[1114,2,1,""],map:[1115,2,1,""],map_nest_at_index:[1116,2,1,""],map_nest_at_indices:[1117,2,1,""],multi_index_nest:[1118,2,1,""],nested_indices_where:[1119,2,1,""],nested_map:[1120,2,1,""],set_nest_at_index:[1121,2,1,""],set_nest_at_indices:[1122,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1124,2,1,""],randint:[1125,2,1,""],random_normal:[1126,2,1,""],random_uniform:[1127,2,1,""],seed:[1128,2,1,""],shuffle:[1129,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1131,2,1,""],reduce_max:[1132,2,1,""],reduce_mean:[1133,2,1,""],reduce_min:[1134,2,1,""],reduce_prod:[1135,2,1,""],reduce_std:[1136,2,1,""],reduce_sum:[1137,2,1,""],reduce_var:[1138,2,1,""]},"ivy.functional.ivy.nn":{activations:[1140,0,0,"-"],layers:[1148,0,0,"-"],losses:[1161,0,0,"-"],norms:[1165,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1141,2,1,""],leaky_relu:[1142,2,1,""],relu:[1143,2,1,""],sigmoid:[1144,2,1,""],softmax:[1145,2,1,""],softplus:[1146,2,1,""],tanh:[1147,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1149,2,1,""],conv1d_transpose:[1150,2,1,""],conv2d:[1151,2,1,""],conv2d_transpose:[1152,2,1,""],conv3d:[1153,2,1,""],conv3d_transpose:[1154,2,1,""],depthwise_conv2d:[1155,2,1,""],dropout:[1156,2,1,""],linear:[1157,2,1,""],lstm_update:[1158,2,1,""],multi_head_attention:[1159,2,1,""],scaled_dot_product_attention:[1160,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1162,2,1,""],cross_entropy:[1163,2,1,""],sparse_cross_entropy:[1164,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1166,2,1,""]},"ivy.graph_compiler":{compiler:[1167,0,0,"-"],globals:[1170,0,0,"-"],graph:[1173,0,0,"-"],helpers:[1175,0,0,"-"],op_logging:[1176,0,0,"-"],param:[1177,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1168,2,1,""],show_graph:[1169,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1171,2,1,""],log_global_inference_rel_times:[1172,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1173,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1173,3,1,""],add_fn_to_dict:[1173,3,1,""],add_param:[1173,3,1,""],compiled:[1173,3,1,""],connect:[1173,3,1,""],debug_info:[1173,3,1,""],get_param:[1173,3,1,""],get_param_recursive:[1173,3,1,""],include_generators:[1173,3,1,""],increment_param_count:[1173,3,1,""],log_all_ops:[1173,3,1,""],params_all_empty:[1173,3,1,""],save_debug_info:[1173,3,1,""],set_param:[1173,3,1,""],show:[1173,3,1,""],show_debug_info:[1173,3,1,""],update_inference_times:[1173,3,1,""],with_array_caching:[1173,3,1,""]},"ivy.graph_compiler.param":{Param:[1177,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1177,3,1,""],count:[1177,3,1,""],depth:[1177,3,1,""],get:[1177,3,1,""],is_var:[1177,3,1,""],ptype:[1177,3,1,""],set:[1177,3,1,""],set_count:[1177,3,1,""],shape:[1177,3,1,""]},"ivy.stateful":{activations:[1182,0,0,"-"],converters:[1185,0,0,"-"],initializers:[1187,0,0,"-"],layers:[1196,0,0,"-"],module:[1208,0,0,"-"],norms:[1210,0,0,"-"],optimizers:[1212,0,0,"-"],sequential:[1218,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1183,1,1,""],GELU:[1184,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1183,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1184,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1186,2,1,""]},"ivy.stateful.initializers":{Constant:[1187,1,1,""],FirstLayerSiren:[1189,1,1,""],GlorotUniform:[1190,1,1,""],KaimingNormal:[1187,1,1,""],Ones:[1192,1,1,""],Siren:[1193,1,1,""],Uniform:[1187,1,1,""],Zeros:[1195,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1187,3,1,""],create_variables:[1187,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1189,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1190,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1187,3,1,""],create_variables:[1187,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1192,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1193,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1187,3,1,""],create_variables:[1187,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1195,3,1,""]},"ivy.stateful.layers":{Conv1D:[1197,1,1,""],Conv1DTranspose:[1198,1,1,""],Conv2D:[1199,1,1,""],Conv2DTranspose:[1200,1,1,""],Conv3D:[1201,1,1,""],Conv3DTranspose:[1202,1,1,""],DepthwiseConv2D:[1203,1,1,""],Dropout:[1204,1,1,""],LSTM:[1205,1,1,""],Linear:[1206,1,1,""],MultiHeadAttention:[1207,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1198,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1200,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1201,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1202,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1203,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1204,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1205,3,1,""],get_initial_state:[1205,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1206,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1207,3,1,""]},"ivy.stateful.module":{Module:[1209,1,1,""]},"ivy.stateful.module.Module":{__init__:[1209,3,1,""],build:[1209,3,1,""],build_mode:[1209,3,1,""],built:[1209,3,1,""],check_submod_rets:[1209,3,1,""],compile_graph:[1209,3,1,""],compile_on_next_step:[1209,3,1,""],get_mod_key:[1209,3,1,""],mod_depth:[1209,3,1,""],mod_height:[1209,3,1,""],mod_with_top_mod_key_chain:[1209,3,1,""],save_weights:[1209,3,1,""],show_graph:[1209,3,1,""],show_mod_in_top_mod:[1209,3,1,""],show_structure:[1209,3,1,""],show_v_in_top_v:[1209,3,1,""],sub_mods:[1209,3,1,""],track_submod_call_order:[1209,3,1,""],track_submod_rets:[1209,3,1,""],v_with_top_v_key_chains:[1209,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1211,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1211,3,1,""]},"ivy.stateful.optimizers":{Adam:[1213,1,1,""],LAMB:[1214,1,1,""],LARS:[1215,1,1,""],Optimizer:[1216,1,1,""],SGD:[1217,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],state:[1213,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1214,3,1,""],set_state:[1214,3,1,""],state:[1214,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1215,3,1,""],set_state:[1215,3,1,""],state:[1215,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1216,3,1,""],compile_graph:[1216,3,1,""],compile_on_next_step:[1216,3,1,""],set_state:[1216,3,1,""],show_graph:[1216,3,1,""],step:[1216,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1217,3,1,""],set_state:[1217,3,1,""],state:[1217,3,1,""]},"ivy.stateful.sequential":{Sequential:[1219,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1219,3,1,""]},"ivy.verbosity":{cprint:[1224,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1223,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1212,1213,1214],"02886":1179,"100":[1067,1179,1221],"2021":1179,"2102":1179,"360":[780,781,1046,1059,1061],"754":[776,777],"999":[1011,1013,1014,1018,1212,1213,1214],"abstract":[835,850,1179,1212,1216],"boolean":[40,41,835,870,882,885,899,908,909,911,918,919,954,956,957,961,962,963,964,996,1006,1011,1017,1042,1043,1044,1045,1063,1064,1065,1067],"break":43,"case":[15,18,19,40,41,42,43,835,874,881,884,909,912,981,983,984,1034,1037,1040,1067,1111,1114,1118,1179,1196,1207,1208,1209,1212,1216,1225],"catch":[909,935],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,368,776,778,835,837,838,839,840,841,842,844,845,847,848,849,850,862,863,885,909,913,968,976,1011,1025,1067,1111,1113,1120,1161,1163,1164,1173,1177,1179,1182,1183,1184,1185,1186,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1225],"default":[15,18,19,40,41,42,43,791,792,833,834,835,844,845,852,853,857,858,859,860,861,864,865,866,867,874,877,878,879,884,885,892,893,894,895,909,911,912,914,915,916,925,926,927,928,931,932,933,942,945,946,947,952,954,955,965,967,968,971,973,976,979,980,983,984,987,989,991,993,994,1003,1005,1006,1009,1011,1014,1016,1017,1018,1019,1020,1022,1026,1034,1037,1040,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1140,1141,1145,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],"final":[40,41,909,945,966,967,1067,1196,1207,1222],"float":[40,41,42,43,776,777,794,819,835,844,845,868,874,877,881,884,885,893,900,909,912,925,926,928,945,946,950,951,967,985,986,987,993,994,1011,1013,1014,1016,1018,1019,1020,1027,1029,1033,1046,1055,1063,1064,1065,1066,1067,1123,1126,1127,1140,1142,1148,1156,1159,1160,1161,1162,1163,1164,1165,1166,1196,1204,1207,1210,1211,1212,1213,1214,1215,1216,1217],"function":[15,40,41,43,370,371,777,778,781,782,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1179,1182,1183,1184,1212,1215,1216,1217,1221,1222,1225],"import":[43,1179,1222,1225],"int":[40,41,42,43,776,777,778,791,792,794,819,833,834,835,857,858,859,860,861,864,865,866,867,872,873,879,885,894,896,901,909,914,915,916,921,927,928,932,933,936,937,938,941,942,945,946,947,952,955,965,966,967,975,976,980,981,983,984,989,990,991,992,995,997,998,1003,1005,1008,1009,1011,1013,1014,1018,1027,1031,1032,1034,1037,1040,1063,1064,1065,1066,1067,1111,1120,1123,1124,1125,1127,1128,1130,1132,1133,1134,1135,1136,1137,1138,1140,1145,1148,1149,1150,1151,1152,1153,1154,1155,1159,1161,1163,1164,1165,1166,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1210,1211],"long":[1148,1158],"new":[40,41,43,885,889,909,910,921,936,937,938,941,945,946,947,948,976,981,983,984,985,986,993,994,995,1009,1011,1014,1016,1018,1019,1020,1027,1029,1031,1033,1046,1048,1050,1053,1054,1060,1062,1067,1111,1121,1122,1123,1124,1165,1166,1179,1185,1186,1196,1206,1210,1211,1212,1213,1214,1215,1216,1217,1222,1225],"public":[909,929],"return":[15,16,17,18,19,40,41,42,43,776,777,778,780,781,782,791,792,794,819,833,834,835,844,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,870,871,873,874,878,879,880,881,882,884,885,889,890,891,892,893,894,895,896,897,898,899,900,901,908,909,910,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,952,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,980,981,982,983,984,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1179,1185,1186,1196,1205,1206,1212,1216,1221,1222,1225],"short":[1148,1158,1179,1225],"static":[40,41,833,834],"super":1067,"true":[40,41,42,780,782,791,792,833,834,835,909,911,920,922,940,945,954,956,1006,1007,1011,1014,1016,1017,1018,1019,1020,1022,1034,1037,1040,1063,1064,1065,1066,1067,1111,1112,1119,1123,1124,1130,1132,1133,1134,1135,1136,1137,1138,1140,1141,1148,1156,1161,1162,1163,1164,1167,1168,1169,1173,1196,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],"try":[40,41,909,1004,1067],"var":[40,41,1063,1064,1065,1225],"while":[40,41,42,1067],AND:[791,792,1042,1043],But:1225,For:[43,909,912,924,995,1011,1017,1025,1046,1047,1179,1185,1186,1222,1225],Its:[1046,1051],NOT:[1042,1044],One:[40,41,909,937,981,1123,1125,1225],Ones:[1179,1187],Such:[909,929],That:1222,The:[15,16,17,18,19,40,41,42,43,780,781,782,791,792,794,819,833,834,835,844,845,851,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,874,877,878,879,880,881,884,885,889,890,891,896,897,898,899,908,909,912,916,917,918,921,922,925,926,927,928,930,931,934,935,939,942,945,947,948,955,958,959,960,962,965,967,969,971,973,976,977,980,981,983,984,985,986,987,990,991,992,993,994,995,998,1006,1009,1010,1011,1013,1014,1016,1018,1019,1020,1022,1025,1027,1029,1031,1033,1034,1037,1039,1046,1047,1049,1051,1055,1056,1057,1058,1059,1061,1063,1064,1065,1066,1067,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1126,1127,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1179,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1222,1225],There:[43,1179,1222],These:[43,1179],Used:[1111,1112,1119,1208,1209],Using:[1179,1180,1225],With:[40,41,1034,1037,1040,1130,1132,1133,1134,1135,1136,1137,1138,1179,1221,1225],__array__:[909,917],__call__:[1196,1207,1208,1209],__del__:1067,__dict__:[1067,1222],__enter__:1067,__exit__:1067,__getitem__:1067,__getstate__:1067,__init__:[40,41,42,43,59,60,79,195,368,369,477,592,835,836,843,844,845,846,847,848,849,850,885,886,887,888,1011,1012,1067,1071,1078,1173,1174,1177,1178,1179,1182,1183,1184,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1225],__iter__:1067,__len__:1067,__next__:1067,__pow__:43,__repr__:1067,_assign_vari:1221,_axi:1067,_base:[1111,1112,1119],_compute_node_da_ratio:1067,_compute_node_strs_da:1067,_concat_unify_arrai:1067,_counter:1067,_cur_framework:[43,1067],_da_direct:1067,_da_directions_flip:1067,_da_step_tim:1067,_da_tim:1067,_da_tune_count:1067,_data:1067,_delta_da_dim_s:1067,_delta_sf:1067,_dict:1067,_dim_siz:1067,_first_da_tune_step:1067,_first_ns_tune_step:1067,_fn:1067,_forward:[1179,1221],_get_kalman_param:1225,_get_prior:1225,_get_some_model:1225,_handle_flat_arrays_in_out:43,_index:[1111,1112,1119],_input_queu:1067,_length:1067,_max_depth:1067,_max_node_dim_step_ratio:1067,_max_node_dim_step_s:1067,_max_split_factor_step_s:1067,_mean_unify_arrai:1067,_min_bas:[909,994,1165,1166,1210,1211],_min_denomin:[909,993],_min_node_dim_s:1067,_min_sf_tune_step:1067,_min_unit_node_tune_step:1067,_model:1225,_native_wrapp:43,_node_mapp:1067,_node_percent_mem:1067,_node_str:1067,_node_str_da_ratio:1067,_node_strs_da:1067,_node_strs_kei:1067,_node_strs_n:1067,_node_util:1067,_ns_step_tim:1067,_ns_time:1067,_ns_tune_count:1067,_num_nod:1067,_num_work:1067,_observed_config:1067,_output_queu:1067,_paramet:1221,_percent_mem_inc_per_sf:1067,_percent_mem_inc_per_unit_da_dim:1067,_percent_util_inc_per_unit_da_dim:1067,_ret_fn:1067,_safety_factor:1067,_save_dir:1067,_shift_da_split:1067,_shift_n:1067,_slice:1067,_step:[1212,1216],_sum_unify_arrai:1067,_timeout:1067,_tune:1067,_tune_da:1067,_tune_n:1067,_tune_step:1067,_unit_da_tune_count:1067,_unroll_step:1225,_with_node_mappig:1067,_worker:1067,_worker_class:1067,_worker_fn:1067,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,835,844,850,1067,1208,1209,1212,1216],abil:1179,abl:[40,41],about:[776,777,778],abov:[43,1123,1125],above_height:[40,41],abs:[266,511,627,909,1067],absolut:[40,41,909,910],abstractmethod:1067,accept:[15,43,1179],access:[40,41,1222],accord:[40,41,776,777,909,928,947,983,984,1003,1008],accordingli:[791,792],accur:[59,368,835,847,848,849,850,885,1011,1173,1177,1187,1189,1190,1192,1193,1195],aco:[721,1046],acosh:[721,1046],across:[40,41,835,844,845,854,855,857,858,859,860,861,867,877,878,909,914,915,918,919,1067,1111,1115],activ:[1141,1142,1143,1144,1145,1146,1147,1179,1183,1184],actual:1222,adam:[1011,1013,1014,1018,1179,1212,1214,1221],adam_step:1011,adam_upd:1011,adapt:[1011,1019,1212,1215],add:[40,41,43,1067,1161,1162,1163,1164,1165,1166,1179,1210,1211,1222],add_fn_to_dict:1173,add_param:1173,added:[43,909,993,994,1218,1219],adding:[909,921],addit:[40,41,43,909,936,937,938,1165,1166,1196,1206],adher:43,adjac:[909,912],adopt:[909,929],affect:[909,912],affin:[1210,1211],after:[909,965,1011,1014,1015,1016,1018,1019,1020,1027,1028,1165,1166,1212,1213,1214,1215,1216,1217,1225],after_1:[909,928,1008],after_n:[909,928,1008],again:43,against:[40,41,1034,1037,1040,1130,1132,1133,1134,1135,1136,1137,1138],agnost:[43,1179,1221,1222],aim:1225,algebra:1034,algorithm:[1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203,1225],align:[40,41,43,909,921],aliv:[835,869,871,875,909,949,974,978],all:[15,16,17,18,19,40,41,43,94,209,384,492,607,791,833,834,835,844,869,875,909,910,911,918,919,929,942,949,955,978,992,1063,1064,1065,1066,1067,1111,1112,1113,1119,1120,1123,1124,1127,1130,1132,1133,1134,1135,1136,1137,1138,1148,1158,1179,1222,1225],all_depth:[40,41],all_equ:909,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1111,all_tru:[40,41],alloc:[835,1067],allow:[909,966,967,968,1208,1209],allow_dupl:[909,968],alon:[835,874,884,1067,1179],along:[40,41,43,791,792,835,858,859,860,861,864,865,866,867,879,909,916,927,932,933,942,947,965,966,967,980,991,995,998,1005,1034,1037,1040,1063,1064,1065,1066,1067,1123,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138],alongsid:[1221,1222],alpha:[1140,1142],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,835,1067],also:[40,41,43,909,912,1011,1014,1063,1064,1065,1066,1111,1112,1113,1119,1120,1148,1157,1196,1206,1221],altern:1221,alwai:[40,41,43,1011,1017,1022],among:[40,41],amount:[835,881,1067,1179],angl:[1046,1047,1052],ani:[15,16,17,18,19,40,41,43,833,834,835,837,840,844,845,847,856,857,860,861,866,909,911,912,917,935,936,937,938,939,940,954,962,968,993,994,1011,1015,1067,1111,1112,1115,1119,1120,1121,1122,1123,1127,1179,1185,1186,1208,1209,1221,1222,1225],anoth:[40,41,885,891,1179],another_backend:43,anyth:[43,1225],anywai:43,apart:43,api:[1179,1180],appear:[909,941],append:[40,41,1067],appli:[15,18,19,40,41,909,936,937,938,1011,1018,1019,1034,1039,1042,1043,1044,1045,1063,1064,1065,1111,1115,1118,1120,1140,1141,1142,1143,1144,1145,1146,1147,1148,1157,1159,1160,1165,1166,1179,1182,1183,1184,1210,1211],applic:[1111,1115,1120,1148,1159,1160,1179,1225],approxim:[43,794,819,1140,1141],arang:[113,266,398,511,627,909,966,967],arbitrari:[40,41,835,864,865,867,1067],arc:[1046,1052],arcco:[1046,1047],arctan:[1046,1051],area:1179,arg:[15,16,17,40,41,43,59,63,835,844,857,861,867,879,909,936,937,938,984,1067,1167,1168,1169,1173,1185,1186,1208,1209],arg_nam:909,arg_stateful_idx:[1167,1168,1169,1173,1208,1209],argmax:[113,398,511,627,909],argmin:[113,398,511,627,909],args_clon:1067,args_dist:1067,args_to_ivi:[15,1179],args_to_n:[15,1179],args_uni:1067,argsort:[627,909],argument:[15,16,17,18,19,40,41,42,43,59,63,833,834,835,844,845,857,861,867,909,912,913,922,935,968,984,1046,1047,1067,1111,1115,1185,1186,1208,1209],aris:[1179,1225],arithmet:[43,1130,1133,1136,1138],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,113,266,398,511,627,776,777,778,780,781,782,791,792,819,835,853,854,855,858,859,860,861,864,865,866,867,869,871,875,879,880,885,889,895,900,901,909,910,911,912,914,915,916,918,919,920,921,923,924,925,926,927,928,930,931,932,933,936,937,938,939,941,942,943,944,945,946,947,948,949,952,954,955,956,957,958,959,960,962,963,964,965,966,967,969,970,971,972,974,975,976,977,978,980,981,982,983,984,989,991,992,995,996,997,998,1000,1001,1002,1003,1005,1006,1007,1008,1009,1010,1011,1013,1014,1017,1018,1022,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1067,1111,1113,1120,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1179,1180,1196,1204,1205,1207,1212,1216,1221,1222],arrang:[909,936],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,368,370,371,776,777,778,780,781,782,791,792],array_builtin:[43,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832],array_equ:[266,627,909],array_lik:[909,917],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,909],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1179],arraywithgener:[22,1179],arraywithgradi:[24,1179],arraywithimag:[26,1179],arraywithlinalg:[28,1179],arraywithlog:[30,1179],arraywithmath:[32,1179],arraywithmeta:[34,1179],arraywithrandom:[36,1179],arraywithreduct:[38,1179],arriv:[40,41,42],articl:1179,arxiv:1179,as_arrai:[40,41,909,952,989],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[835,853,885,892,893,894,895],as_vari:[40,41],as_zero:[40,41],asarrai:909,asin:[721,1046],asinh:[721,1046],aspect:[1027,1032],assert:[40,41,909,920,1067],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:909,associ:[43,1034,1041],assum:[1222,1225],astyp:885,asynchron:[40,41,42],at_dev:[40,42,835,848,849],at_kei:[40,41],at_key_chain:[40,41],at_nod:1067,atan2:[721,1046],atan:[721,1046],atanh:[721,1046],attent:[1148,1159,1160,1196,1207],attribut:[0,6,40,41,776,777,778,909,977,1010],audienc:[1179,1222],author:1179,avail:[40,41,835,870,872,873,882,909,937,1067],averag:[1011,1013,1014,1018,1063,1064,1065,1130,1133],average_across_step:[1063,1064,1065],avoid:[835,1067,1222],axes:[40,41,43,791,792,835,879,909,914,915,928,941,942,997,1003,1008,1034,1037,1040,1067,1130,1132,1133,1134,1135,1136,1137,1138],axes_length:[40,41,909,936,937,938],axi:[40,41,791,792,835,837,840,847,858,859,860,861,864,865,866,867,879,909,914,915,916,927,928,931,932,933,941,942,947,965,966,967,980,991,992,995,997,998,1005,1008,1034,1040,1067,1123,1129,1130,1132,1133,1134,1135,1136,1137,1138,1140,1145,1161,1163,1164],axis0:[40,41,909,997],axis1:[40,41,909,997],back:[1208,1209,1212,1216],backend:[15,17,19,40,41,368,370,371,835,870,873,882,885,891,899,908,909,957,961,1011,1014,1016,1018,1019,1020,1025,1067,1179,1180,1185,1186,1212,1213,1214,1215,1216,1217,1221,1222,1225],background:[1179,1222],backprop:1225,backward:[791,792,1221],band:[909,945],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,368,794,819,835,837,838,839,840,841,842,844,845,847,848,849,850,885,909,950,967,985,994,1011,1067,1130,1131,1173,1177,1179,1182,1183,1184,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1225],batch:[40,41,835,877,878,909,942,945,955,1027,1031,1034,1039,1063,1064,1065,1066,1067,1148,1157,1165,1166,1210,1211],batch_shap:[909,942,955,975,1027,1028,1029,1030,1031,1032,1033,1034,1041,1123,1124,1148,1158,1159,1160,1196,1205],batch_siz:[1067,1123,1124,1148,1149,1150,1151,1152,1153,1154,1155],bayesian:1225,becaus:[43,909,912],becom:[909,924,1046,1052,1225],been:[909,936,937,938,1123,1124],befor:[40,41,43,835,879,1063,1064,1065,1067,1111,1120,1130,1132,1133,1134,1135,1136,1137,1138,1148,1159,1160,1225],before_1:[909,928,1008],before_n:[909,928,1008],begin:[1111,1112,1119,1222],behaviour:[43,1225],behind:[1011,1014,1016,1018,1019,1020,1179],being:[40,41,43,909,912,979,987,1067],belong:[40,41],below:[43,1179,1222,1225],below_depth:[40,41],benefit:1179,bernoul:[1148,1156,1196,1204],best:[909,968,1179],beta1:[1011,1013,1014,1018,1212,1213,1214],beta2:[1011,1013,1014,1018,1212,1213,1214],beta:[1165,1166],between:[40,41,42,776,777,909,912,1111,1115,1123,1125,1161,1163,1164,1212,1214],bia:[1148,1157,1158,1196,1197,1198,1199,1200,1201,1202,1203,1206],bias_initi:[1196,1197,1198,1199,1200,1201,1202,1203,1206],bilinear:[1027,1028],bilinear_resampl:[152,325,440,558,706,1027],bilinearli:[1027,1028],binari:[1161,1162],binary_cross_entropi:1161,bit:[368,776,777,778,885,896,1027,1029,1033,1179],bitwise_oper:[0,7,8],block:[1179,1222],bool:[15,18,19,40,41,42,43,780,782,791,792,833,834,835,853,866,870,874,879,882,884,885,895,909,911,918,919,932,935,939,940,945,952,954,962,968,989,991,1005,1006,1007,1011,1014,1015,1016,1017,1018,1019,1020,1022,1034,1037,1040,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1130,1132,1133,1134,1135,1136,1137,1138,1140,1141,1148,1156,1185,1186,1196,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],both:[43,909,931],bottom:1179,boundari:[40,41,1123,1127],branch:[833,834],brittl:43,broadcast:[40,41,43,791,792,794,819,909,921,939,970,971,972,980,1034,1037,1040,1046,1052,1055,1130,1132,1133,1134,1135,1136,1137,1138],broadcast_to:[266,627,909],build:[1067,1179,1196,1207,1208,1209],build_mod:[1196,1207,1208,1209],builder:1179,built:[835,909,912,1067,1196,1207,1208,1209],builtin:43,builtin_ab:[221,794],builtin_add:[221,794],builtin_and:[221,794],builtin_bool:[221,794],builtin_contain:[221,794],builtin_deepcopi:[221,794],builtin_dir:[221,794],builtin_eq:[221,794],builtin_float:[221,794],builtin_floordiv:[221,794],builtin_g:[221,794],builtin_getattr:[221,794],builtin_getattribut:[221,794],builtin_getitem:[221,794],builtin_gt:[221,794],builtin_int:[221,794],builtin_invert:[221,794],builtin_l:[221,794],builtin_lt:[221,794],builtin_mul:[221,794],builtin_n:[221,794],builtin_neg:[221,794],builtin_or:[221,794],builtin_po:[221,794],builtin_pow:[43,221,794],builtin_radd:[221,794],builtin_rand:[221,794],builtin_rfloordiv:[221,794],builtin_rmul:[221,794],builtin_ror:[221,794],builtin_rpow:[221,794],builtin_rsub:[221,794],builtin_rtruediv:[221,794],builtin_rxor:[221,794],builtin_setitem:[221,794],builtin_some_op:43,builtin_sub:[221,794],builtin_truediv:[221,794],builtin_xor:[221,794],bypass:1222,cach:[835,851,909,922],cache_fn:909,calcul:[40,41,42,43,794,819,1046,1055],call:[43,835,879,909,979,987,1004,1011,1015,1067,1111,1112,1115,1119,1196,1207,1208,1209,1212,1216,1222,1225],callabl:[40,41,833,834,835,844,845,879,909,922,935,937,968,1004,1063,1064,1065,1066,1067,1111,1115,1116,1117,1119,1120,1148,1159],can:[43,835,877,878,879,909,981,1027,1029,1067,1179,1221,1222,1225],cancel_join_thread:1067,captur:1179,cast:[40,41,113,266,398,511,627,885,909,927,1027,1029,1033],catch_except:[909,935],categori:43,ceil:[266,627,909,912],cell:[1148,1158,1196,1205],certain:[40,41,909,912,966,967],chain:[40,41,1063,1064,1065,1218,1219],chang:[835,909,981,1067,1111,1113,1120,1179,1221],channel:[909,945,1027,1029,1030,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206],check:[15,16,17,18,19,40,41,835,874,884,885,890,899,908,909,920,940,954,962,996,1006,1011,1017,1067,1111,1112,1119,1179,1222],check_nest:[1111,1119],check_shap:[40,41],check_submod_ret:[1208,1209],check_typ:[40,41],choic:[1179,1222],choleski:[710,1034],choos:[909,1007,1046,1052,1179],choose_random_framework:59,chosen:[40,41,909,912,1007],chunk:[835,877,878,879,1067],chunk_siz:[835,879,1067],circl:[1046,1047,1049],clark:1179,clear:[835,851,1067],clear_framework_stack:59,clear_mem_on_dev:[619,835],click:1179,clip:[40,41,266,627,909,925,926,970,972,1179],clip_matrix_norm:909,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,909],clipped_delta:1067,clone:[40,41,835,854,855,856,857,1067],clone_arrai:1067,clone_it:1067,clone_nest:1067,clonedit:1067,cloneditem:1067,clonednest:1067,close:[43,1027,1032,1046,1049,1067,1225],closest:[885,890],closest_valid_dtyp:885,code:[40,41,42,43,1179,1180,1221,1222],codebas:[835,877,878,1067,1179,1222,1225],collect:[15,40,41,794,833,835,885,909,1011,1027,1034,1042,1046,1067,1111,1123,1130,1140,1148,1161,1165,1182,1196,1210,1212],color:[40,41,42,1223,1224],column:[909,955],combin:[40,41,42,1027,1032,1179,1225],combined_batch_s:1067,come:1222,command:1179,commit:1225,common:[40,41,1046,1052],common_key_chain:[40,41],commun:[1179,1222],compar:[40,41,909,911,918,919],comparison_oper:[0,9,10],compat:[43,791,792,794,819,909,939,981,1046,1055,1179,1225],compil:[266,398,627,1168,1169,1173,1179,1208,1209,1212,1213,1214,1215,1216,1217],compile_graph:[1167,1179,1208,1209,1212,1216],compile_on_next_step:[1208,1209,1212,1213,1214,1215,1216,1217],complet:[40,41,1067],complex:[1222,1225],compon:[909,931],composit:43,comput:[40,41,780,781,835,879,909,925,926,932,933,939,969,1011,1013,1014,1015,1016,1018,1019,1020,1022,1024,1027,1030,1034,1035,1036,1037,1038,1040,1042,1043,1044,1045,1046,1047,1049,1051,1052,1056,1057,1058,1059,1061,1111,1115,1130,1131,1132,1133,1134,1135,1136,1137,1138,1148,1149,1150,1151,1152,1153,1154,1155,1157,1159,1161,1162,1163,1164],concat:[40,41,835,864,865,866,867,879,909,945,1067],concaten:[40,41,113,266,398,511,627,909,945,1067,1179],concatten:[40,41,835,864,865,866,867,879,1067],condit:[833,834,909,1007,1111,1119],conditon:[1111,1119],config:[40,41,1067],config_list:1067,configur:[40,41],conjunct:1222,connect:[1173,1196,1206,1207],consid:[40,41,1034,1040,1221,1225],consist:[40,41,835,867,1067,1130,1131,1208,1209,1222],constant:[835,844,845,909,928,1067,1111,1115,1161,1162,1163,1164,1165,1166,1187,1188,1192,1195,1208,1209,1210,1211,1222],constant_kwarg:1067,constant_pad:[266,511,627,909],constitu:[40,41],construct:[909,998,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221],constructor:[40,41,42,909,913,1218,1219],consum:[835,1067],cont_feat_dim:[1148,1159],contaienr:[40,41],contain:[15,18,19,42,43,780,782,791,792,794,819,835,854,858,879,885,889,909,910,914,915,916,924,925,926,929,939,954,970,972,982,993,994,1011,1013,1014,1016,1018,1019,1020,1046,1055,1063,1064,1065,1066,1067,1123,1124,1130,1132,1133,1134,1136,1138,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[627,909],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[909,973,1148,1159,1196,1207],context_dim:[1196,1207],contextmanag:[59,60],continu:[43,1067,1222],contract:[40,41,1130,1131],contribut:[1179,1180],contributor:1179,control:1179,conv1d:[182,356,464,764,1148,1179,1196],conv1d_transpos:[182,356,464,764,1148],conv1dtranspos:[1179,1196],conv2d:[182,356,464,583,764,1148,1179,1196],conv2d_transpos:[182,356,464,764,1148],conv2dtranspos:[1179,1196],conv3d:[182,356,464,583,764,1148,1179,1196],conv3d_transpos:[182,356,464,764,1148],conv3dtranspos:[1179,1196],convent:[40,41,1130,1131],conver:[835,851,862,874,881,884,1067],convers:[16,17,18,19,40,41,1067,1179],convert:[15,16,17,18,19,40,41,43,835,862,863,885,891,897,898,909,990,1001,1002,1027,1029,1033,1034,1041,1067,1111,1113,1120,1179,1186],convert_dtyp:885,convolut:[1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203],cool:43,cooler:43,coordin:[909,971,1046,1047,1049,1052],copi:[40,41,909,930,1067,1111,1113],copy_arrai:[627,909],copy_nest:1111,core:[794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1179],correct:[43,1179,1222],correctli:[40,41,1034,1037,1040,1046,1052,1130,1132,1133,1134,1135,1136,1137,1138],correspond:[40,41,43,794,819,909,927,1123,1124],cos:[83,373,481,596,780,909,945,1046,1047,1061,1222],cosh:[721,1046],cosin:[780,781,1046,1047,1048,1054],cost:[1011,1013,1014,1016,1018,1019,1020,1063,1064,1065,1066],cost_fn:[1063,1066],could:1225,count:[40,41,791,792,1067,1130,1135,1137,1177],cprint:1223,cpu:[40,41,43,835,872,874,880,881,884,909,912,917,947,948,955,966,967,975,976,977,983,984,1009,1010,1067,1123,1124,1125,1126,1127,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1221,1222],creat:[40,41,835,844,845,909,912,917,946,947,948,955,966,967,975,976,977,983,984,1000,1009,1010,1011,1024,1067,1123,1124,1125,1126,1127,1179,1185,1186,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1225],create_if_abs:[40,41],create_vari:1187,creation:[40,41,42,43],crop:[1027,1031],crop_siz:[1027,1031],cross:[266,627,909,1161,1162,1163,1164],cross_entropi:1161,cuda:[40,41,835,844,863,880,909,912,917,947,948,955,966,967,975,976,977,983,984,1009,1010,1067,1123,1124,1125,1126,1127,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219],cumprod:[113,266,398,627,909],cumsum:[627,909],cumul:[909,932,933],current:[40,41,42,43,835,844,868,869,871,875,885,891,899,908,909,934,949,957,961,974,978,1067,1111,1112,1119,1179,1225],current_framework:59,current_framework_str:[627,909,1067],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1173,d_in:[1148,1149,1150,1151,1152,1153,1154],d_out:[1148,1149,1150,1151,1152,1153,1154],da_can_termin:1067,da_dim_s:[835,1067],da_direct:1067,da_tune_step:[835,1067],dai:1225,daniel:1179,data:[40,41,42,43,777,778,780,782,791,792,794,819,835,837,838,839,840,841,842,847,848,849,863,885,889,890,891,895,896,897,898,899,900,901,908,909,912,917,939,946,955,962,976,977,981,992,996,1009,1010,1011,1017,1025,1046,1055,1067,1148,1157,1179],data_format:[1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203],data_type_funct:[368,370,371,776,777,778],dataset:[40,41],datatyp:[40,41,885,890,900,901],dcdw:[1011,1013,1014,1016,1018,1019],debug_info:1173,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1011,1018,1019,1212,1214,1215],decay_lambda:[1011,1018,1019,1212,1214,1215],decid:[40,41,1225],decompos:[1034,1035],decomposit:[1034,1035,1039],decor:43,decrement:[909,958],dedic:[1011,1025,1185,1186],deep:[40,41,1179],deep_copi:[40,41],deeper:[835,857,861,867,1067,1111,1120,1179],deepli:[1111,1113],def:[43,60,79,195,369,477,592,836,843,846,886,887,888,1012,1067,1071,1078,1174,1178,1179,1188,1191,1194,1221,1222,1225],default_dev:43,default_devic:835,default_dtyp:[43,885],default_float_dtyp:885,default_int_dtyp:885,default_key_color:[40,41,42],default_nod:1067,default_v:[909,935],defaultdevic:[835,836],defaultdtyp:[885,886],defaultfloatdtyp:[885,887],defaultintdtyp:[885,888],defer:43,defin:[43,909,931,975,977,1010,1123,1125],degre:[780,781,1046,1059,1061],del:1067,delta:[1011,1013,1067,1173],delta_dim_s:1067,delta_percent_mem:1067,delta_sf:1067,delta_util:1067,demo:1179,denomin:[909,944,951,986,993,994,1165,1166,1210,1211],dens:[1196,1206],depend:[43,794,819,909,1007,1034,1039,1179],depth:[40,41,835,857,861,867,909,953,975,1067,1111,1120,1173,1177,1208,1209],depth_cutoff:[40,41],depthwis:[1148,1155,1196,1203],depthwise_conv2d:[182,356,464,583,764,1148],depthwiseconv2d:[1179,1196],deriv:[1011,1013,1014,1016,1018,1019,1020,1111,1113,1120,1179,1208,1212,1216,1218],descend:[1034,1039],descent:[1011,1016,1212,1217],describ:[40,41,1130,1131],design:[1179,1180],desir:[40,41,835,880,885,889,909,912,917,955,956,976,977,1009,1010,1027,1032,1067,1130,1132,1133,1134,1136,1138],desired_aspect_ratio:[1027,1032],desired_percent_increas:1067,detail:1225,detect:[40,41,1111,1112,1119],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,780,782,791,792,794,819,835,870,872,873,882,885,889,890,896,899,900,901,908,909,911,912,917,918,919,954,957,961,962,996,1006,1011,1017,1046,1055,1063,1064,1065,1066,1067,1148,1159],dev:[40,41,42,43,106,260,504,619,835,838,839,841,842,844,845,848,849,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,871,874,875,876,877,878,879,880,881,884,909,912,917,947,948,955,966,967,975,976,977,983,984,1009,1010,1011,1026,1123,1124,1125,1126,1127,1185,1186,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219],dev_clon:[40,41,835],dev_clone_arrai:835,dev_clone_it:835,dev_clone_nest:835,dev_dist:[40,41,835],dev_dist_arrai:835,dev_dist_it:835,dev_dist_nest:835,dev_from_str:[43,106,260,504,619,835],dev_mapp:835,dev_str:[40,41],dev_to_str:[106,260,504,619,835],dev_unifi:835,dev_unify_arrai:835,dev_unify_it:835,dev_unify_nest:835,dev_util:835,devclonedit:835,devcloneditem:835,devclonednest:835,devdistit:835,devdistitem:835,devdistnest:835,develop:[1179,1222,1225],deviat:[40,41,1123,1126,1130,1136,1165,1166,1210,1211],devic:[21,40,41,43,837,838,839,840,841,842,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,909,912,917,946,947,948,955,966,967,975,976,977,983,984,1009,1010,1011,1026,1123,1124,1125,1126,1127,1179,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219],devmanag:[835,843],devmapp:[835,845],devmappermultiproc:835,diag:[1034,1039],diagon:[909,955],dict:[15,16,17,18,19,40,41,42,835,837,840,844,845,847,857,858,859,860,861,909,936,937,938,968,1063,1064,1065,1067,1111,1113,1114,1115,1118,1120,1185,1186],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,776,777,835,854,855,858,859,1067,1148,1157,1179,1222,1225],differenti:[1179,1222],dilat:[1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203],dim:[40,41,43,909,975,1027,1028,1032,1034,1039,1067,1196,1207],dim_siz:[40,41,835,1067],dimens:[40,41,42,791,792,835,866,909,921,927,931,936,937,938,941,945,952,965,975,980,981,991,992,995,1003,1005,1027,1031,1034,1037,1039,1040,1063,1064,1065,1066,1067,1123,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1145,1148,1149,1150,1151,1152,1153,1154,1155,1158,1161,1163,1164,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207],dimension:[40,41,791,792,909,991,992,1034,1039],direct:1067,directli:[43,1111,1120,1222,1225],directori:[909,988,999],discret:[1161,1163],disk:[40,41,1027,1029],distanc:[909,912],distribut:[40,41,835,854,858,859,860,861,1067,1123,1124,1125,1126,1127,1148,1156,1196,1204,1208,1209],distribute_nest:1067,distributedarrai:[40,41],distrubt:[1161,1163],dive:[1179,1222],divid:[40,41,909,991,993,1046],dividend:[1046,1055],divis:[909,944,951,986,993,994,1011,1013,1014,1018,1046,1055,1212,1213,1214],divisor:[1011,1013,1014,1018,1046,1055,1212,1213,1214],doc:1179,docstr:43,doe:[40,41,43,909,912,991,1221],doesn:1179,doing:43,domain:[1046,1047],don:1179,door:1225,dot:[1034,1036,1148,1159,1160,1196,1207],down:1221,downscal:[909,925,926],drag:[1179,1225],draw:[1123,1124,1126,1127],drawn:[1123,1124,1125,1126,1127],drop:[1179,1225],dropout:[1148,1179,1196,1207],dropout_r:[1196,1207],ds_tune_step:835,dtype:[40,41,43,113,266,368,370,371,398,511,627,776,777,778,889,890,891,892,893,894,896,897,898,899,900,901,902,903,904,905,906,907,908,909,912,917,946,955,975,976,977,1009,1010],dtype_bit:[113,266,398,511,627,885],dtype_from_str:[43,113,266,398,511,627,885],dtype_in:[885,891,896,897,898,899,900,901,908],dtype_to_str:[113,266,398,511,627,885],duplic:[40,41],dure:[40,41,43,833,834,909,1004,1011,1013,1014,1018,1063,1064,1065,1066,1208,1209,1212,1213,1214,1216],dynam:[833,834],each:[40,41,42,43,780,782,794,819,835,844,845,854,855,856,857,858,859,860,866,878,879,909,910,911,916,928,939,980,991,995,998,1008,1011,1014,1016,1018,1019,1020,1027,1030,1034,1039,1046,1049,1055,1057,1058,1067,1111,1115,1123,1124,1130,1131,1148,1149,1150,1151,1152,1153,1154,1155,1156,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1222],eager:1222,easi:1225,easili:1179,econom:1225,ecosystem:1179,edg:[909,924,928,1008],effect:[1011,1020],effective_grad:[1011,1020],effici:1225,einop:[40,41,909,936,937,938],einops_rearrang:[40,41,909],einops_reduc:[40,41,909],einops_repeat:[40,41,909],einstein:[40,41,1130,1131],einsum:[40,41,168,344,452,573,744,1130],either:[40,41,909,935,968,971,973,1063,1064,1065,1066,1067,1196,1207,1208,1209,1222],eleg:1067,element:[40,41,43,780,781,782,791,792,794,819,835,856,860,866,885,889,909,910,912,914,915,916,918,919,923,924,925,926,932,933,939,942,943,944,955,956,970,972,980,982,991,1002,1007,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1067,1130,1131,1133,1135,1137,1140,1141,1142,1143,1144,1145,1146,1147,1148,1156,1196,1204],elementwis:[40,41],elementwise_affin:[1210,1211],elementwise_funct:[780,781,782],elemtn:[1123,1124],elif:1067,els:[909,920,935,940,1067],elsewher:[909,1007],emphas:1179,empti:[40,41,1067],enabl:[40,41,42,1179],encapsul:[776,778],encod:[909,945,1027,1029],end:[909,912,1179,1222],ensur:43,entir:[40,41,791,792,835,879,1067,1179,1196,1205],entri:[40,41,909,942,966,967,991,992],entropi:[1161,1162,1163,1164],enumer:1067,environ:1179,eps:[368,776,777],epsilon:[1011,1013,1014,1018,1161,1162,1163,1164,1165,1166,1210,1211,1212,1213,1214],equal:[40,41,511,627,780,781,782,909,911,918,919,928,991,1008,1046,1059,1061,1123,1127],equality_matrix:[909,911],equat:[40,41,1130,1131],equival:[909,912,1046,1061],erf:[448,721,1046],error:[40,41,835,909,992,1046,1056,1067,1140,1141,1208,1209,1212,1216],essenti:43,etc:[40,41,43,835,880,909,912,917,947,948,955,966,967,975,976,977,983,984,1009,1010,1067,1123,1124,1125,1126,1127,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1225],evalu:[40,41,791,792,909,971,1111,1112,1119],even:1225,evenli:[40,41,909,912,966,967,991],everi:[909,911,1225],exact:[40,41],exampl:[43,833,834,909,924,995,1179,1221,1222,1225],example_input:[833,834],exc_tb:1067,exc_typ:1067,exc_val:1067,exce:[909,972],except:[40,41,44,47,791,792,909,912,920,927,935,1004,1067],excess_s:1067,excit:[1179,1222],exclud:[59,61,909,912,1123,1127],exclus:[40,41,909,932,962,1011,1017,1123,1125],execut:[43,909,1004,1222],execute_with_gradi:[149,320,435,553,700,1011,1179,1221],exist:[40,41,909,935,1067,1179,1212,1216,1225],exp:[721,1046],expand:[40,41,909,941,945],expand_dim:[40,41,266,627,909,1067],expect:[909,913],explain:1222,explicitli:[1196,1205,1207,1208,1209,1222],expon:[43,794,819,909,994],exponenti:[43,794,819,1046,1056,1057],expos:[909,917,929],express:[909,971],exsit:[40,41],extend:43,extra:[40,41,42,1011,1015],eye:[1034,1036],fabian:1179,fabio:1179,factor:[835,844,877,878,879,1011,1013,1014,1018,1019,1034,1039,1067,1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203,1212,1213,1214,1215],falck:1179,fall:[1208,1209,1212,1216],fallback_to_non_compil:[1208,1209,1212,1216],fals:[15,18,19,40,41,42,59,66,67,68,69,70,780,782,791,792,835,853,866,874,879,884,885,892,893,894,895,909,911,932,935,940,945,952,962,968,989,991,1005,1007,1011,1014,1015,1016,1017,1018,1019,1020,1034,1037,1040,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1130,1132,1133,1134,1135,1136,1137,1138,1167,1168,1169,1173,1177,1185,1186,1208,1209,1212,1213,1214,1215,1216,1217],fan_in:1187,fan_mod:1187,fan_out:1187,far:[1111,1112,1119,1221],faster:[833,834],favourit:[1179,1221],feasibl:1225,feat_dim:[1148,1159,1160],fed:[835,879,1067],feed:[835,879,1067],field:1225,file:[40,41,43,909,988,999,1208,1209],filepath:[40,41],fill:[40,41,909,946,976,1009,1123,1125],fill_valu:[909,946],filter:[1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203,1225],filter_s:[1196,1197,1198],filter_shap:[1196,1199,1200,1201,1202,1203],find:[40,41,1225],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,194,195,368,369,476,477,591,592,776],finish:[1179,1225],finit:[780,782],first:[40,41,833,834,835,866,909,918,927,931,939,966,967,995,997,1011,1015,1034,1039,1063,1064,1065,1066,1067,1111,1112,1119,1123,1129,1130,1135,1137,1196,1207,1208,1209,1212,1216,1222,1225],firstlayersiren:[1179,1187],firstli:[1222,1225],fist:[835,879,1067],fit:[40,41,909,980,1027,1032],fkt:1225,flag:[40,41,1011,1017],flat:[40,41,43,909,980,983],flat_list:[40,41],flatten:[40,41,909,945,980,1034,1040,1130,1132,1133,1134,1136,1138],flatten_key_chain:[40,41,1208,1209],flexibl:[1179,1222],flip:[40,41,113,266,398,511,627,909],float32:[43,885,889,897,898,909,912,917,955,976,977,1009,1010],float_dtyp:[885,893,903],float_img_to_uint8_img:1027,floor:[266,627,909,944,1067],floormod:[266,627,909],fluid:1225,fname:[1167,1169,1173,1208,1209],folder:[43,1179],follow:[40,41,43,776,778,835,879,909,958,959,960,993,994,1011,1014,1016,1018,1019,1020,1067,1111,1115,1120,1148,1159,1160,1179,1196,1206,1212,1216],followng:[776,777],fomaml_step:1063,forget:[1011,1013,1014,1018,1212,1213,1214],fork:[909,973],forkserv:[909,973,1067],form:[15,16,17,18,19,40,41,909,917,1011,1014,1016,1018,1019,1020,1111,1113,1120,1148],format:[40,41,43,835,853,885,889,891,895,909,912,917,955,976,977,1009,1010,1067,1130,1131,1179,1221,1222],format_fn:[40,41],format_key_chain:[40,41],forward:[1208,1209,1212,1216,1221],found:[40,41,42],fourier:[909,945],fourier_encod:909,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,95,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,154,155,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,195,196,197,200,210,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,326,327,328,330,331,332,333,335,336,337,340,341,342,343,345,346,347,348,349,350,351,352,355,357,358,359,360,361,362,363,369,370,371,374,375,385,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,441,442,443,445,446,449,451,453,454,455,456,457,458,459,462,463,465,466,467,468,469,470,471,477,478,479,482,483,493,505,506,507,508,509,510,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,563,564,565,569,570,571,572,574,575,576,577,578,579,580,584,585,586,592,593,594,597,598,608,620,621,622,623,624,625,626,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,701,702,703,704,705,707,708,709,711,712,713,714,715,716,718,719,720,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,738,739,740,741,742,743,745,746,747,748,749,750,751,754,755,756,757,758,759,760,762,763,765,766,767,768,769,770,771,777,778,781,782,792,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1164,1166,1168,1169,1171,1172,1174,1178,1179,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1224,1225],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1067,framewrk:[909,973],freeli:43,frequenc:[909,945],from:[40,41,42,43,791,792,835,844,845,879,885,891,909,935,942,947,948,955,981,992,1000,1007,1011,1014,1018,1027,1031,1063,1064,1065,1066,1067,1111,1113,1120,1123,1124,1125,1126,1127,1130,1135,1137,1148,1156,1159,1179,1185,1186,1196,1204,1207,1212,1216,1221,1222],from_cal:[1208,1209],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[113,266,398,511,627,776,777,909,1179],full_matric:[1034,1039],fulli:[43,1179,1196,1206,1207,1221],func:[40,41,833,834,835,879,909,922,1011,1015,1067],further:1225,furthermor:1225,futur:1225,gain:1187,gamma:[1165,1166],gather:[40,41,113,266,398,511,627,909,948],gather_nd:[40,41,113,266,398,511,627,909],gauss:[1046,1056],gaussian:[1140,1141],geglu:[1179,1182],gelu:[354,461,753,1140,1179,1182],gener:[23,40,41,43,833,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1017,1123,1125,1127,1128,1179,1212,1216],geometr:[909,945],get:[40,41,776,777,778,835,844,845,853,868,869,874,878,881,884,885,895,896,909,913,949,950,951,979,1067,1177,1179,1196,1205,1225],get_all_arrays_in_memori:909,get_all_arrays_on_dev:835,get_framework:59,get_initial_st:[1196,1205],get_min_bas:909,get_min_denomin:909,get_mod_kei:[1208,1209],get_num_dim:[627,909],get_param:1173,get_param_recurs:1173,get_referrers_recurs:909,getfullargspec:1067,gist:1179,give:[909,916,981,1222],given:[40,41,43,835,868,874,877,878,879,881,884,885,889,909,912,916,917,924,932,933,942,948,966,967,976,977,980,983,984,991,998,1003,1005,1009,1010,1011,1013,1014,1016,1018,1019,1020,1034,1036,1041,1046,1047,1067,1111,1116,1117,1123,1126,1127,1129,1130,1133,1135,1136,1137,1138,1148,1149,1150,1151,1152,1153,1154,1155,1185,1186,1225],global:[40,41,42,835,844,845,852,877,878,879,885,892,893,894,909,934,950,951,979,985,986,987,993,994,1011,1026,1067,1165,1166,1171,1172,1179,1210,1211],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1179,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206],got:1179,gpu0:43,gpu2:43,gpu:[835,870,873,1067],gpu_is_avail:[835,1067],grad:[1179,1212,1216,1221],gradient:[25,40,41,835,879,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1030,1063,1064,1065,1066,1179,1212,1213,1214,1215,1216,1217,1221,1225],gradient_descent_upd:[1011,1063,1064,1065,1066],gradient_imag:[152,325,440,558,706,1027],gradienttrack:[1011,1012],graph:[1011,1014,1016,1018,1019,1020,1167,1168,1169,1174,1179,1208,1209],graph_compil:[1167,1168,1169,1170,1171,1172,1173,1177],greater:[40,41,909,912,943,992,1123,1127],green:[40,41,42,1223,1224],grid:[909,971],group:[1027,1032],guid:[1179,1180,1225],gym:1179,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1225,half:[909,912,1067,1123,1127],hand:1179,handl:[40,41,42,43,833,834,835,851,853,862,863,874,881,884,1011,1014,1016,1018,1019,1020,1067,1212,1213,1214,1215,1216,1217],has:[40,41,43,909,995,1046,1051],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,909],hasattr:1067,have:[40,41,43,776,777,780,782,791,792,794,819,909,927,931,936,937,938,939,946,995,1011,1017,1025,1034,1039,1046,1055,1067,1179,1221,1222],hdf5:[40,41,1208,1209],head:[1148,1159,1196,1207],head_dim:[1196,1207],height:[1027,1032],height_cutoff:[40,41],help:[59,368,835,847,848,849,850,885,1011,1173,1177,1179,1187,1189,1190,1192,1193,1195],helper:1179,here:[43,1179],hidden:[1148,1158,1196,1205],hierarch:[909,929],hierarchi:[40,41],high:[40,41,1123,1125,1127],higher:[1011,1014,1016,1018,1019,1020,1034,1039],highest:[1123,1125],highest_util:1067,highest_util_nod:1067,highli:1179,highlight:1225,highlight_subgraph:[1167,1169,1173],hint:43,hkt:1225,hold:[885,889,909,912,917,983,984],host:1179,hot:[909,975],how:[1179,1196,1207,1208,1209,1222,1225],howev:[43,1222],http:1225,hyperbol:[1046,1048,1050,1053,1054,1060,1062,1140,1147],hypothet:1225,icon:1179,idea:1179,ident:[40,41,43,113,266,398,511,627,909],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[776,777],if_exist:[40,41],ignor:[40,41,1212,1216],ignore_key_error:[40,41],ignore_miss:[1212,1216],ignore_non:[40,41],iinfo:[78,194,368,476,591,776],imag:[27,909,965,1028,1029,1030,1031,1032,1033,1148,1149,1150,1151,1152,1154,1155,1179,1225],image_dim:[1027,1031],imkkhk:1225,immedi:[1179,1222,1225],implement:[43,794,819,1179,1222,1225],in_featur:[1148,1157],includ:[40,41,43,791,792,909,912,954,993,994,1006,1111,1112,1123,1127,1196,1206,1207,1210,1211,1221],include_deriv:[1111,1113,1120],include_empti:[40,41],include_gener:[1167,1168,1169,1173,1208,1209],include_inf:[40,41,909,954,1006],include_nest:[1111,1112],include_self:[40,41],inclus:[1123,1125],incom:[1148,1157],increas:[835,857,861,867,909,928,941,1008,1067,1111,1120],increasingli:1225,increment:[909,959,1067],increment_param_count:1173,inde:1179,indent:[40,41,42],independ:[1123,1124],index:[40,41,909,914,915,947,948,971,992,995,1111,1114,1116,1117,1118,1121],index_nest:1111,indic:[40,41,909,914,915,916,947,948,956,975,983,984,1111,1112,1114,1116,1117,1118,1119,1121,1122,1123,1124,1140,1145,1148,1149,1150,1151,1152,1153,1154,1155,1165,1166,1196,1197,1198,1199,1200,1201,1202,1203,1208,1209],indices_wher:[113,266,398,627,909],inevit:1225,inf:[40,41,909,954,963,1006,1046,1051],infer:[833,834,909,942,952,955,981,989,1027,1031,1222,1225],infin:[780,782,909,963],inform:[776,777,778,1011,1022],init_c:[1148,1158],init_h:[1148,1158],init_on_first_step:[1212,1216],initi:[40,41,42,59,368,835,847,848,849,850,885,1011,1067,1148,1158,1173,1177,1179,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1212,1216],initialz:[1208,1209],inner:[1063,1064,1065,1066],inner_batch_fn:[1063,1064,1065],inner_batch_shap:[1148,1157],inner_cost_fn:[1063,1064,1065],inner_grad_step:[1063,1064,1065,1066],inner_learning_r:[1063,1064,1065,1066],inner_optimization_step:[1063,1064,1065,1066],inner_v:[1063,1064,1065],inp:1067,inplac:[40,41,909,920,957,961,996,1011,1014,1016,1018,1019,1020,1185,1186,1212,1213,1214,1215,1216,1217],inplace_arrays_support:909,inplace_decr:[113,266,398,511,627,909],inplace_incr:[113,266,398,511,627,909],inplace_oper:[0,11,12],inplace_upd:[40,41,113,266,398,511,627,909,1185,1186],inplace_variables_support:909,input:[15,18,19,40,41,42,43,780,781,782,791,792,833,834,835,844,845,852,853,854,857,858,861,867,879,880,885,889,890,892,893,894,895,896,900,901,909,910,911,914,915,916,918,919,920,921,923,924,925,926,927,928,930,932,933,935,936,937,938,939,940,941,942,943,944,945,952,954,955,956,958,959,960,962,963,964,965,969,970,971,972,980,982,989,990,992,995,996,997,998,1000,1001,1002,1003,1005,1006,1008,1011,1015,1017,1022,1026,1027,1028,1029,1030,1031,1033,1034,1037,1039,1040,1042,1043,1044,1045,1046,1048,1050,1051,1053,1054,1055,1059,1060,1061,1062,1063,1064,1065,1066,1067,1123,1124,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1165,1166,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1210,1211,1222],input_ax:[835,879,1067],input_channel:[1196,1197,1198,1199,1200,1201,1202,1205,1206],input_queu:1067,inputs_split:1067,insert:[909,941],insid:43,inspect:1067,inspir:1225,instal:1179,instanc:[15,16,17,18,19,40,41,43,794,819,835,844,1067,1185,1186,1218,1219],instead:[40,41,1130,1132,1133,1134,1135,1136,1137,1138,1225],int32:43,int64:[885,889,909,912,917,955,976,977,1009,1010],int_dtyp:[885,894,904],integ:[40,41,776,778,791,792,885,901,909,912,923,943,982,991,1034,1040,1123,1125,1128],integr:1179,intend:43,inter:1179,interchang:[40,41,909,997],interest:1179,interfac:[909,917,1222],intermedi:[40,41],intern:[40,41,835,1011,1025,1067,1111,1112,1119,1120,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1218,1219],interpol:[909,965],intersect:[1046,1047],interv:[40,41,791,792,909,912,924,966,967,1046,1049,1123,1127],introduc:1225,inv:[710,1034,1225],invalid:[791,792],invalid_dtyp:885,invers:[1034,1036,1038,1046,1047,1048,1049,1050,1051,1053,1225],invert:[1034,1036,1038],invest:1225,invoc:[833,834],irrespect:1179,is_al:1067,is_arrai:[113,266,398,511,627,909,1067],is_float_dtyp:885,is_int_dtyp:885,is_mean:1067,is_sum:1067,is_var:[1173,1177],is_vari:[149,320,435,553,700,1011],isfinit:[83,199,373,481,596,780],isinf:[266,511,627,909],isinst:1067,isnan:[266,511,627,909],isnumer:1067,item:[15,19,40,41,794,806,807,835,844,845,847,854,856,858,860,866,885,892,909,929,953,993,994,1067,1111,1115,1116,1117,1120,1121,1122,1179,1208,1209,1221],iter:[15,16,17,18,19,40,41,42,833,834,835,838,839,841,842,844,845,848,849,856,858,859,860,861,866,879,909,911,921,927,928,942,955,971,976,980,981,984,989,991,995,998,1003,1008,1009,1067,1111,1112,1113,1115,1119,1120],iterbal:[835,856,860,866,1067],its:[835,879,909,916,955,981,997,1003,1067,1179],itself:[43,1111,1120],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,370,371,776,777,778,780,781,782,791,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1177,1179,1180,1182,1183,1184,1185,1186,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1223,1224],ivy_backend:[40,41],ivy_bay:1225,ivyfcmodel:1221,ivyh:[40,41,42],ivymodul:[179,761],jame:1179,jax:[1011,1017,1179,1225],jax_concat:1179,jnp:1179,join:[40,41,909,927,995,1067],journal:1179,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1179,1196,1205,1225],kaimingnorm:[1187,1191],kalman:1225,kalman_filt:1225,kalman_filter_step:1225,kalman_filter_upd:1225,keep:[40,41,835,880,909,1005,1067,1179,1225],keep_inner_v:[1063,1064,1065],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1063,1064,1065],keepdim:[40,41,791,792,909,1005,1034,1037,1040,1130,1132,1133,1134,1135,1136,1137,1138],kei:[15,16,17,40,41,42,794,799,835,847,909,929,1063,1064,1065,1067,1111,1114,1118,1148,1159,1160,1179,1185,1186,1196,1207,1212,1216],kept:[40,41,42,1063,1064,1065],kera:1225,kernel:[1148,1158],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,835,844,845,857,861,867,909,913,936,937,938,968,1067,1111,1115,1208,1209],keyword_color_dict:[40,41,42],kind:[776,777,778,1225],kwarg:[15,16,17,40,41,42,59,63,835,844,857,861,867,909,968,1067,1167,1168,1169,1173,1185,1186,1208,1209],kwarg_stateful_idx:[1167,1168,1169,1173,1208,1209],kwargs_clon:1067,kwargs_dist:1067,kwargs_uni:1067,label:[1161,1162,1163,1164],lamb:[1011,1018,1179,1212],lamb_upd:1011,lambda:[1067,1212,1215,1217,1221],lar:[1011,1018,1019,1179,1212],larger:[776,777,909,924],largest:[40,41,776,777,778,909,914,943],lars_upd:1011,last:[40,41,791,792,909,912,931,965,991,995,1034,1037,1039,1130,1135,1137,1140,1145,1148,1158,1196,1206],later:[40,41,909,922],latest:[1196,1205],layer:[1011,1014,1016,1018,1020,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1165,1166,1179,1187,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1225],layer_norm:1165,layernorm:[1179,1210],layerwis:[1011,1019,1212,1215],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1111,1112,1119],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1140,1141,1142],leaky_relu:[753,1140],learn:[1011,1014,1016,1018,1019,1020,1063,1064,1065,1066,1123,1129,1179,1212,1213,1214,1215,1216,1217,1222,1225],learnabl:[1165,1166,1210,1211],leav:[15,18,19,40,41,1111,1112,1113,1119,1120],left:[40,41,1034,1037,1040,1130,1132,1133,1134,1135,1136,1137,1138,1179],leftmost:[40,41],len:1067,length:[40,41,42,909,912,981,992,1003],lenton2021ivi:1179,lenton:1179,less:[40,41,43,909,923,1067,1123,1127],less_util_node_str:1067,let:[1222,1225],level:1179,librari:[1179,1221,1225],lightweight:1179,like:[43,1011,1017,1123,1127,1179,1221,1222,1225],limit:[40,41,42,776,777,778,909,924,925,926],linalg:[29,1035,1036,1037,1038,1039,1040,1041,1179],linear0:[1179,1221],linear1:1179,linear2:1221,linear:[909,945,965,1034,1140,1141,1142,1143,1148,1156,1179,1196,1197,1198,1199,1200,1201,1202,1203,1221],linear_resampl:[113,266,398,511,627,909],linearli:[909,945],link:1179,linspac:[113,266,398,511,627,909,912],list:[15,18,19,40,41,43,791,792,835,844,845,854,855,857,858,859,861,864,865,879,909,912,917,919,971,990,991,1000,1005,1063,1064,1065,1067,1111,1112,1113,1115,1119,1120,1148,1149,1150,1151,1152,1153,1154,1155,1179,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203],list_join:[40,41,42],list_stack:[40,41],littl:1222,load:[40,41],loaded_kwarg:1067,loader:1179,local_set:[909,953],locat:[43,909,963,964,1123,1124],log:[721,909,967,1046,1067,1161,1162,1163,1164,1179],log_all_op:1173,log_global_inference_abs_tim:[1170,1179],log_global_inference_rel_tim:[1170,1179],logarithm:[1046,1058],logic:[31,791,792,1043,1044,1045,1179],logical_and:[334,717,1042],logical_not:[334,717,1042],logical_or:[334,717,1042],logit:[1161,1164],logspac:[113,266,398,511,627,909],look:[43,1222,1225],loop:[1063,1064,1065,1066],loss:[1162,1163,1164,1179,1221],loss_fn:[1179,1221],lot:1222,low:[40,41,1123,1125,1127],lower:[40,41,909,970,1123,1127],lower_depth:[1208,1209],lowest:[15,18,19,40,41,1111,1120,1123,1125],lstm:[1148,1158,1179,1196],lstm_updat:[43,1148],machin:[776,777,778,1123,1129,1179,1222,1225],mai:[909,912,935,939,1179,1222,1225],main:[909,955,1179],mainli:1179,make:[43,835,1067,1179,1222],maml:[1063,1064,1065],maml_step:1063,manag:[835,1067],mani:[40,41,43,909,991,1179],manner:[15,18,19,40,41,43,1111,1120],manual:[1111,1112,1119,1225],map:[40,41,42,835,844,909,963,964,1067,1111,1116,1117,1120,1196,1207,1221],map_cont:[40,41],map_nest_at_index:1111,map_nest_at_indic:1111,map_sequ:[40,41],mapper:[835,844,845,1067],mask:[1148,1159,1160],match:[40,41,909,968],match_kwarg:909,math:[33,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1067,1179],mathbb:[1034,1041],mathbf:[1034,1041],matmul:[43,266,511,627,909,1225],matplotlib:1222,matric:[1148,1157],matrix:[40,41,909,911,925,969,1034,1035,1036,1037,1038,1041,1148,1157,1196,1206],matrix_norm:[40,41,156,329,444,562,710,1034],matter:1179,max:[40,41,368,776,777,778,909,925,926,937,970,983,984,1067,1130,1132,1212,1214],max_batch_s:[40,41],max_chunk_s:[835,879,1067],max_depth:[40,41,835,839,842,849,857,861,867,909,953,1067,1111,1120],max_dev_dim_step_ratio:835,max_freq:[909,945],max_length:[40,41],max_node_dim_step_ratio:1067,max_norm:[40,41,909,925,926],max_split_factor_step_s:[835,1067],max_trust_ratio:[1011,1018,1212,1214],maxim:[1179,1222,1225],maximis:1179,maximum:[40,41,42,627,835,857,861,867,879,909,914,924,925,926,945,1011,1018,1067,1111,1120,1130,1132],mayb:[15,18,19],mdi:1067,mean:[40,41,835,864,865,866,867,879,909,937,1063,1064,1065,1066,1067,1111,1115,1123,1126,1130,1133,1136,1138,1187,1221,1225],measur:[1148,1159,1196,1207],mech:1179,mechan:[1179,1225],medic:1225,memori:[835,851,874,879,881,884,1067,1148,1158,1179],meshgrid:[266,627,909],messag:[1223,1224],meta:[35,1064,1065,1066,1179],method:[40,41,42,43,909,917,929,971,983,984,1011,1018,1019,1067,1111,1112,1119,1120,1179,1196,1207,1208,1209,1222],might:[909,935,1225],min:[40,41,368,776,777,778,909,937,972,983,984,993,1067,1130,1134],min_bas:[909,994],min_denomin:[909,993],min_dev_dim_s:835,min_node_dim_s:1067,min_sf_tune_step:[835,1067],min_unit_dev_tune_step:835,min_unit_node_tune_step:1067,mind:1179,mini:[1165,1166,1210,1211],minimum:[40,41,627,835,885,889,909,912,915,917,924,950,951,985,986,993,994,1067,1130,1134],miss:[1212,1216],ml_framework:[909,912],mod:[909,944],mod_depth:[1208,1209],mod_height:[1208,1209],mod_with_top_mod_key_chain:[1208,1209],mode:[40,41,833,834,835,864,865,866,867,879,1034,1039,1067,1222],model:[1179,1221],modul:[40,41,42,59,909,973,1067,1179,1180,1182,1183,1184,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1210,1211,1218,1219,1225],moment:[1011,1013,1014,1018,1212,1213,1214],more:[43,909,995,1067,1179,1222,1225],more_util_node_str:1067,most:[40,41,43,1179,1225],move:[40,41,43,835,880,1067],much:[1179,1225],multi:[909,973,1148,1159,1196,1207],multi_head_attent:1148,multi_index_nest:1111,multi_map:[40,41],multi_nod:1067,multidev:[835,846,847,848,867],multidevcontain:[40,41],multidevic:[835,844],multidevit:[835,838,841,844,845,849],multidevitem:[835,837,840],multidevnest:[835,839,842],multiheadattent:[1179,1196],multinod:[1067,1071],multinodecontain:1067,multinodeit:1067,multinodeitem:1067,multinodenest:1067,multinomi:[161,339,450,568,737,1123],multipl:[40,41,791,792,909,968,991,1034,1036,1130,1132,1133,1134,1135,1136,1138,1165,1166,1196,1206,1222],multipli:[40,41,909,932,1130,1135],multiprocess:[40,41,42,627,835,844,909,1067],must:[40,41,42,43,780,782,791,792,794,819,835,864,865,866,867,879,909,912,927,929,931,939,970,972,984,995,1046,1052,1055,1067,1123,1128,1212,1216],mutabl:[1111,1113,1120],mutlidevic:[835,844],mutlinod:1067,mw_tm1:[1011,1014,1018],mx_concat:1179,mxnet:[43,1179,1225],my_func:43,mymodel:1179,name:[833,834,1167,1168,1169,1173,1221],namespac:[43,1222],nan:[40,41,780,782,909,954,964,1006],nativ:[15,17,18,19,40,41,43,835,851,853,862,863,874,881,884,885,890,897,898,1067,1179,1180,1185,1186],native_modul:[1185,1186],native_module_class:[1185,1186],nativearrai:[15,18,19,43,776,777,778,780,781,782,791,792,794,819,835,853,879,880,885,889,895,900,901,909,910,911,912,914,915,916,917,918,919,921,923,924,925,926,927,928,930,931,932,933,936,937,938,939,941,942,943,944,945,947,948,952,954,955,956,963,964,965,966,967,969,970,971,972,975,976,977,980,981,982,983,984,989,991,992,995,997,998,1000,1001,1002,1003,1005,1006,1007,1008,1009,1010,1067,1111,1113,1120],natur:[1046,1058,1225],ncdhw:[1148,1153,1154,1196,1201,1202],nchw:[1148,1151,1152,1155,1196,1199,1200,1203],ncw:[1148,1149,1150,1196,1197,1198],ndarrai:[43,368,370,371,909,1001],ndhwc:[1148,1153,1154,1196,1201,1202],nearest:[909,982],need:[43,909,925,926,1148,1150,1152,1154,1179,1196,1198,1200,1202,1225],neg:[40,41,780,782,791,792,1130,1135,1137,1140,1142],negative_slop:1187,neither:1067,nest:[15,16,17,18,19,40,41,42,835,857,861,867,909,917,1000,1063,1064,1065,1067,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1208,1209,1212,1213,1214,1215,1216,1217],nested_indices_wher:1111,nested_map:[1067,1111],network:[1148,1157,1179,1180,1182,1196,1208,1209,1225],neural:[1148,1179,1182,1196,1221],new_node_percent_mem:1067,new_node_util:1067,new_node_utils_kei:1067,new_std:[1165,1166,1210,1211],newli:[833,834,909,921,922],newlin:[40,41,42],newshap:[909,921,981],next:[776,777,1067,1208,1209,1212,1213,1214,1215,1216,1217],nhwc:[1148,1151,1152,1155,1196,1199,1200,1203],node:[40,41,1111,1112,1119],node_clon:1067,node_dist:1067,node_dist_arrai:1067,node_dist_it:1067,node_in:1067,node_mapp:1067,node_str:1067,node_to_str:1067,node_util:1067,nodedistit:1067,nodedistitem:1067,nodedistnest:1067,nodemanag:[1067,1078],nodemapp:1067,nodemappermultiproc:1067,noinspect:[43,836,886,887,888,1012,1067,1174],non:[40,41,791,792,833,834,885,899,1208,1209,1212,1216,1222],none:[40,41,42,43,59,61,64,776,777,778,791,792,833,834,835,844,845,851,852,877,878,879,880,885,892,893,894,909,912,917,934,935,940,942,946,947,948,953,955,957,958,959,960,961,966,967,973,975,976,977,980,983,984,985,986,991,992,993,994,1003,1004,1009,1010,1011,1014,1016,1018,1019,1020,1026,1027,1031,1034,1037,1040,1063,1064,1065,1066,1067,1111,1112,1115,1119,1120,1123,1124,1125,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1148,1150,1152,1154,1157,1158,1159,1160,1165,1166,1167,1168,1169,1173,1177,1185,1186,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],norm:[40,41,909,925,926,1034,1037,1040,1166,1179,1211,1212,1214],normal:[1123,1126,1165,1166,1210,1211],normalized_idx:[1165,1166],normalized_shap:[1210,1211],notat:[40,41,1130,1131],note:43,noth:[40,41,1222],notimplementederror:1067,now:[40,41,835,880,909,910,1067,1179,1196,1207,1208,1209,1221,1222,1225],np_concat:1179,np_finfo:368,ns_tune_step:1067,num:[909,966,967],num_arrai:[40,41],num_arrays_in_memori:909,num_arrays_on_dev:835,num_band:[909,945],num_channel:[1196,1203],num_chunk:1067,num_chunks_floor:1067,num_class:[1123,1124],num_cpu_cor:835,num_gpu:[106,835,1067],num_head:[1148,1159,1196,1207],num_kei:[1148,1159,1160],num_lay:[1196,1205],num_or_size_split:[40,41,909,991],num_output:1067,num_queri:[1148,1159,1160],num_sampl:[909,965,1027,1028,1123,1124],num_task:[1063,1064,1065,1066],number:[40,41,42,776,777,778,791,792,833,834,835,871,872,873,885,896,900,901,909,912,924,928,941,945,952,955,964,965,966,967,970,974,980,991,998,1002,1006,1008,1034,1039,1063,1064,1065,1066,1067,1123,1124,1128,1130,1132,1133,1134,1136,1138,1148,1159,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1222,1225],numer:[43,780,782,794,819,909,950,951,985,986,993,994,1046,1055,1187],numhead:[1148,1159],numpi:[40,41,368,370,371,909,1001,1034,1039,1130,1131,1179,1221,1222,1225],nwc:[1148,1149,1150,1196,1197,1198],obj:[40,41],object:[40,41,42,59,368,776,777,778,835,885,889,909,912,917,1011,1111,1114,1116,1117,1118,1121,1122,1123,1129,1173,1177,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1208,1209],object_in:[909,917],observ:1067,occupi:[776,777,778,909,983,984],off:[909,912],offer:1179,offset:[1165,1166],often:1222,old:[40,41],on_init:[1196,1207,1208,1209],onc:[835,879,1067,1123,1124,1179],one:[40,41,43,835,864,865,866,867,879,885,891,909,955,968,975,983,984,992,995,1034,1037,1040,1067,1130,1131,1132,1133,1134,1135,1136,1137,1138,1179,1222,1225],one_hot:[113,398,511,627,909],onearrai:[909,941],ones:[40,41,113,266,398,511,627,909,955,975,977,1179],ones_lik:[113,266,398,511,627,909],ongo:43,onli:[40,41,43,835,1067,1111,1112,1113,1119,1212,1213,1214,1215,1216,1217,1221,1222],onlin:1179,onto:[835,864,865,880,1067,1111,1115,1120],oom:[835,1067],open:[909,912,1123,1127,1179,1225],opencv:1222,oper:[40,41,909,920,936,937,938,966,967,996,1011,1014,1016,1018,1019,1020,1042,1043,1044,1045,1148,1149,1150,1151,1152,1153,1154,1155,1157,1179,1180],operand:[40,41,1130,1131],oppos:[909,945],optim:[835,1011,1014,1016,1018,1019,1020,1063,1064,1065,1066,1067,1179,1213,1214,1215,1217,1221,1225],optimizer_upd:1011,option:[15,18,19,40,41,42,43,791,792,833,834,835,844,845,853,857,858,859,860,861,864,865,866,867,874,877,878,879,880,884,885,890,895,899,908,909,911,912,914,915,916,917,925,926,927,932,934,935,942,945,946,947,948,952,954,955,962,965,966,967,968,971,973,975,976,977,980,983,984,987,989,991,992,993,994,995,1003,1005,1006,1009,1010,1011,1014,1016,1017,1018,1019,1020,1022,1027,1031,1034,1037,1040,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1130,1132,1133,1134,1135,1136,1137,1138,1140,1141,1145,1148,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1222],ord:[909,942,1034,1039],order:[40,41,42,43,909,916,1011,1014,1016,1018,1019,1020,1034,1037,1040,1063,1064,1065,1218,1219],ordered_node_util_kei:1067,org:1225,organ:43,origin:[40,41,42,909,977,981,1010,1034,1037,1040],other:[40,41,43,794,796,797,802,804,805,809,811,812,813,814,815,817,819,820,821,822,823,824,826,827,828,830,831,832,833,834,909,911,912,955,1011,1015,1123,1127,1179,1221,1222,1225],other_i:[43,794,819],otherwis:[15,16,17,18,19,40,41,780,782,791,792,835,852,885,892,893,894,909,920,1003,1004,1007,1011,1017,1022,1026,1063,1064,1065,1067,1130,1132,1133,1134,1136,1138],our:[1179,1225],out:[909,912,1046,1051,1148,1156,1158,1179,1196,1204],out_feat_dim:[1148,1159],out_featur:[1148,1156,1157],out_i:[780,782],outdat:1225,outer:[1063,1064,1065,1066],outer_batch_fn:[1063,1064,1065],outer_batch_shap:[1148,1157],outer_cost_fn:[1063,1064,1065],outer_v:[1063,1064,1065],outlin:1222,output:[40,41,43,835,844,845,879,909,912,922,946,955,980,998,1011,1015,1046,1052,1067,1123,1125,1126,1127,1148,1150,1152,1154,1156,1158,1159,1160,1179,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207],output_ax:[835,879,1067],output_axi:1067,output_channel:[1196,1197,1198,1199,1200,1201,1202,1205,1206],output_connected_onli:[1167,1169,1173,1208,1209],output_queu:1067,output_shap:[1148,1150,1152,1154,1196,1198,1200,1202],outsid:[909,924],over:[40,41,791,792,909,942,1034,1037,1040,1123,1127,1130,1132,1133,1134,1136,1138,1165,1166,1210,1211],overal:1222,overflow:[909,912],overhead:1222,overrid:[909,975,977,1010],overriden:[1212,1216],overwrit:[40,41,835,879,1067],overwrite_at_key_chain:[40,41],own:[1179,1222,1225],packag:[43,1222],pad:[909,928,945,1008,1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203],pad_width:[909,928,1008],page:1179,pair:[1148,1160],parallel:[835,844,845,1067],parallelis:[835,844,845,1067],param:[40,41,42,43,835,879,909,910,947,948,975,976,1009,1067,1178,1179,1208,1209,1221],paramet:[15,16,17,18,19,40,41,42,776,777,778,780,781,782,791,792,794,819,833,834,835,844,845,851,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,874,877,878,879,880,881,884,885,889,890,891,895,896,897,898,899,900,901,908,909,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,930,931,932,933,935,936,937,938,939,940,941,942,943,944,945,946,947,948,952,954,955,956,958,959,960,962,963,964,965,966,967,968,969,970,971,972,973,976,977,980,981,982,983,984,985,986,987,989,990,991,992,993,994,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1022,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221],parameter:[1123,1126,1127],params_all_empti:1173,pardo:1179,pars:[909,929],part:[1011,1014,1016,1018,1019,1020,1046,1051,1179,1208,1209,1222],partial:[40,41,1208,1209],particl:1225,particular:1225,pass:[40,41,42,835,844,879,885,890,909,922,1011,1025,1063,1064,1065,1067,1185,1186,1208,1209,1212,1216,1218,1219],pattern:[40,41,909,936,937,938],per:[835,1067,1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203],percent_used_mem_on_dev:835,percent_used_mem_on_nod:1067,percentag:[835,874,1067],perf_count:1067,perform:[40,41,43,791,792,835,909,914,915,916,932,936,937,938,958,959,960,965,966,967,1011,1014,1016,1018,1019,1020,1027,1028,1063,1064,1065,1066,1067,1111,1116,1117,1130,1132,1133,1134,1135,1136,1137,1138,1140,1145,1148,1156,1158],permissable_step:1067,permit:43,permut:[909,997,1003],perpendicular:[909,931],person:1179,physci:1225,pickl:[40,41,1067],pickle_filepath:[40,41],pid:1173,pinv:[329,710,1034],pip:1179,pipelin:1221,pkk:1225,pkkm1:1225,pkm1km1:1225,place:[40,41,43,835,880,909,941,946,958,959,960,1067,1212,1213,1214,1215,1216,1217],placehold:[1111,1120],point:[776,777,885,900,909,912,1046,1055],popul:[40,41,1123,1124],popular:1225,population_s:[1123,1124],portabl:[1179,1180],posit:[15,16,17,776,777,780,782,835,857,861,867,909,910,912,941,945,1067,1123,1128,1185,1186],possibi:[40,41],possibl:[909,968,1000,1027,1032,1225],post:[1165,1166],post_shap:[40,41],power:[43,794,819,825,909,950,985,994,1187],practic:1179,pre:[835,1067,1179],pre_shap:[40,41],precis:[776,777],pred:[1161,1162,1163,1164],predict:[1161,1162,1163,1164,1225],preprint:1179,present:[40,41],preserv:[40,41,42,909,942,1011,1022],preserve_typ:[40,41,1011,1022],press:1179,prevent:[43,1011,1013,1014,1018,1067,1212,1213,1214],previou:[1011,1014,1018],previous:[909,922],prime:1179,print:[40,41,42,835,875,909,978,1179,1221],print_all_arrays_in_memori:909,print_all_arrays_on_dev:835,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1212,1216],prob:[1123,1124,1148,1156,1196,1204],probabl:[1123,1124,1148,1156,1196,1204],problem:[43,1225],process:[43,835,844,845,874,884,909,973,1067],process_specif:[835,874,884,1067],prod:[40,41,909,937],produc:[835,844,845,1067],product:[40,41,909,931,932,969,1130,1131,1148,1159,1160,1196,1207],profil:[106,260,396,504,619,835,1067],project:[1179,1221,1222,1225],promot:[43,794,819,1046,1055],prompt:1179,properli:43,properti:[40,41,368,835,847,1067,1173,1177,1208,1209,1212,1213,1214,1215,1217],provid:[40,41,43,791,792,833,834,835,852,885,892,893,894,899,908,909,935,975,977,984,1010,1011,1014,1016,1018,1019,1020,1026,1067,1179,1196,1205,1212,1213,1214,1215,1216,1217,1222],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1034,1038],ptype:[1173,1177],pure:[40,41,1179,1225],purpos:1225,put:1067,pybroadexcept:1067,pyprotectedmemb:[1067,1174],pyshadowingbuiltin:43,pyshadowingnam:[836,886,887,888,1012,1067],python:[40,41,835,874,884,909,912,1067,1179],pytorch:[1011,1014,1016,1018,1019,1020,1179,1212,1213,1214,1215,1216,1217,1221,1222,1225],pyunresolvedrefer:1067,quadrant:[1046,1052],queri:[40,41,794,808,829,835,868,878,1067,1148,1159,1160,1196,1207],query_dim:[1196,1207],query_kei:[40,41],queue:[40,41,42,835,844,845,909,979,987,1067],queue_class:[835,844,845,1067],queue_load_s:[40,41,42],queue_timeout:[40,41,42,909,1067],quick:1179,quickli:1221,radian:[780,781,1046,1047,1049,1052,1059,1061],rai:[1046,1047],rais:[40,41,43,791,792,794,819,909,920,950,985,992,994,1004,1067,1208,1209,1212,1216],ram:[835,874,881,884,1067],randint:[161,339,568,737,1123],random:[37,40,41,1124,1125,1126,1127,1128,1129,1179],random_crop:1027,random_norm:[161,339,568,737,1123],random_uniform:[161,339,568,737,1123],randomli:[1027,1031,1148,1156,1196,1204],randomness_factor:[1167,1169,1173,1208,1209],rang:[909,912,966,967,1046,1052,1067,1179,1221,1225],rank:[791,792,909,928,1005,1008],rate:[1011,1014,1016,1018,1019,1020,1063,1064,1065,1066,1196,1207,1212,1213,1214,1215,1216,1217],rather:[40,41,835,879,909,912,962,1011,1017,1067],ratio:[835,1011,1018,1027,1032,1067,1212,1214],raw:[40,41],raw_delta:1067,reach:[835,857,861,867,1067,1111,1120],read:[40,41],readi:[1067,1221],real:[1046,1047,1051],realiti:1222,rearrang:[40,41,909,936,938],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1063,1065],receiv:[835,844,845,909,913,968,1067,1196,1206],receivess:[835,1067],receiving_fn:1173,receivng:[1063,1066],recev:[1063,1064,1065],recognit:1225,recommend:1179,rectifi:[1140,1142,1143],recurr:[1148,1158],recurrent_bia:[1148,1158],recurrent_kernel:[1148,1158],recurs:[40,41,1111,1112,1113,1119,1120],redefin:43,reduc:[40,41,791,792,835,879,909,937,1067,1130,1132,1133,1134,1135,1136,1137,1138],reduce_max:[40,41,168,344,452,573,744,1130],reduce_mean:[40,41,168,344,452,573,744,1130,1179,1221],reduce_min:[40,41,168,344,452,573,744,1130],reduce_prod:[40,41,168,344,452,573,744,1130],reduce_std:[40,41,344,1130],reduce_sum:[40,41,168,344,452,573,744,1067,1130],reduce_var:[40,41,168,344,452,573,744,1130],reduct:[39,40,41,791,792,909,937,983,984,1131,1132,1133,1134,1135,1136,1137,1138,1179],refactor:43,refer:[791,792,1011,1013,1014,1034,1041,1196,1206,1225],reflected_oper:[0,13,14],regard:[835,1067],regardless:[40,41,833,834],register_paramet:1221,reimplement:1225,rel:[1011,1014,1016,1018,1019,1020],rel_slice_obj:1067,relev:[1212,1213,1214,1215,1216,1217],relu:[753,1140,1141,1142,1179,1221],remain:[43,909,981,1111,1115],remaind:[40,41,909,944,991],remov:[40,41,909,992,1063,1064,1065],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,909,942],rep:[909,998],repeat:[40,41,266,627,909,938,998,1067,1222],repeated_config_check:[835,1067],repeatedli:[1111,1118],repetit:[40,41,909,980,998],replac:[40,41,43,909,924,983,984,1123,1124],repo:1179,repres:[43,885,891,896,1148,1157],represent:[40,41,42,43,776,777,778,835,862,863,885,891,897,898,909,990,1000,1067],reptil:[1063,1066],reptile_step:1063,requir:[43,833,834,885,889,909,912,917,1185,1186],resampl:[909,965],reshap:[40,41,43,627,909],reshape_lik:[40,41],respect:[909,939,1011,1013,1014,1015,1016,1018,1019,1020,1046,1055,1063,1064,1065,1066],respons:1067,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,780,782,791,792,794,819,835,844,909,912,939,983,984,995,1034,1037,1040,1042,1043,1044,1045,1046,1055,1067,1130,1132,1133,1134,1135,1136,1137,1138,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1179],ret:1067,ret_dict:1067,ret_fn:[835,844,845,1067],retain:[1011,1015],retain_grad:[1011,1015],retreiv:1067,retrn:[909,990],return_cont:[40,41],return_dict:[40,41],return_graph:[1167,1168,1169],return_inner_v:[1063,1064,1065,1066],return_sequ:[1196,1205],return_st:[1196,1205],rev:[909,935],revers:[40,41,909,935,942,1003],right:[40,41],rk_e:1225,robot:1179,ronald:1179,round:[266,627,909,912,1067],row:[909,955,1123,1124],rule:[43,794,819,909,912,1046,1055],run:[835,844,1011,1013,1014,1018,1063,1064,1065,1066,1067,1179,1180,1196,1207,1208,1209],safe:[835,844,1067],safety_factor:[835,1067],same:[15,16,17,40,41,43,835,844,845,879,880,885,889,909,910,923,927,943,944,947,948,975,977,982,983,984,995,1010,1011,1017,1022,1034,1039,1046,1051,1063,1064,1065,1067,1130,1131,1148,1149,1150,1151,1152,1153,1154,1155,1179,1196,1197,1198,1199,1200,1201,1202,1203,1221,1225],same_arrai:[40,41],sampl:[909,965,1027,1028,1123,1124,1126,1127,1148,1156,1179,1196,1204],satisfi:[909,917,1034,1036,1041],save:[40,41,909,988,999,1027,1029,1208,1209],save_debug_info:1173,save_dir:[835,850,1067],save_to_disk:[1167,1169,1173,1208,1209],save_weight:[1208,1209],scalar:[909,924,975,1002,1006],scale:[835,877,878,1011,1019,1067,1148,1156,1159,1160,1165,1166,1196,1204,1207,1212,1215],scaled_dot_product_attent:1148,scatter:[909,975,983,984],scatter_flat:[113,266,398,511,627,909],scatter_nd:[113,266,398,511,627,909],scene:[1011,1014,1016,1018,1019,1020],schemat:1179,screen:[40,41],search:[15,18,19,40,41],second:[40,41,835,866,909,918,931,939,979,987,997,1011,1013,1014,1018,1063,1065,1067,1212,1213,1214],secondli:1225,see:[43,59,368,791,792,794,819,835,847,848,849,850,885,909,912,966,967,1011,1046,1055,1173,1177,1179,1187,1189,1190,1192,1193,1195],seed:[40,41,161,737,1123],seed_valu:[40,41,1123,1128],seem:1179,seen_set:[909,953],select:[909,917,992,1222,1225],self:[40,41,43,59,368,794,819,835,847,848,849,850,885,1011,1067,1173,1177,1179,1187,1189,1190,1192,1193,1195,1212,1216,1221,1225],sent:1067,seper:[909,945],seq:[40,41,42,1130,1131,1208,1209],sequenc:[15,16,17,40,41,42,43,833,834,835,844,845,854,855,856,857,858,859,860,861,864,865,879,885,889,909,912,917,919,921,927,928,942,955,968,971,976,980,981,984,991,995,998,1003,1008,1009,1011,1015,1027,1031,1032,1034,1037,1040,1067,1111,1122,1123,1125,1127,1130,1132,1133,1134,1135,1136,1137,1138,1148,1149,1150,1151,1152,1153,1154,1155,1165,1166,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1205,1208,1209,1210,1211,1212,1216,1218,1219],sequenti:1179,set:[15,18,19,40,41,835,864,865,877,878,879,909,911,934,955,985,986,987,988,1011,1014,1016,1017,1018,1019,1020,1034,1037,1040,1067,1111,1112,1119,1121,1122,1123,1124,1128,1130,1132,1133,1134,1135,1136,1137,1138,1177,1179,1196,1205,1212,1213,1214,1215,1216,1217,1222,1225],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1177,set_debug_mod:44,set_default_devic:835,set_default_dtyp:885,set_default_float_dtyp:885,set_default_int_dtyp:885,set_default_nod:1067,set_exception_debug_mod:44,set_framework:[40,41,59,1067,1179,1221,1222,1225],set_ivy_backend:[40,41],set_min_bas:909,set_min_denomin:909,set_nest_at_index:1111,set_nest_at_indic:1111,set_param:1173,set_queue_timeout:909,set_split_factor:[835,1067],set_stat:[1212,1213,1214,1215,1216,1217],set_tmp_dir:909,set_with_grad:1011,setter:1067,sever:1225,sgd:[1179,1212],shape0:1067,shape:[40,41,43,627,835,847,885,889,909,910,921,923,927,928,941,942,943,944,946,948,952,955,975,976,977,980,981,982,983,984,990,992,995,1008,1009,1010,1027,1031,1034,1036,1046,1051,1052,1067,1123,1125,1126,1127,1130,1131,1148,1150,1152,1154,1173,1177,1196,1198,1199,1200,1201,1202,1203,1210,1211],shape_slic:[40,41],shape_to_tupl:909,share:[40,41,1179,1222],shift:1067,should:[40,41,42,43,780,782,794,819,833,834,835,909,921,922,929,975,981,1011,1014,1016,1018,1019,1020,1046,1055,1067,1130,1131,1179],show:[40,41,1173,1179,1225],show_debug_info:1173,show_graph:[1167,1179,1208,1209,1212,1216],show_mod_in_top_mod:[1208,1209],show_structur:[1208,1209],show_sub_contain:[40,41],show_v:[1208,1209],show_v_in_top_v:[1208,1209],shown:[40,41],shp:1067,shuffl:[40,41,161,737,1123],shuffle_h5_fil:[40,41],sigmoid:[753,1140,1179,1221],signatur:[43,59,368,835,847,848,849,850,885,1011,1173,1177,1187,1189,1190,1192,1193,1195],signific:1225,similar:[43,1148,1159,1196,1207],simpl:[43,909,940,1179,1222,1225],simplest:1222,simpli:[40,41,43,1179,1222,1225],simultan:1179,sin:[721,909,945,1046,1061,1222],sinco:1222,sine:[1046,1049,1050,1059,1060],singl:[40,41,833,834,835,844,845,864,865,866,867,909,992,1002,1006,1027,1032,1067,1123,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1179,1222,1225],singleton:[791,792],singular:[1034,1039],sinh:[721,1046],siren:[1179,1187],size:[40,41,42,835,858,859,860,861,877,878,879,909,912,921,966,967,983,991,1027,1031,1034,1037,1039,1040,1067,1123,1124,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1196,1197,1198],size_ordered_arrai:[40,41],skew:[1034,1041],skinv:1225,skip:[40,41],slice:[40,41,909,916,947,948,1067,1111,1118],slice_kei:[40,41],slice_obj:[40,41,1067],slice_via_kei:[40,41],slide:[1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203],slope:[1140,1142],small:[1161,1162,1163,1164,1165,1166,1179,1210,1211,1222],smaller:[909,924],smallest:[40,41,776,777,778,909,915,923],smallest_norm:[368,776,777],softmax:[177,461,753,1140,1148,1159,1160],softplu:[753,1140],solv:1225,some:[40,41,43,909,912,1011,1013,1014,1016,1018,1019,1020,1025,1148,1156,1179,1196,1204,1222,1225],some_backend:43,some_namespac:43,someth:[43,1225],something_cool:43,somewher:[40,41],sort:[40,41,42,909,916,1034,1039,1067],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,370,371,776,777,778,780,781,782,791,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1177,1182,1183,1184,1185,1186,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1223,1224,1225],space:[909,912,945,966,967],spars:[1161,1164],sparse_cross_entropi:1161,spawn:[909,973],specif:[40,41,43,835,877,909,929,936,937,938,973,1063,1064,1065,1066,1067,1123,1129,1179,1208,1209,1221,1222],specifc:[1123,1124],specifi:[40,41,43,791,792,835,854,855,856,857,858,859,860,861,864,865,869,871,875,878,879,880,885,889,891,909,912,914,915,917,924,927,928,946,947,948,954,966,967,995,1005,1008,1034,1037,1040,1067,1111,1116,1117,1121,1122,1130,1131,1132,1133,1134,1135,1136,1137,1138],split:[40,41,113,266,398,511,627,835,844,858,859,860,861,877,878,879,909,968,1067],split_arg:1067,split_factor:[835,844,1067],split_func_cal:[835,1067],split_siz:1067,spread:[835,867,1067],squar:[909,955,1034,1036],squeez:[113,266,398,511,627,909],stabil:[909,993,994],stabl:[909,950,951,985,986,993,994],stable_divid:909,stable_pow:909,stack:[40,41,266,627,909,1027,1032,1111,1112,1119,1196,1205],stack_imag:[152,325,440,558,706,1027],stacked_dim_s:1067,stage:43,standard:[40,41,43,776,777,1123,1126,1130,1136,1165,1166,1210,1211],start:[40,41,835,850,909,912,966,967,1067,1179,1222],starting_index:[40,41],starting_split_factor:[835,1067],state:[1067,1148,1158,1167,1168,1169,1173,1179,1182,1183,1184,1185,1186,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221],statement:1222,static_argnam:[833,834],static_argnum:[833,834],std:[1123,1126],step:[40,41,835,909,912,966,967,1011,1013,1014,1016,1018,1019,1020,1063,1064,1065,1066,1067,1179,1212,1213,1214,1215,1216,1217,1221,1225],stephen:1179,stick:1179,still:[40,41],stochast:[1212,1217],stop:[40,41,835,850,879,909,912,966,967,1011,1014,1016,1018,1019,1020,1022,1063,1064,1065,1066,1067,1212,1213,1214,1215,1216,1217],stop_gradi:[40,41,320,435,553,700,835,879,1011,1014,1016,1018,1019,1020,1063,1064,1065,1066,1067,1212,1213,1214,1215,1216,1217],stopiter:1067,store:[40,41,909,945,991,1011,1025,1208,1209],store_var:[1208,1209],str:[15,16,17,40,41,42,43,368,370,371,776,777,778,833,834,835,844,845,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,879,885,890,891,896,897,898,899,900,901,908,909,917,934,936,937,938,971,973,976,983,984,1034,1037,1040,1063,1064,1065,1066,1067,1111,1115,1130,1131,1185,1186,1196,1207,1208,1209],str_to_nod:1067,straight:1222,strength:[1179,1225],stride:[1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203],string:[40,41,43,835,851,853,862,863,868,874,880,881,884,885,889,895,897,898,899,908,909,912,917,934,955,976,977,1009,1010,1067,1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203,1208,1209],structur:[40,41,42,43,909,929],structural_diff:[40,41],sub:[40,41,835,858,859,864,865,866,867,909,991,1063,1064,1065,1066,1067],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1067,sub_mod:[1208,1209],sub_modul:[1218,1219],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1179,1180,1210,1211,1218,1219],subsequ:43,subset:43,substr:[40,41],suggest:1179,suitabl:[1027,1032],sum:[40,41,835,864,865,866,867,879,909,933,937,983,984,1067,1130,1131,1137],summat:[40,41,1130,1131],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,95,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,154,155,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,195,196,197,200,210,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,326,327,328,330,331,332,333,335,336,337,340,341,342,343,345,346,347,348,349,350,351,352,355,357,358,359,360,361,362,363,369,370,371,374,375,385,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,441,442,443,445,446,449,451,453,454,455,456,457,458,459,462,463,465,466,467,468,469,470,471,477,478,479,482,483,493,505,506,507,508,509,510,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,554,555,556,557,559,560,561,563,564,565,569,570,571,572,574,575,576,577,578,579,580,584,585,586,592,593,594,597,598,608,620,621,622,623,624,625,626,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,701,702,703,704,705,707,708,709,711,712,713,714,715,716,718,719,720,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,738,739,740,741,742,743,745,746,747,748,749,750,751,754,755,756,757,758,759,760,762,763,765,766,767,768,769,770,771,777,778,781,782,792,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1164,1166,1168,1169,1171,1172,1174,1178,1179,1183,1184,1186,1188,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1224,1225],supports_inplac:909,suppos:1225,svd:[329,562,710,1034],swap:[40,41,909,997],swapax:[40,41,511,627,909,1225],symmetr:[1034,1041],tab:1179,take:[909,965],taken:[1130,1132,1133,1134,1136,1138],tan:[721,1046,1051],tangent:[1046,1051,1052,1053,1061,1062,1140,1147],tanh:[721,753,1046,1140],target:[40,41,835,851,854,855,856,857,858,859,860,861,864,865,866,867,880,1067,1179],target_dict:[40,41],task:[1063,1064,1065,1066],team:1225,templat:1179,temporari:[909,988,999],tensor:[40,41,43,835,853,885,895,909,912,914,915,916,921,966,967,970,972,975,976,977,981,983,984,991,1009,1010,1067,1123,1124,1125,1148,1156,1158,1179,1196,1204,1206,1212,1213,1214,1215,1216,1217,1221,1222],tensorflow:[1148,1150,1152,1154,1179,1196,1198,1200,1202,1222,1225],term:[40,41,1148,1158,1179,1196,1206],termcolor:[40,41,42],termin:[40,41,42,1067],test:[780,782,791,792,885,900,901],tf_concat:1179,than:[40,41,776,777,835,879,909,912,923,924,943,962,970,992,995,1011,1017,1067,1123,1127,1179,1222],thei:[40,41,43,1046,1052,1063,1064,1065,1123,1124,1179,1218,1219,1222],them:[1179,1225],themselv:[1111,1112],therefor:43,thi:[40,41,42,43,835,857,861,867,874,879,884,909,912,945,979,981,987,1011,1014,1016,1017,1018,1019,1020,1025,1034,1037,1040,1067,1111,1115,1120,1130,1132,1133,1134,1135,1136,1137,1138,1148,1157,1179,1208,1209,1212,1213,1214,1215,1216,1217,1221,1222,1225],thing:[43,1179],those:[40,41,909,924,1011,1025,1034,1039,1067],though:43,threshold:[909,970,972],through:[40,41],tile:[266,511,627,909],time:[909,998,1011,1014,1018,1063,1064,1065,1066,1067,1123,1124,1148,1158,1196,1207,1208,1209,1225],time_chronolog:[1167,1168,1173],time_infer:[1167,1168],timeout:[40,41,42,835,844,845,909,979,987,1067],timestep:[1148,1158,1196,1205],timing_fnam:[1167,1168],titl:1179,tmp_dir:909,tmp_dr:[909,988],to_appli:[40,41],to_clon:[835,1067],to_dev:[40,41,106,260,504,619,835],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[835,1067],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1179],to_ivy_modul:[179,761,1179,1185],to_json:[40,41],to_kv_fn:[1148,1159],to_kv_v:[1148,1159],to_list:[40,41,627,909],to_multi_dev:[40,41],to_mut:[1111,1113,1120],to_n:[15,40,41,1179],to_nod:1067,to_numpi:[40,41,627,909,1179,1221],to_out_fn:[1148,1159],to_out_v:[1148,1159],to_q_fn:[1148,1159],to_q_v:[1148,1159],to_raw:[40,41],to_scalar:[627,909],todo:1067,togeth:[40,41,1218,1219],tool:[1179,1222],top_mod:[1208,1209],topic:1225,torch:[43,833,834,1179,1221,1222,1225],torch_concat:1179,torchfcmodel:1221,total:[40,41,42,835,881,1067],total_mem_on_dev:835,total_mem_on_nod:1067,tpu:[835,882,1067],tpu_is_avail:[504,619,835,1067],tpye:[885,896],trace:[40,41,909,962],track:[835,1067,1111,1120,1208,1209],track_submod_call_ord:[1208,1209],track_submod_ret:[1208,1209],trail:[1210,1211],train:[1011,1013,1014,1018,1179,1180],trainabl:[1011,1017,1179,1180,1185,1186,1208,1209,1218],trainer:1179,tran:1225,transform:[1148,1156,1157],transpos:[40,41,113,266,398,627,835,866,909,1067,1148,1150,1152,1154,1196,1198,1200,1202],travers:[15,18,19,40,41,1111,1120],treat:[40,41,833,834],tree_depth:1177,tree_height:1173,tri:[40,41],trigonometr:[780,781,1046,1047,1051,1059],trim_kei:[40,41],trust:[1011,1018,1212,1214],truth:[909,939,1042,1043,1044,1045],try_else_non:909,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[835,1067],tune_dev_alloc:835,tune_dev_split:835,tune_node_alloc:1067,tune_node_split:1067,tune_step:[835,1067],tupl:[15,16,17,18,19,40,41,43,791,792,833,834,909,928,945,946,990,1008,1067,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1125,1130,1132,1133,1134,1135,1136,1137,1138],two:[40,41,909,912,918,931,969,997,1034,1037,1039],type:[15,18,40,41,42,43,59,370,371,777,778,780,782,791,792,794,819,835,847,848,849,850,862,863,867,879,885,889,890,891,895,896,897,898,899,900,901,908,909,910,912,917,923,927,929,939,943,944,946,955,962,975,976,977,982,996,1006,1009,1010,1011,1017,1022,1046,1055,1067,1173,1177,1179,1187,1189,1190,1192,1193,1195,1208,1209,1222],types_to_iteratively_nest:[40,41,42],uint8:[1027,1029,1033],uint8_img_to_float_img:1027,unchang:[15,16,17,18,19],unif:1067,unifi:[40,41,835,864,865,866,867,879,1067,1179],uniform:[40,41,1123,1124,1126,1127,1187,1189,1190,1193,1194],uniformli:[1123,1125,1127],unify_arrai:1067,unify_it:1067,unify_nest:1067,union:[15,18,19,40,41,43,368,370,371,776,777,778,780,781,782,791,792,794,819,833,834,835,853,858,859,860,861,879,880,885,889,890,891,895,896,897,898,899,900,901,908,909,910,911,912,914,915,916,917,918,919,921,923,924,925,926,927,928,930,931,932,933,936,937,938,939,941,942,943,944,945,946,947,948,952,954,955,956,963,964,965,966,967,969,970,971,972,975,976,977,980,981,982,983,984,989,990,991,992,995,997,998,1000,1001,1002,1003,1005,1006,1007,1008,1009,1010,1067,1111,1112,1113,1119,1120],uniqu:[835,844,845,1063,1064,1065,1066,1067,1111,1115],unique_kwarg:1067,unit:[835,1046,1047,1049,1067,1140,1141,1142,1143],unitari:[1034,1039],unless:[909,975,977,1010],unlik:[835,1067],unnorm:[1123,1124],unpack:[909,1005],unrol:[1148,1158],unset:1222,unset_debug_mod:44,unset_default_devic:835,unset_default_dtyp:885,unset_default_float_dtyp:885,unset_default_int_dtyp:885,unset_framework:[59,1222],unset_with_grad:1011,unstack:[40,41,113,266,398,511,627,909],unus:[833,834],updat:[40,41,835,844,909,960,983,984,1011,1013,1014,1016,1018,1019,1020,1063,1064,1065,1067,1111,1116,1117,1121,1122,1148,1158,1185,1186,1212,1213,1214,1215,1216,1217,1222,1225],update_backend:[40,41],update_config:[40,41],update_inference_tim:1173,upper:[40,41,1123,1127],upper_depth:[1208,1209],usabl:[1179,1225],usag:[835,879,1067],use:[40,41,42,43,835,844,845,870,882,909,980,993,994,1067,1148,1159,1165,1166,1179,1210,1211,1222,1225],used:[40,41,43,835,844,874,877,878,884,885,896,909,950,951,968,977,983,984,985,986,1010,1011,1018,1019,1034,1037,1063,1064,1065,1066,1067,1111,1120,1196,1207,1212,1214,1215,1221,1222],used_dev:[835,844],used_mem_on_dev:835,used_mem_on_nod:1067,used_node_str:1067,used_node_strs_dict:1067,useful:[40,41,835,879,1067,1148,1157,1179,1222],user:[1179,1196,1207,1208,1209,1222,1225],uses:1179,using:[40,41,1011,1013,1014,1111,1114,1118,1130,1131,1148,1156,1160,1179,1196,1204,1221,1222,1225],util:[835,868,1067],utility_funct:[791,792],v_with_top_v_key_chain:[1208,1209],val:[40,41,794,829,909,958,959,960,985,986,1177],valid:[791,792,885,890,909,993,994,1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203],valid_dtyp:885,valu:[40,41,835,847,878,879,909,910,912,914,915,916,924,925,926,928,929,935,939,945,946,947,948,963,964,966,967,970,972,979,980,981,982,983,984,985,986,987,1003,1006,1007,1008,1011,1015,1018,1027,1033,1034,1039,1042,1043,1044,1045,1046,1056,1057,1058,1063,1064,1065,1067,1111,1115,1116,1117,1121,1122,1123,1126,1127,1130,1132,1134,1148,1159,1160,1165,1166,1173,1196,1207,1210,1211,1212,1214],value_is_nan:909,vanilla:[1063,1065],var_shap:1187,variabl:[15,16,17,18,19,40,41,320,435,553,700,909,920,958,959,960,961,962,996,1011,1014,1015,1016,1017,1018,1019,1020,1022,1025,1063,1064,1065,1066,1148,1159,1165,1166,1185,1186,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],variable_data:[700,1011],varianc:[40,41,1130,1138,1225],varieti:1222,variou:[43,1179],vector:[40,41,909,926,931,1034,1039,1040,1041,1148,1157,1196,1206],vector_norm:[40,41,1034],vector_to_skew_symmetric_matrix:[156,329,444,562,710,1034],verbos:1224,veri:[43,1179],version:43,via:[1111,1112,1119,1222],view:[1027,1032],vision:1179,visual:1222,volum:[1148,1153],vw_tm1:[1011,1014,1018],wai:[1222,1225],wait:[40,41,42],want:[1179,1222,1225],warn:[59,66,67,68,69,70],warp:[1027,1028],watch:1221,weight:[1011,1013,1014,1016,1018,1019,1020,1148,1157,1158,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1208,1209,1212,1214,1215],weight_initi:[1196,1197,1198,1199,1200,1201,1202,1203,1205,1206],weights_path:[1208,1209],well:[40,41,909,954],were:[40,41,1067],what:1179,when:[40,41,42,43,835,909,922,994,1007,1034,1039,1067,1179,1208,1209,1222,1225],where:[40,41,43,266,627,791,792,794,819,909,912,921,924,928,941,956,963,964,975,1008,1034,1039,1111,1112,1119,1123,1124],wherea:43,wherebi:[1111,1120],whether:[15,18,19,40,41,42,791,792,833,834,835,853,866,870,874,879,882,884,885,895,899,900,901,908,909,911,918,919,932,935,940,945,952,954,957,961,962,968,989,996,1005,1006,1011,1014,1015,1016,1017,1018,1019,1020,1022,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1140,1141,1148,1156,1179,1185,1186,1196,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],which:[40,41,42,43,776,777,778,791,792,833,834,835,844,845,853,858,859,860,861,864,865,866,867,869,871,875,877,878,879,885,890,895,899,908,909,912,917,927,929,931,932,933,935,942,946,947,948,949,955,956,965,966,967,974,975,976,977,978,980,983,984,991,995,1005,1007,1009,1010,1011,1014,1015,1016,1018,1019,1020,1022,1024,1025,1027,1029,1034,1037,1040,1046,1052,1067,1111,1115,1116,1117,1121,1122,1123,1124,1125,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1140,1145,1148,1159,1160,1179,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1221,1222],whitespac:[40,41,42],whose:[43,794,819,909,917,922,1130,1131,1132,1133,1134,1136,1138],why:[1179,1180],width:[1027,1032],wiki:1225,wikipedia:1225,window:[1027,1032,1148,1149,1150,1151,1152,1153,1154,1155,1196,1197,1198,1199,1200,1201,1202,1203],wise:[40,41,43,780,781,794,819,909,923,924,939,943,944,970,972,982,1011,1014,1016,1018,1020,1042,1043,1044,1045,1046,1047,1049,1051,1052,1055,1056,1057,1058,1059,1061,1140,1141,1142,1143,1144,1145,1146,1147],wish:1222,with_arg_label:[1167,1169,1173,1208,1209],with_array_cach:[1167,1168,1169,1173],with_bia:[1196,1206],with_cal:[909,935],with_default_key_color:[40,41],with_edge_label:[1167,1169,1173,1208,1209],with_entries_as_list:[40,41],with_grad:[1011,1021,1208,1209],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1067,with_output_label:[1167,1169,1173,1208,1209],with_partial_v:[1208,1209],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,909,991,1067],with_to_kv_fn:[1196,1207],with_to_out_fn:[1196,1207],with_to_q_fn:[1196,1207],within:[15,18,19,909,912,1034,1039,1123,1127],without:[40,41,43,909,979,981,987,1111,1113,1222],wonder:1179,word:[15,16,17,909,912,1123,1127,1185,1186],work:[43,1221],worker:[835,844,845,1067],worker_class:[835,844,845,1067],worker_kwarg:1067,would:[43,909,916,1140,1145,1179,1222,1225],wrap:[15,40,41,42,43,909,922,1011,1025,1179],wrapper:43,write:[40,41,43,1179,1180,1225],written:[43,1179,1225],ws_new:[1011,1014,1016,1018,1019,1020],x1_i:[909,939,1046,1055],x2_i:[909,939,1046,1055],x_feat_dim:[1148,1159],x_i:[780,782],x_in:[1179,1221],x_inv:[1034,1036],x_max:[909,924],x_min:[909,924],x_sub:1067,xkk:1225,xkkm1:1225,xkm1km1:1225,xs0:1067,xs_t:1067,year:[1179,1225],yet:[1111,1120,1225],yield:[909,1007],you:[1179,1221,1222,1225],your:[1179,1221,1222,1225],your_awesome_project:1222,yourself:1179,zero:[40,41,113,266,398,511,627,791,792,909,928,975,977,983,984,1008,1010,1011,1013,1014,1018,1019,1148,1156,1179,1187,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1212,1213,1214,1215],zero_pad:[266,511,627,909],zeros_lik:[113,266,398,511,627,909],zip:1067,zk_e:1225},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":935,"function":[77,78,83,86,88,89,90,91,92,93,94,193,194,199,201,203,204,205,206,207,208,209,367,368,373,376,378,379,380,381,382,383,384,475,476,481,484,486,487,488,489,490,491,492,590,591,596,599,601,602,603,604,605,606,607,775,776,780,783,785,786,787,788,789,790,791],Ones:1192,Using:1222,abs:[267,512,628,910],aco:[722,1047],acosh:[723,1048],activ:[177,354,461,582,753,1140,1182],adam:1213,adam_step:1013,adam_upd:1014,algebra:[87,88,202,203,377,378,485,486,600,601,784,785],all:[95,210,385,493,608,792],all_equ:911,all_nested_indic:1112,api:[0,43,75,97,191,212,365,387,473,495,588,610,773],arang:[114,268,399,513,629,912],arg_nam:913,argmax:[115,400,514,630,914],argmin:[116,401,515,631,915],args_to_ivi:16,args_to_n:17,argsort:[632,916],arithmet:[1,98,213,388,496,611],arrai:[0,3,43,75,96,97,99,117,191,211,212,214,221,269,365,386,387,389,402,473,494,495,497,516,588,609,610,612,633,773,794,917],array_equ:[270,634,918],arrays_equ:919,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[724,1049],asinh:[725,1050],assert_supports_inplac:920,atan2:[727,1052],atan:[726,1051],atanh:[728,1053],attribut:[5,100,215,390,498,613],backend:[43,73],bilinear_resampl:[153,326,441,559,707,1028],binary_cross_entropi:1162,bitwis:[7,101,216,391,499,614],broadcast_to:[271,635,921],builder:51,builtin:[96,211,221,386,494,609,794],builtin_ab:[222,795],builtin_add:[223,796],builtin_and:[224,797],builtin_bool:[225,798],builtin_contain:[226,799],builtin_deepcopi:[227,800],builtin_dir:[228,801],builtin_eq:[229,802],builtin_float:[230,803],builtin_floordiv:[231,804],builtin_g:[232,805],builtin_getattr:[233,806],builtin_getattribut:[234,807],builtin_getitem:[235,808],builtin_gt:[236,809],builtin_int:[237,810],builtin_invert:[238,811],builtin_l:[239,812],builtin_lt:[240,813],builtin_mul:[241,814],builtin_n:[242,815],builtin_neg:[243,816],builtin_or:[244,817],builtin_po:[245,818],builtin_pow:[246,819],builtin_radd:[247,820],builtin_rand:[248,821],builtin_rfloordiv:[249,822],builtin_rmul:[250,823],builtin_ror:[251,824],builtin_rpow:[252,825],builtin_rsub:[253,826],builtin_rtruediv:[254,827],builtin_rxor:[255,828],builtin_setitem:[256,829],builtin_sub:[257,830],builtin_truediv:[258,831],builtin_xor:[259,832],cache_fn:922,cast:[118,272,403,517,636,889],ceil:[273,637,923],choleski:[711,1035],choose_random_framework:61,citat:1179,clear_framework_stack:62,clear_mem_on_dev:[621,851],clip:[274,638,924],clip_matrix_norm:925,clip_vector_norm:926,clone:1082,clone_arrai:1083,clone_it:1084,clone_nest:1085,clonedit:1069,cloneditem:1068,clonednest:1070,closest_valid_dtyp:890,code:1225,comparison:[9,102,217,392,500,615],compil:[275,404,639,833,834,1167],compile_graph:1168,concaten:[119,276,405,518,640,927],constant:[76,192,366,474,589,774],constant_pad:[277,519,641,928],contain:[40,41],container_typ:[642,929],content:1179,contribut:43,conv1d:[183,357,465,765,1149,1197],conv1d_transpos:[184,358,466,766,1150],conv1dtranspos:1198,conv2d:[185,359,467,584,767,1151,1199],conv2d_transpos:[186,360,468,768,1152],conv2dtranspos:1200,conv3d:[187,361,469,585,769,1153,1201],conv3d_transpos:[188,362,470,770,1154],conv3dtranspos:1202,convers:15,convert:[179,761,1185],convert_dtyp:891,copy_arrai:[643,930],copy_nest:1113,core:[105,220,395,503,618,793],cos:[84,374,482,597,781],cosh:[729,1054],cprint:1224,creation:[77,193,367,475,590,775],cross:[278,644,931],cross_entropi:1163,cumprod:[120,279,406,645,932],cumsum:[646,933],current_framework:63,current_framework_str:[647,934],data:[78,82,194,198,368,372,476,480,591,595,776,779],debug_mod:45,debugg:44,default_devic:852,default_dtyp:892,default_float_dtyp:893,default_int_dtyp:894,default_nod:1086,depthwise_conv2d:[189,363,471,586,771,1155],depthwiseconv2d:1203,design:43,dev:[108,262,506,622,853],dev_clon:854,dev_clone_arrai:855,dev_clone_it:856,dev_clone_nest:857,dev_dist:858,dev_dist_arrai:859,dev_dist_it:860,dev_dist_nest:861,dev_from_str:[109,263,507,623,862],dev_to_str:[110,264,508,624,863],dev_unifi:864,dev_unify_arrai:865,dev_unify_it:866,dev_unify_nest:867,dev_util:868,devclonedit:838,devcloneditem:837,devclonednest:839,devdistit:841,devdistitem:840,devdistnest:842,devic:[20,106,260,396,504,619,835],devmapp:844,devmappermultiproc:845,distribute_nest:1087,divid:1055,document:1179,dropout:[1156,1204],dtype:[121,280,407,520,648,885,895],dtype_bit:[122,281,408,521,649,896],dtype_from_str:[123,282,409,522,650,897],dtype_to_str:[124,283,410,523,651,898],ecosystem:52,einops_rearrang:936,einops_reduc:937,einops_repeat:938,einsum:[169,345,453,574,745,1131],elementwis:[83,199,373,481,596,780],equal:[524,652,939],erf:[449,730,1056],execute_with_gradi:[150,321,436,554,701,1015],exist:940,exp:[731,1057],expand_dim:[284,653,941],extens:[87,202,377,485,600,784],finfo:[80,196,370,478,593,777],firstlayersiren:1189,flip:[125,285,411,525,654,942],float_img_to_uint8_img:1029,floor:[286,655,943],floormod:[287,656,944],fomaml_step:1064,fourier_encod:945,framework:59,full:[126,288,412,526,657,946],func:72,gather:[127,289,413,527,658,947],gather_nd:[128,290,414,528,659,948],geglu:1183,gelu:[355,462,754,1141,1184],gener:[22,113,266,398,511,627,909],get_all_arrays_in_memori:949,get_all_arrays_on_dev:869,get_framework:64,get_min_bas:950,get_min_denomin:951,get_num_dim:[660,952],get_referrers_recurs:953,global:1170,glorotuniform:1190,gpu_is_avail:[870,1088],gradient:[24,149,320,435,553,700,1011],gradient_descent_upd:1016,gradient_imag:[154,327,442,560,708,1030],graph:1173,gym:53,handler:59,has_nan:954,helper:1175,ident:[129,291,415,529,661,955],iinfo:[81,197,371,479,594,778],imag:[26,152,325,440,558,706,1027],index_nest:1114,indices_wher:[130,292,416,662,956],initi:1187,inplac:[11,103,218,393,501,616],inplace_arrays_support:957,inplace_decr:[131,293,417,530,663,958],inplace_incr:[132,294,418,531,664,959],inplace_upd:[133,295,419,532,665,960],inplace_variables_support:961,inv:[712,1036],invalid_dtyp:899,is_arrai:[134,296,420,533,666,962],is_float_dtyp:900,is_int_dtyp:901,is_vari:[151,322,437,555,702,1017],isfinit:[85,200,375,483,598,782],isinf:[297,534,667,963],isnan:[298,535,668,964],ivi:[43,50,51,52,53,54,55,56,57,58,772,1221,1222,1225],ivymodul:[180,762],jax:74,lamb:1214,lamb_upd:1018,lar:1215,lars_upd:1019,layer:[182,356,464,583,764,1148,1196],layer_norm:1166,layernorm:1211,leaky_relu:[755,1142],linalg:[28,156,329,444,562,710,1034],linear:[87,88,202,203,377,378,485,486,600,601,784,785,1157,1206],linear_resampl:[135,299,421,536,669,965],linspac:[136,300,422,537,670,966],log:[732,1058,1176],log_global_inference_abs_tim:1171,log_global_inference_rel_tim:1172,logic:[30,159,334,447,566,717,1042],logical_and:[335,718,1043],logical_not:[336,719,1044],logical_or:[337,720,1045],logspac:[137,301,423,538,671,967],loss:1161,lstm:1205,lstm_updat:1158,maml_step:1065,manipul:[89,204,379,487,602,786],map:1115,map_nest_at_index:1116,map_nest_at_indic:1117,match_kwarg:968,math:[32,160,338,448,567,721,1046],matmul:[302,539,672,969],matrix_norm:[157,330,445,563,713,1037],maximum:[673,970],mech:54,memori:55,meshgrid:[303,674,971],meta:[34,1063],method:[86,201,376,484,599,783],minimum:[675,972],model:56,modul:[1208,1209,1221],multi:1067,multi_head_attent:1159,multi_index_nest:1118,multidevcontain:42,multidevit:848,multidevitem:847,multidevnest:849,multiheadattent:1207,multinodeit:1073,multinodeitem:1072,multinodenest:1074,multinomi:[162,340,451,569,738,1124],multiprocess:[676,973],mxnet:190,nativ:1221,nest:1111,nested_indices_wher:1119,nested_map:1120,network:1221,next:1179,node:[1067,1089],node_dist:1090,node_dist_arrai:1091,node_dist_it:1092,node_str:1093,node_to_str:1094,node_util:1095,nodedistit:1076,nodedistitem:1075,nodedistnest:1077,nodemapp:1079,nodemappermultiproc:1080,norm:[1165,1210],num_arrays_in_memori:974,num_arrays_on_dev:871,num_cpu_cor:872,num_gpu:[111,873,1096],numpi:364,nutshel:1179,one_hot:[138,424,540,677,975],ones:[139,304,425,541,678,976],ones_lik:[140,305,426,542,679,977],oper:[1,3,7,9,11,13,43,98,99,101,102,103,104,213,214,216,217,218,219,388,389,391,392,393,394,496,497,499,500,501,502,611,612,614,615,616,617],optim:[1212,1216],optimizer_upd:1020,overview:1179,param:1177,percent_used_mem_on_dev:874,percent_used_mem_on_nod:1097,pinv:[331,714,1038],portabl:1225,print_all_arrays_in_memori:978,print_all_arrays_on_dev:875,profil:[107,261,397,505,620,850,1081],queue_timeout:979,randint:[163,341,570,739,1125],random:[36,161,339,450,568,737,1123],random_crop:1031,random_norm:[164,342,571,740,1126],random_uniform:[165,343,572,741,1127],reduce_max:[170,346,454,575,746,1132],reduce_mean:[171,347,455,576,747,1133],reduce_min:[172,348,456,577,748,1134],reduce_prod:[173,349,457,578,749,1135],reduce_std:[350,1136],reduce_sum:[174,351,458,579,750,1137],reduce_var:[175,352,459,580,751,1138],reduct:[38,168,344,452,573,744,1130],reflect:[13,104,219,394,502,617],relu:[756,1143],repeat:[306,680,980],reptile_step:1066,reshap:[681,981],robot:57,round:[307,682,982],run:1222,scaled_dot_product_attent:1160,scatter_flat:[141,308,427,543,683,983],scatter_nd:[142,309,428,544,684,984],search:[90,205,380,488,603,787],seed:[166,742,1128],sequenti:[1218,1219],set:[91,206,381,489,604,788],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:876,set_default_dtyp:902,set_default_float_dtyp:903,set_default_int_dtyp:904,set_default_nod:1098,set_exception_debug_mod:48,set_framework:65,set_min_bas:985,set_min_denomin:986,set_nest_at_index:1121,set_nest_at_indic:1122,set_queue_timeout:987,set_split_factor:[877,1099],set_tmp_dir:988,set_with_grad:1021,sgd:1217,shape:[685,989],shape_to_tupl:990,show_graph:1169,shuffl:[167,743,1129],sigmoid:[757,1144],signatur:[86,201,376,484,599,783],sin:[733,1059],sinh:[734,1060],siren:1193,softmax:[178,463,758,1145],softplu:[759,1146],sort:[92,207,382,490,605,789],sparse_cross_entropi:1164,split:[143,310,429,545,686,991],split_factor:[878,1100],split_func_cal:[879,1101],squeez:[144,311,430,546,687,992],stable_divid:993,stable_pow:994,stack:[312,688,995],stack_imag:[155,328,443,561,709,1032],statist:[93,208,383,491,606,790],stop_gradi:[323,438,556,703,1022],str_to_nod:1102,submodul:43,supports_inplac:996,svd:[332,564,715,1039],swapax:[547,689,997],tan:[735,1061],tanh:[736,760,1062,1147],tensorflow:472,tile:[313,548,690,998],tmp_dir:999,to_dev:[112,265,509,625,880],to_ivi:18,to_ivy_modul:[181,763,1186],to_list:[691,1000],to_n:19,to_nod:1103,to_numpi:[692,1001],to_scalar:[693,1002],torch:587,total_mem_on_dev:881,total_mem_on_nod:1104,tpu_is_avail:[510,626,882,1105],train:1221,trainabl:1221,transpos:[145,314,431,694,1003],tree:1179,try_else_non:1004,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,194,198,368,372,476,480,591,595,776,779],uint8_img_to_float_img:1033,unifi:1106,unify_arrai:1107,unify_it:1108,unify_nest:1109,unset_debug_mod:49,unset_default_devic:883,unset_default_dtyp:905,unset_default_float_dtyp:906,unset_default_int_dtyp:907,unset_framework:71,unset_with_grad:1023,unstack:[146,315,432,549,695,1005],used_mem_on_dev:884,used_mem_on_nod:1110,util:[94,209,384,492,607,791],valid_dtyp:908,value_is_nan:1006,variabl:[324,439,557,704,1024],variable_data:[705,1025],vector_norm:1040,vector_to_skew_symmetric_matrix:[158,333,446,565,716,1041],verbos:1223,vision:58,where:[316,696,1007,1179],why:1225,with_grad:1026,wrapper:72,write:1222,zero:[147,318,433,551,698,1009,1195],zero_pad:[317,550,697,1008],zeros_lik:[148,319,434,552,699,1010]}})
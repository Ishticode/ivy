Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/isfinite","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/math/cos","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/all","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isfinite","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/all","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/isfinite","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/cos","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/all","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isfinite","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/math/cos","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/all","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isfinite","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/all","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/finfo","functional/ivy/core/dtype/iinfo","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isfinite","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/all","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/isfinite.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/math/cos.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/all.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isfinite.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/all.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/isfinite.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/cos.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/all.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isfinite.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/math/cos.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/all.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isfinite.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/all.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/finfo.rst","functional/ivy/core/dtype/iinfo.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isfinite.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/all.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[761,0,0,"-"]},"ivy.functional.backends.numpy":{array_api:[360,0,0,"-"],array_builtins:[376,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[361,0,0,"-"],creation_functions:[362,0,0,"-"],data_type_functions:[363,0,0,"-"],data_types:[364,0,0,"-"],elementwise_functions:[365,0,0,"-"],function_and_method_signatures:[367,0,0,"-"],linear_algebra_extension:[368,0,0,"-"],linear_algebra_functions:[369,0,0,"-"],manipulation_functions:[370,0,0,"-"],searching_functions:[371,0,0,"-"],set_functions:[372,0,0,"-"],sorting_functions:[373,0,0,"-"],statistical_functions:[374,0,0,"-"],utility_functions:[375,0,0,"-"]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{cos:[366,2,1,""]},"ivy.functional.backends.numpy.array_builtins":{array_api:[377,0,0,"-"]},"ivy.functional.backends.numpy.array_builtins.array_api":{arithmetic_operators:[378,0,0,"-"],array_operators:[379,0,0,"-"],attributes:[380,0,0,"-"],bitwise_operators:[381,0,0,"-"],comparison_operators:[382,0,0,"-"],inplace_operators:[383,0,0,"-"],reflected_operators:[384,0,0,"-"]},"ivy.functional.backends.numpy.core":{device:[386,0,0,"-"],general:[388,0,0,"-"],gradients:[426,0,0,"-"],image:[431,0,0,"-"],linalg:[435,0,0,"-"],logic:[438,0,0,"-"],math:[439,0,0,"-"],random:[442,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[387,1,1,""],clear_mem_on_dev:[386,2,1,""],dev:[386,2,1,""],dev_from_str:[386,2,1,""],dev_to_str:[386,2,1,""],gpu_is_available:[386,2,1,""],num_gpus:[386,2,1,""],to_dev:[386,2,1,""],tpu_is_available:[386,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[387,3,1,""],start:[387,3,1,""],stop:[387,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[388,2,1,""],arange:[389,2,1,""],argmax:[390,2,1,""],argmin:[391,2,1,""],argsort:[388,2,1,""],array:[392,2,1,""],asarray:[388,2,1,""],astype:[388,2,1,""],cast:[393,2,1,""],ceil:[388,2,1,""],clip:[388,2,1,""],compile:[394,2,1,""],concatenate:[395,2,1,""],constant_pad:[388,2,1,""],container_types:[388,2,1,""],copy_array:[388,2,1,""],cumprod:[396,2,1,""],current_framework_str:[388,2,1,""],dtype:[397,2,1,""],dtype_bits:[398,2,1,""],dtype_from_str:[399,2,1,""],dtype_to_str:[400,2,1,""],equal:[388,2,1,""],flip:[401,2,1,""],floor:[388,2,1,""],floormod:[388,2,1,""],full:[402,2,1,""],gather:[403,2,1,""],gather_nd:[404,2,1,""],get_num_dims:[388,2,1,""],identity:[405,2,1,""],indices_where:[406,2,1,""],inplace_arrays_supported:[388,2,1,""],inplace_decrement:[407,2,1,""],inplace_increment:[408,2,1,""],inplace_update:[409,2,1,""],inplace_variables_supported:[388,2,1,""],is_array:[410,2,1,""],isfinite:[411,2,1,""],linear_resample:[412,2,1,""],linspace:[413,2,1,""],logspace:[414,2,1,""],matmul:[388,2,1,""],meshgrid:[388,2,1,""],multiprocessing:[388,2,1,""],one_hot:[415,2,1,""],ones:[416,2,1,""],ones_like:[417,2,1,""],round:[388,2,1,""],scatter_flat:[418,2,1,""],scatter_nd:[419,2,1,""],shape:[388,2,1,""],split:[420,2,1,""],squeeze:[421,2,1,""],to_list:[388,2,1,""],to_numpy:[388,2,1,""],to_scalar:[388,2,1,""],transpose:[422,2,1,""],unstack:[423,2,1,""],where:[388,2,1,""],zero_pad:[388,2,1,""],zeros:[424,2,1,""],zeros_like:[425,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[427,2,1,""],is_variable:[428,2,1,""],stop_gradient:[429,2,1,""],variable:[430,2,1,""],variable_data:[426,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[432,2,1,""],gradient_image:[433,2,1,""],stack_images:[434,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[436,2,1,""],vector_to_skew_symmetric_matrix:[437,2,1,""]},"ivy.functional.backends.numpy.core.math":{cos:[440,2,1,""],erf:[441,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[443,2,1,""],randint:[442,2,1,""],random_normal:[442,2,1,""],random_uniform:[442,2,1,""],seed:[442,2,1,""],shuffle:[442,2,1,""]},"ivy.functional.ivy":{array_api:[762,0,0,"-"],core:[778,0,0,"-"],nn:[1129,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[763,0,0,"-"],creation_functions:[764,0,0,"-"],data_type_functions:[765,0,0,"-"],data_types:[766,0,0,"-"],elementwise_functions:[767,0,0,"-"],function_and_method_signatures:[769,0,0,"-"],linear_algebra_extension:[770,0,0,"-"],linear_algebra_functions:[771,0,0,"-"],manipulation_functions:[772,0,0,"-"],searching_functions:[773,0,0,"-"],set_functions:[774,0,0,"-"],sorting_functions:[775,0,0,"-"],statistical_functions:[776,0,0,"-"],utility_functions:[777,0,0,"-"]},"ivy.functional.ivy.array_api.elementwise_functions":{cos:[768,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[779,0,0,"-"],compilation:[818,0,0,"-"],device:[820,0,0,"-"],dtype:[870,0,0,"-"],general:[896,0,0,"-"],gradients:[999,0,0,"-"],image:[1015,0,0,"-"],linalg:[1022,0,0,"-"],logic:[1030,0,0,"-"],math:[1034,0,0,"-"],meta:[1052,0,0,"-"],multi_node:[1056,0,0,"-"],nest:[1100,0,0,"-"],random:[1112,0,0,"-"],reductions:[1119,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[780,2,1,""],builtin_add:[781,2,1,""],builtin_and:[782,2,1,""],builtin_bool:[783,2,1,""],builtin_contains:[784,2,1,""],builtin_deepcopy:[785,2,1,""],builtin_dir:[786,2,1,""],builtin_eq:[787,2,1,""],builtin_float:[788,2,1,""],builtin_floordiv:[789,2,1,""],builtin_ge:[790,2,1,""],builtin_getattr:[791,2,1,""],builtin_getattribute:[792,2,1,""],builtin_getitem:[793,2,1,""],builtin_gt:[794,2,1,""],builtin_int:[795,2,1,""],builtin_invert:[796,2,1,""],builtin_le:[797,2,1,""],builtin_lt:[798,2,1,""],builtin_mul:[799,2,1,""],builtin_ne:[800,2,1,""],builtin_neg:[801,2,1,""],builtin_or:[802,2,1,""],builtin_pos:[803,2,1,""],builtin_pow:[804,2,1,""],builtin_radd:[805,2,1,""],builtin_rand:[806,2,1,""],builtin_rfloordiv:[807,2,1,""],builtin_rmul:[808,2,1,""],builtin_ror:[809,2,1,""],builtin_rpow:[810,2,1,""],builtin_rsub:[811,2,1,""],builtin_rtruediv:[812,2,1,""],builtin_rxor:[813,2,1,""],builtin_setitem:[814,2,1,""],builtin_sub:[815,2,1,""],builtin_truediv:[816,2,1,""],builtin_xor:[817,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[819,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[820,1,1,""],DevClonedItem:[822,1,1,""],DevClonedIter:[823,1,1,""],DevClonedNest:[824,1,1,""],DevDistItem:[825,1,1,""],DevDistIter:[826,1,1,""],DevDistNest:[827,1,1,""],DevManager:[820,1,1,""],DevMapper:[829,1,1,""],DevMapperMultiProc:[830,1,1,""],MultiDev:[820,1,1,""],MultiDevItem:[832,1,1,""],MultiDevIter:[833,1,1,""],MultiDevNest:[834,1,1,""],Profiler:[835,1,1,""],clear_mem_on_dev:[836,2,1,""],default_device:[837,2,1,""],dev:[838,2,1,""],dev_clone:[839,2,1,""],dev_clone_array:[840,2,1,""],dev_clone_iter:[841,2,1,""],dev_clone_nest:[842,2,1,""],dev_dist:[843,2,1,""],dev_dist_array:[844,2,1,""],dev_dist_iter:[845,2,1,""],dev_dist_nest:[846,2,1,""],dev_from_str:[847,2,1,""],dev_to_str:[848,2,1,""],dev_unify:[849,2,1,""],dev_unify_array:[850,2,1,""],dev_unify_iter:[851,2,1,""],dev_unify_nest:[852,2,1,""],dev_util:[853,2,1,""],get_all_arrays_on_dev:[854,2,1,""],gpu_is_available:[855,2,1,""],num_arrays_on_dev:[856,2,1,""],num_cpu_cores:[857,2,1,""],num_gpus:[858,2,1,""],percent_used_mem_on_dev:[859,2,1,""],print_all_arrays_on_dev:[860,2,1,""],set_default_device:[861,2,1,""],set_split_factor:[862,2,1,""],split_factor:[863,2,1,""],split_func_call:[864,2,1,""],to_dev:[865,2,1,""],total_mem_on_dev:[866,2,1,""],tpu_is_available:[867,2,1,""],unset_default_device:[868,2,1,""],used_mem_on_dev:[869,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[820,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[820,3,1,""],da_tune_step:[820,3,1,""],dim_size:[820,3,1,""],ds_tune_step:[820,3,1,""],map:[820,3,1,""],repeated_config_check:[820,3,1,""],tune_step:[820,3,1,""],tuned:[820,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[829,3,1,""],map:[829,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[830,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[820,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[832,3,1,""],items:[832,3,1,""],keys:[832,3,1,""],shape:[832,3,1,""],values:[832,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[833,3,1,""],at_dev:[833,3,1,""],at_devs:[833,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[834,3,1,""],at_dev:[834,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[835,3,1,""],start:[835,3,1,""],stop:[835,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[870,1,1,""],DefaultFloatDtype:[870,1,1,""],DefaultIntDtype:[870,1,1,""],astype:[870,2,1,""],cast:[874,2,1,""],closest_valid_dtype:[875,2,1,""],convert_dtype:[876,2,1,""],default_dtype:[877,2,1,""],default_float_dtype:[878,2,1,""],default_int_dtype:[879,2,1,""],dtype:[880,2,1,""],dtype_bits:[881,2,1,""],dtype_from_str:[882,2,1,""],dtype_to_str:[883,2,1,""],finfo:[884,2,1,""],iinfo:[885,2,1,""],invalid_dtype:[886,2,1,""],is_float_dtype:[887,2,1,""],is_int_dtype:[888,2,1,""],set_default_dtype:[889,2,1,""],set_default_float_dtype:[890,2,1,""],set_default_int_dtype:[891,2,1,""],unset_default_dtype:[892,2,1,""],unset_default_float_dtype:[893,2,1,""],unset_default_int_dtype:[894,2,1,""],valid_dtype:[895,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[870,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[870,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[870,3,1,""]},"ivy.functional.ivy.core.general":{"default":[922,2,1,""],abs:[897,2,1,""],all_equal:[898,2,1,""],arange:[899,2,1,""],arg_names:[900,2,1,""],argmax:[901,2,1,""],argmin:[902,2,1,""],argsort:[903,2,1,""],array:[904,2,1,""],array_equal:[905,2,1,""],arrays_equal:[906,2,1,""],asarray:[896,2,1,""],assert_supports_inplace:[907,2,1,""],broadcast_to:[908,2,1,""],cache_fn:[909,2,1,""],ceil:[910,2,1,""],clip:[911,2,1,""],clip_matrix_norm:[912,2,1,""],clip_vector_norm:[913,2,1,""],concatenate:[914,2,1,""],constant_pad:[915,2,1,""],container_types:[916,2,1,""],copy_array:[917,2,1,""],cross:[918,2,1,""],cumprod:[919,2,1,""],cumsum:[920,2,1,""],current_framework_str:[921,2,1,""],einops_rearrange:[923,2,1,""],einops_reduce:[924,2,1,""],einops_repeat:[925,2,1,""],equal:[926,2,1,""],exists:[927,2,1,""],expand_dims:[928,2,1,""],flip:[929,2,1,""],floor:[930,2,1,""],floormod:[931,2,1,""],fourier_encode:[932,2,1,""],full:[933,2,1,""],gather:[934,2,1,""],gather_nd:[935,2,1,""],get_all_arrays_in_memory:[936,2,1,""],get_min_base:[937,2,1,""],get_min_denominator:[938,2,1,""],get_num_dims:[939,2,1,""],get_referrers_recursive:[940,2,1,""],has_nans:[941,2,1,""],identity:[942,2,1,""],indices_where:[943,2,1,""],inplace_arrays_supported:[944,2,1,""],inplace_decrement:[945,2,1,""],inplace_increment:[946,2,1,""],inplace_update:[947,2,1,""],inplace_variables_supported:[948,2,1,""],is_array:[949,2,1,""],isfinite:[950,2,1,""],isinf:[951,2,1,""],isnan:[952,2,1,""],linear_resample:[953,2,1,""],linspace:[954,2,1,""],logspace:[955,2,1,""],match_kwargs:[956,2,1,""],matmul:[957,2,1,""],maximum:[958,2,1,""],meshgrid:[959,2,1,""],minimum:[960,2,1,""],multiprocessing:[961,2,1,""],num_arrays_in_memory:[962,2,1,""],one_hot:[963,2,1,""],ones:[964,2,1,""],ones_like:[965,2,1,""],print_all_arrays_in_memory:[966,2,1,""],queue_timeout:[967,2,1,""],repeat:[968,2,1,""],reshape:[969,2,1,""],round:[970,2,1,""],scatter_flat:[971,2,1,""],scatter_nd:[972,2,1,""],set_min_base:[973,2,1,""],set_min_denominator:[974,2,1,""],set_queue_timeout:[975,2,1,""],set_tmp_dir:[976,2,1,""],shape:[977,2,1,""],shape_to_tuple:[978,2,1,""],split:[979,2,1,""],squeeze:[980,2,1,""],stable_divide:[981,2,1,""],stable_pow:[982,2,1,""],stack:[983,2,1,""],supports_inplace:[984,2,1,""],swapaxes:[985,2,1,""],tile:[986,2,1,""],tmp_dir:[987,2,1,""],to_list:[988,2,1,""],to_numpy:[989,2,1,""],to_scalar:[990,2,1,""],transpose:[991,2,1,""],try_else_none:[992,2,1,""],unstack:[993,2,1,""],value_is_nan:[994,2,1,""],where:[995,2,1,""],zero_pad:[996,2,1,""],zeros:[997,2,1,""],zeros_like:[998,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[999,1,1,""],adam_step:[1001,2,1,""],adam_update:[1002,2,1,""],execute_with_gradients:[1003,2,1,""],gradient_descent_update:[1004,2,1,""],is_variable:[1005,2,1,""],lamb_update:[1006,2,1,""],lars_update:[1007,2,1,""],optimizer_update:[1008,2,1,""],set_with_grads:[1009,2,1,""],stop_gradient:[1010,2,1,""],unset_with_grads:[1011,2,1,""],variable:[1012,2,1,""],variable_data:[1013,2,1,""],with_grads:[1014,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[999,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1016,2,1,""],float_img_to_uint8_img:[1017,2,1,""],gradient_image:[1018,2,1,""],random_crop:[1019,2,1,""],stack_images:[1020,2,1,""],uint8_img_to_float_img:[1021,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1023,2,1,""],inv:[1024,2,1,""],matrix_norm:[1025,2,1,""],pinv:[1026,2,1,""],svd:[1027,2,1,""],vector_norm:[1028,2,1,""],vector_to_skew_symmetric_matrix:[1029,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1031,2,1,""],logical_not:[1032,2,1,""],logical_or:[1033,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1035,2,1,""],acosh:[1036,2,1,""],asin:[1037,2,1,""],asinh:[1038,2,1,""],atan2:[1040,2,1,""],atan:[1039,2,1,""],atanh:[1041,2,1,""],cos:[1042,2,1,""],cosh:[1043,2,1,""],divide:[1044,2,1,""],erf:[1045,2,1,""],exp:[1046,2,1,""],log:[1047,2,1,""],sin:[1048,2,1,""],sinh:[1049,2,1,""],tan:[1050,2,1,""],tanh:[1051,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1053,2,1,""],maml_step:[1054,2,1,""],reptile_step:[1055,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1056,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1101,2,1,""],copy_nest:[1102,2,1,""],index_nest:[1103,2,1,""],map:[1104,2,1,""],map_nest_at_index:[1105,2,1,""],map_nest_at_indices:[1106,2,1,""],multi_index_nest:[1107,2,1,""],nested_indices_where:[1108,2,1,""],nested_map:[1109,2,1,""],set_nest_at_index:[1110,2,1,""],set_nest_at_indices:[1111,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1113,2,1,""],randint:[1114,2,1,""],random_normal:[1115,2,1,""],random_uniform:[1116,2,1,""],seed:[1117,2,1,""],shuffle:[1118,2,1,""]},"ivy.functional.ivy.core.reductions":{all:[1120,2,1,""],einsum:[1121,2,1,""],reduce_max:[1122,2,1,""],reduce_mean:[1123,2,1,""],reduce_min:[1124,2,1,""],reduce_prod:[1125,2,1,""],reduce_std:[1126,2,1,""],reduce_sum:[1127,2,1,""],reduce_var:[1128,2,1,""]},"ivy.functional.ivy.nn":{activations:[1130,0,0,"-"],layers:[1138,0,0,"-"],losses:[1151,0,0,"-"],norms:[1155,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1131,2,1,""],leaky_relu:[1132,2,1,""],relu:[1133,2,1,""],sigmoid:[1134,2,1,""],softmax:[1135,2,1,""],softplus:[1136,2,1,""],tanh:[1137,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1139,2,1,""],conv1d_transpose:[1140,2,1,""],conv2d:[1141,2,1,""],conv2d_transpose:[1142,2,1,""],conv3d:[1143,2,1,""],conv3d_transpose:[1144,2,1,""],depthwise_conv2d:[1145,2,1,""],dropout:[1146,2,1,""],linear:[1147,2,1,""],lstm_update:[1148,2,1,""],multi_head_attention:[1149,2,1,""],scaled_dot_product_attention:[1150,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1152,2,1,""],cross_entropy:[1153,2,1,""],sparse_cross_entropy:[1154,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1156,2,1,""]},"ivy.graph_compiler":{compiler:[1157,0,0,"-"],globals:[1160,0,0,"-"],graph:[1163,0,0,"-"],helpers:[1165,0,0,"-"],op_logging:[1166,0,0,"-"],param:[1167,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1158,2,1,""],show_graph:[1159,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1161,2,1,""],log_global_inference_rel_times:[1162,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1163,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1163,3,1,""],add_fn_to_dict:[1163,3,1,""],add_param:[1163,3,1,""],compiled:[1163,3,1,""],connect:[1163,3,1,""],debug_info:[1163,3,1,""],get_param:[1163,3,1,""],get_param_recursive:[1163,3,1,""],include_generators:[1163,3,1,""],increment_param_count:[1163,3,1,""],log_all_ops:[1163,3,1,""],params_all_empty:[1163,3,1,""],save_debug_info:[1163,3,1,""],set_param:[1163,3,1,""],show:[1163,3,1,""],show_debug_info:[1163,3,1,""],update_inference_times:[1163,3,1,""],with_array_caching:[1163,3,1,""]},"ivy.graph_compiler.param":{Param:[1167,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1167,3,1,""],count:[1167,3,1,""],depth:[1167,3,1,""],get:[1167,3,1,""],is_var:[1167,3,1,""],ptype:[1167,3,1,""],set:[1167,3,1,""],set_count:[1167,3,1,""],shape:[1167,3,1,""]},"ivy.stateful":{activations:[1172,0,0,"-"],converters:[1175,0,0,"-"],initializers:[1177,0,0,"-"],layers:[1186,0,0,"-"],module:[1198,0,0,"-"],norms:[1200,0,0,"-"],optimizers:[1202,0,0,"-"],sequential:[1208,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1173,1,1,""],GELU:[1174,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1173,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1174,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1176,2,1,""]},"ivy.stateful.initializers":{Constant:[1177,1,1,""],FirstLayerSiren:[1179,1,1,""],GlorotUniform:[1180,1,1,""],KaimingNormal:[1177,1,1,""],Ones:[1182,1,1,""],Siren:[1183,1,1,""],Uniform:[1177,1,1,""],Zeros:[1185,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1177,3,1,""],create_variables:[1177,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1179,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1180,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1177,3,1,""],create_variables:[1177,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1182,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1183,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1177,3,1,""],create_variables:[1177,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1185,3,1,""]},"ivy.stateful.layers":{Conv1D:[1187,1,1,""],Conv1DTranspose:[1188,1,1,""],Conv2D:[1189,1,1,""],Conv2DTranspose:[1190,1,1,""],Conv3D:[1191,1,1,""],Conv3DTranspose:[1192,1,1,""],DepthwiseConv2D:[1193,1,1,""],Dropout:[1194,1,1,""],LSTM:[1195,1,1,""],Linear:[1196,1,1,""],MultiHeadAttention:[1197,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1187,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1188,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1189,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1190,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1191,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1192,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1193,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1194,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1195,3,1,""],get_initial_state:[1195,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1196,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1197,3,1,""]},"ivy.stateful.module":{Module:[1199,1,1,""]},"ivy.stateful.module.Module":{__init__:[1199,3,1,""],build:[1199,3,1,""],build_mode:[1199,3,1,""],built:[1199,3,1,""],check_submod_rets:[1199,3,1,""],compile_graph:[1199,3,1,""],compile_on_next_step:[1199,3,1,""],get_mod_key:[1199,3,1,""],mod_depth:[1199,3,1,""],mod_height:[1199,3,1,""],mod_with_top_mod_key_chain:[1199,3,1,""],save_weights:[1199,3,1,""],show_graph:[1199,3,1,""],show_mod_in_top_mod:[1199,3,1,""],show_structure:[1199,3,1,""],show_v_in_top_v:[1199,3,1,""],sub_mods:[1199,3,1,""],track_submod_call_order:[1199,3,1,""],track_submod_rets:[1199,3,1,""],v_with_top_v_key_chains:[1199,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1201,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1201,3,1,""]},"ivy.stateful.optimizers":{Adam:[1203,1,1,""],LAMB:[1204,1,1,""],LARS:[1205,1,1,""],Optimizer:[1206,1,1,""],SGD:[1207,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1203,3,1,""],set_state:[1203,3,1,""],state:[1203,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1204,3,1,""],set_state:[1204,3,1,""],state:[1204,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1205,3,1,""],set_state:[1205,3,1,""],state:[1205,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1206,3,1,""],compile_graph:[1206,3,1,""],compile_on_next_step:[1206,3,1,""],set_state:[1206,3,1,""],show_graph:[1206,3,1,""],step:[1206,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1207,3,1,""],set_state:[1207,3,1,""],state:[1207,3,1,""]},"ivy.stateful.sequential":{Sequential:[1209,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1209,3,1,""]},"ivy.verbosity":{cprint:[1214,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1213,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1202,1203,1204],"02886":1169,"100":[1056,1169,1211],"2021":1169,"2102":1169,"360":[767,768,1034,1042,1048,1050],"999":[999,1001,1002,1006,1202,1203,1204],"abstract":[820,835,1169,1202,1206],"boolean":[40,41,820,855,867,870,886,895,896,898,905,906,941,943,944,948,949,951,952,984,994,999,1005,1030,1031,1032,1033,1052,1053,1054,1056],"break":43,"case":[15,18,19,40,41,42,43,820,859,866,869,896,899,969,971,972,1022,1025,1028,1056,1100,1103,1107,1169,1186,1197,1198,1199,1202,1206,1215],"catch":[896,922],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,386,387,820,822,823,824,825,826,827,829,830,832,833,834,835,847,848,870,896,900,956,964,999,1013,1056,1100,1102,1109,1151,1153,1154,1163,1167,1169,1172,1173,1174,1175,1176,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1215],"default":[15,18,19,40,41,42,43,818,819,820,829,830,837,838,842,843,844,845,846,849,850,851,852,859,862,863,864,869,870,877,878,879,880,896,898,899,901,902,903,912,913,914,915,918,919,920,929,932,933,934,939,941,942,953,955,956,959,961,964,967,968,971,972,975,977,979,981,982,991,993,994,997,999,1002,1004,1005,1006,1007,1008,1010,1014,1022,1025,1028,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1115,1116,1119,1120,1122,1123,1124,1125,1126,1127,1128,1130,1131,1135,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209],"final":[40,41,896,932,954,955,1056,1186,1197,1212],"float":[40,41,42,43,767,768,779,804,820,829,830,853,859,862,866,869,870,878,884,887,896,899,912,913,915,932,933,937,938,955,973,974,975,981,982,999,1001,1002,1004,1006,1007,1008,1015,1017,1021,1034,1042,1044,1052,1053,1054,1055,1056,1112,1115,1116,1130,1132,1138,1146,1149,1150,1151,1152,1153,1154,1155,1156,1186,1194,1197,1200,1201,1202,1203,1204,1205,1206,1207],"function":[15,40,41,43,366,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,768,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1169,1172,1173,1174,1202,1205,1206,1207,1211,1212,1215],"import":[43,1169,1212,1215],"int":[40,41,42,43,442,779,804,818,819,820,842,843,844,845,846,849,850,851,852,857,858,864,870,879,881,888,896,901,902,903,908,914,915,919,920,923,924,925,928,929,932,933,934,939,942,953,954,955,963,964,968,969,971,972,977,978,979,980,983,985,986,991,993,996,997,999,1001,1002,1006,1015,1019,1020,1022,1025,1028,1052,1053,1054,1055,1056,1100,1109,1112,1113,1114,1116,1117,1119,1122,1123,1124,1125,1126,1127,1128,1130,1135,1138,1139,1140,1141,1142,1143,1144,1145,1149,1151,1153,1154,1155,1156,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1200,1201],"long":[1138,1148],"new":[40,41,43,442,870,874,896,897,908,923,924,925,928,932,933,934,935,964,969,971,972,973,974,981,982,983,997,999,1002,1004,1006,1007,1008,1015,1017,1019,1021,1034,1036,1038,1041,1043,1049,1051,1056,1100,1110,1111,1112,1113,1155,1156,1169,1175,1176,1186,1196,1200,1201,1202,1203,1204,1205,1206,1207,1212,1215],"public":[896,916],"return":[15,16,17,18,19,40,41,42,43,442,767,768,779,804,818,819,820,829,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,855,856,858,859,863,864,865,866,867,869,870,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,895,896,897,898,899,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,939,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,968,969,970,971,972,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1114,1115,1116,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1169,1175,1176,1186,1195,1196,1202,1206,1211,1212,1215],"short":[1138,1148,1169,1215],"static":[40,41,818,819],"super":1056,"true":[40,41,42,388,394,426,429,442,443,818,819,820,896,898,907,909,927,932,941,943,950,994,995,999,1002,1004,1005,1006,1007,1008,1010,1022,1025,1028,1052,1053,1054,1055,1056,1100,1101,1108,1112,1113,1119,1120,1122,1123,1124,1125,1126,1127,1128,1130,1131,1138,1146,1151,1152,1153,1154,1157,1158,1159,1163,1186,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],"try":[40,41,896,992,1056],"var":[40,41,1052,1053,1054,1215],"while":[40,41,42,1056],AND:[1030,1031,1119,1120],But:1215,For:[43,896,899,911,983,999,1005,1013,1034,1035,1169,1175,1176,1212,1215],Its:[1034,1039],NOT:[1030,1032],One:[40,41,896,924,969,1112,1114,1215],Ones:[1169,1177],Such:[896,916],That:1212,The:[15,16,17,18,19,40,41,42,43,767,768,779,804,818,819,820,829,830,836,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,859,862,863,864,865,866,869,870,874,875,876,881,882,883,886,895,896,899,903,904,905,908,909,912,913,914,915,917,918,921,922,926,929,932,934,935,942,945,946,947,949,950,953,955,957,959,961,964,965,968,969,971,972,973,974,975,978,979,980,981,982,983,986,994,997,998,999,1001,1002,1004,1006,1007,1008,1010,1013,1015,1017,1019,1021,1022,1025,1027,1034,1035,1037,1039,1042,1044,1045,1046,1047,1048,1050,1052,1053,1054,1055,1056,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1115,1116,1119,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1169,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1212,1215],There:[43,1169,1212],These:[43,1169],Used:[1100,1101,1108,1198,1199],Using:[1169,1170,1215],With:[40,41,1022,1025,1028,1119,1122,1123,1124,1125,1126,1127,1128,1169,1211,1215],__array__:[896,904],__call__:[1186,1197,1198,1199],__del__:1056,__dict__:[1056,1212],__enter__:1056,__exit__:1056,__getitem__:1056,__getstate__:1056,__init__:[40,41,42,43,59,60,386,387,820,821,828,829,830,831,832,833,834,835,870,871,872,873,999,1000,1056,1060,1067,1163,1164,1167,1168,1169,1172,1173,1174,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1215],__iter__:1056,__len__:1056,__next__:1056,__pow__:43,__repr__:1056,_assign_vari:1211,_axi:1056,_base:[1100,1101,1108],_compute_node_da_ratio:1056,_compute_node_strs_da:1056,_concat_unify_arrai:1056,_counter:1056,_cur_framework:[43,1056],_da_direct:1056,_da_directions_flip:1056,_da_step_tim:1056,_da_tim:1056,_da_tune_count:1056,_data:[43,1056],_delta_da_dim_s:1056,_delta_sf:1056,_dict:1056,_dim_siz:1056,_first_da_tune_step:1056,_first_ns_tune_step:1056,_fn:1056,_forward:[1169,1211],_get_kalman_param:1215,_get_prior:1215,_get_some_model:1215,_handle_flat_arrays_in_out:43,_index:[1100,1101,1108],_input_queu:1056,_length:1056,_max_depth:1056,_max_node_dim_step_ratio:1056,_max_node_dim_step_s:1056,_max_split_factor_step_s:1056,_mean_unify_arrai:1056,_min_bas:[896,982,1155,1156,1200,1201],_min_denomin:[896,981],_min_node_dim_s:1056,_min_sf_tune_step:1056,_min_unit_node_tune_step:1056,_model:1215,_native_wrapp:43,_node_mapp:1056,_node_percent_mem:1056,_node_str:1056,_node_str_da_ratio:1056,_node_strs_da:1056,_node_strs_kei:1056,_node_strs_n:1056,_node_util:1056,_ns_step_tim:1056,_ns_time:1056,_ns_tune_count:1056,_num_nod:1056,_num_work:1056,_observed_config:1056,_output_queu:1056,_paramet:1211,_percent_mem_inc_per_sf:1056,_percent_mem_inc_per_unit_da_dim:1056,_percent_util_inc_per_unit_da_dim:1056,_ret_fn:1056,_safety_factor:1056,_save_dir:1056,_shift_da_split:1056,_shift_n:1056,_slice:1056,_step:[1202,1206],_sum_unify_arrai:1056,_timeout:1056,_tune:1056,_tune_da:1056,_tune_n:1056,_tune_step:1056,_unit_da_tune_count:1056,_unroll_step:1215,_with_node_mappig:1056,_worker:1056,_worker_class:1056,_worker_fn:1056,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,820,829,835,1056,1198,1199,1202,1206],abil:1169,abl:[40,41],about:[870,884,885],abov:[1112,1114],above_height:[40,41],abs:[259,388,499,613,896,1056],absolut:[40,41,896,897],abstractmethod:1056,accept:[15,1169],access:[40,41,1212],accord:[40,41,896,915,934,971,972,991,996],accordingli:[1119,1120],accur:[59,386,387,820,832,833,834,835,870,999,1163,1167,1177,1179,1180,1182,1183,1185],aco:[708,1034],acosh:[708,1034],across:[40,41,820,829,830,839,840,842,843,844,845,846,852,862,863,896,901,902,905,906,1056,1100,1104],activ:[1131,1132,1133,1134,1135,1136,1137,1169,1173,1174],actual:1212,adam:[999,1001,1002,1006,1169,1202,1204,1211],adam_step:999,adam_upd:999,adapt:[999,1007,1202,1205],add:[40,41,43,1056,1151,1152,1153,1154,1155,1156,1169,1200,1201,1212],add_fn_to_dict:1163,add_param:1163,added:[896,981,982,1208,1209],adding:[896,908],addit:[40,41,43,896,923,924,925,1155,1156,1186,1196],adher:43,adjac:[896,899],adopt:[896,916],affect:[896,899],affin:[1200,1201],after:[896,953,999,1002,1003,1004,1006,1007,1008,1015,1016,1155,1156,1202,1203,1204,1205,1206,1207,1215],after_1:[896,915,996],after_n:[896,915,996],again:43,against:[40,41,1022,1025,1028,1119,1122,1123,1124,1125,1126,1127,1128],agnost:[1169,1211,1212],aim:1215,algebra:[435,1022],algorithm:[1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193,1215],align:[40,41,43,896,908],aliv:[820,854,856,860,896,936,962,966],all:[15,16,17,18,19,40,41,43,165,338,444,563,732,818,819,820,829,854,860,896,897,898,905,906,916,929,936,942,966,980,1052,1053,1054,1055,1056,1100,1101,1102,1108,1109,1112,1113,1116,1119,1122,1123,1124,1125,1126,1127,1128,1138,1148,1169,1212,1215],all_depth:[40,41],all_equ:896,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1100,all_tru:[40,41],alloc:[820,1056],allow:[896,954,955,956,1198,1199],allow_dupl:[896,956],alon:[820,859,869,1056,1169],along:[40,41,442,820,843,844,845,846,849,850,851,852,864,896,903,914,919,920,929,934,953,954,955,968,979,983,986,993,1022,1025,1028,1052,1053,1054,1055,1056,1112,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128],alongsid:[1211,1212],alpha:[1130,1132],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,820,1056],also:[40,41,43,896,899,999,1002,1052,1053,1054,1055,1100,1101,1102,1108,1109,1138,1147,1186,1196,1211],altern:1211,alwai:[40,41,43,999,1005,1010],among:[40,41],amount:[820,866,1056,1169],angl:[1034,1035,1040],ani:[15,16,17,18,19,40,41,43,818,819,820,822,825,829,830,832,841,842,845,846,851,896,898,899,904,922,923,924,925,926,927,941,949,956,981,982,999,1003,1056,1100,1101,1104,1108,1109,1110,1111,1112,1116,1169,1175,1176,1198,1199,1211,1212,1215],anoth:[40,41,870,876,1169],another_backend:43,anyth:[43,1215],apart:43,api:[1169,1170],appear:[896,928],append:[40,41,1056],appli:[15,18,19,40,41,896,923,924,925,999,1006,1007,1022,1027,1030,1031,1032,1033,1052,1053,1054,1100,1104,1107,1109,1130,1131,1132,1133,1134,1135,1136,1137,1138,1147,1149,1150,1155,1156,1169,1172,1173,1174,1200,1201],applic:[1100,1104,1109,1138,1149,1150,1169,1215],approxim:[43,779,804,1130,1131],arang:[108,259,388,442,499,613,896,954,955],arbitrari:[40,41,820,849,850,852,1056],arc:[1034,1040],arcco:[1034,1035],arctan:[1034,1039],area:1169,arg:[15,16,17,40,41,59,63,820,829,842,846,852,864,896,923,924,925,972,1056,1157,1158,1159,1163,1175,1176,1198,1199],arg_nam:896,arg_stateful_idx:[1157,1158,1159,1163,1198,1199],argmax:[108,388,499,613,896],argmin:[108,388,499,613,896],args_clon:1056,args_dist:1056,args_to_ivi:[15,1169],args_to_n:[15,1169],args_uni:1056,argsort:[388,613,896],argument:[15,16,17,18,19,40,41,42,43,59,63,818,819,820,829,830,842,846,852,896,899,900,909,922,956,972,1034,1035,1056,1100,1104,1175,1176,1198,1199],aris:[1169,1215],arithmet:[43,1119,1123,1126,1128],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:442,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,108,259,388,442,499,613,767,768,804,820,838,839,840,843,844,845,846,849,850,851,852,854,856,860,864,865,870,874,880,884,885,887,888,896,897,898,899,901,902,903,905,906,907,908,910,911,912,913,914,915,917,918,919,920,923,924,925,926,928,929,930,931,932,933,934,935,936,939,941,942,943,944,945,946,947,949,950,951,952,953,954,955,957,958,959,960,962,963,964,965,966,968,969,970,971,972,977,979,980,983,984,985,986,988,989,990,991,993,994,995,996,997,998,999,1001,1002,1005,1006,1010,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1056,1100,1102,1109,1112,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1169,1170,1186,1194,1195,1197,1202,1206,1211,1212],arrang:[896,923],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,365,366,767,768],array_builtin:[43,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817],array_equ:[259,613,896],array_lik:[442,896,904],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,896],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1169],arraywithgener:[22,1169],arraywithgradi:[24,1169],arraywithimag:[26,1169],arraywithlinalg:[28,1169],arraywithlog:[30,1169],arraywithmath:[32,1169],arraywithmeta:[34,1169],arraywithrandom:[36,1169],arraywithreduct:[38,1169],arriv:[40,41,42],articl:1169,arxiv:1169,as_arrai:[40,41,896,939,977],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[386,388,397,820,838,870,877,878,879,880],as_tensor:388,as_vari:[40,41],as_zero:[40,41],asarrai:[388,896],asin:[708,1034],asinh:[708,1034],aspect:[1015,1020],assert:[40,41,896,907,1056],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:896,associ:[43,1022,1029],assum:[1212,1215],astyp:[388,870],asynchron:[40,41,42],at_dev:[40,42,820,833,834],at_kei:[40,41],at_key_chain:[40,41],at_nod:1056,atan2:[708,1034],atan:[708,1034],atanh:[708,1034],attent:[1138,1149,1150,1186,1197],attribut:[0,6,40,41,896,965,998],audienc:[1169,1212],author:1169,avail:[40,41,820,855,857,858,867,896,924,1056],averag:[999,1001,1002,1006,1052,1053,1054,1119,1123],average_across_step:[1052,1053,1054],avoid:[820,1056,1212],axes:[40,41,388,422,435,436,820,864,896,901,902,915,928,929,985,991,996,1022,1025,1028,1056,1119,1120,1122,1123,1124,1125,1126,1127,1128],axes_length:[40,41,896,923,924,925],axi:[40,41,388,390,391,395,396,401,403,412,413,414,420,421,423,820,822,825,832,843,844,845,846,849,850,851,852,864,896,901,902,903,914,915,918,919,920,928,929,934,953,954,955,968,979,980,983,985,986,993,996,1022,1028,1056,1112,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1130,1135,1151,1153,1154],axis0:[40,41,896,985],axis1:[40,41,896,985],back:[1198,1199,1202,1206],backend:[15,17,19,40,41,365,366,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,443,820,855,858,867,870,876,886,895,896,944,948,999,1002,1004,1006,1007,1008,1013,1056,1169,1170,1175,1176,1202,1203,1204,1205,1206,1207,1211,1212,1215],background:[1169,1212],backprop:1215,backward:[1119,1120,1211],band:[896,932],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,386,387,388,414,779,804,820,822,823,824,825,826,827,829,830,832,833,834,835,870,896,937,955,973,982,999,1056,1119,1121,1163,1167,1169,1172,1173,1174,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1215],batch:[40,41,820,862,863,896,929,932,942,1015,1019,1022,1027,1052,1053,1054,1055,1056,1138,1147,1155,1156,1200,1201],batch_shap:[388,401,405,896,929,942,963,1015,1016,1017,1018,1019,1020,1021,1022,1029,1112,1113,1138,1148,1149,1150,1186,1195],batch_siz:[442,443,1056,1112,1113,1138,1139,1140,1141,1142,1143,1144,1145],bayesian:1215,becaus:[896,899],becom:[896,911,1034,1040,1215],been:[896,923,924,925,1112,1113],befor:[40,41,820,864,1052,1053,1054,1056,1100,1109,1119,1122,1123,1124,1125,1126,1127,1128,1138,1149,1150,1215],before_1:[896,915,996],before_n:[896,915,996],begin:[1100,1101,1108,1212],behaviour:1215,behind:[999,1002,1004,1006,1007,1008,1169],being:[40,41,896,899,967,975,1056],belong:[40,41],below:[43,1169,1212,1215],below_depth:[40,41],benefit:1169,bernoul:[1138,1146,1186,1194],best:[896,956,1169],beta1:[999,1001,1002,1006,1202,1203,1204],beta2:[999,1001,1002,1006,1202,1203,1204],beta:[1155,1156],between:[40,41,42,896,899,1100,1104,1112,1114,1151,1153,1154,1202,1204],bia:[1138,1147,1148,1186,1187,1188,1189,1190,1191,1192,1193,1196],bias_initi:[1186,1187,1188,1189,1190,1191,1192,1193,1196],bilinear:[1015,1016],bilinear_resampl:[148,319,431,547,693,1015],bilinearli:[1015,1016],binari:[1151,1152],binary_cross_entropi:1151,bit:[870,881,1015,1017,1021,1169],bitwise_oper:[0,7,8],block:[1169,1212],bool:[15,18,19,40,41,42,818,819,820,838,851,855,859,864,867,869,870,880,896,898,905,906,919,922,926,927,932,939,941,949,950,956,977,979,993,994,995,999,1002,1003,1004,1005,1006,1007,1008,1010,1022,1025,1028,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1119,1122,1123,1124,1125,1126,1127,1128,1130,1131,1138,1146,1175,1176,1186,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],both:[43,896,918],bottom:1169,boundari:[40,41,1112,1116],branch:[818,819],broadcast:[40,41,43,779,804,896,908,926,958,959,960,968,1022,1025,1028,1034,1040,1044,1119,1120,1122,1123,1124,1125,1126,1127,1128],broadcast_to:[259,613,896],build:[1056,1169,1186,1197,1198,1199],build_mod:[1186,1197,1198,1199],builder:1169,built:[820,896,899,1056,1186,1197,1198,1199],builtin:43,builtin_ab:[214,779],builtin_add:[214,779],builtin_and:[214,779],builtin_bool:[214,779],builtin_contain:[214,779],builtin_deepcopi:[214,779],builtin_dir:[214,779],builtin_eq:[214,779],builtin_float:[214,779],builtin_floordiv:[214,779],builtin_g:[214,779],builtin_getattr:[214,779],builtin_getattribut:[214,779],builtin_getitem:[214,779],builtin_gt:[214,779],builtin_int:[214,779],builtin_invert:[214,779],builtin_l:[214,779],builtin_lt:[214,779],builtin_mul:[214,779],builtin_n:[214,779],builtin_neg:[214,779],builtin_or:[214,779],builtin_po:[214,779],builtin_pow:[43,214,779],builtin_radd:[214,779],builtin_rand:[214,779],builtin_rfloordiv:[214,779],builtin_rmul:[214,779],builtin_ror:[214,779],builtin_rpow:[214,779],builtin_rsub:[214,779],builtin_rtruediv:[214,779],builtin_rxor:[214,779],builtin_setitem:[214,779],builtin_some_op:43,builtin_sub:[214,779],builtin_truediv:[214,779],builtin_xor:[214,779],bypass:1212,cach:[820,836,896,909],cache_fn:896,calcul:[40,41,42,43,779,804,1034,1044],call:[43,820,864,896,967,975,992,999,1003,1056,1100,1101,1104,1108,1186,1197,1198,1199,1202,1206,1212,1215],callabl:[40,41,818,819,820,829,830,864,896,909,922,924,956,992,1052,1053,1054,1055,1056,1100,1104,1105,1106,1108,1109,1138,1149],can:[43,820,862,863,864,896,969,1015,1017,1056,1169,1211,1212,1215],cancel_join_thread:1056,captur:1169,cast:[40,41,108,259,388,499,613,870,896,914,1015,1017,1021],catch_except:[896,922],categori:43,ceil:[259,388,613,896,899],cell:[1138,1148,1186,1195],certain:[40,41,896,899,954,955],chain:[40,41,1052,1053,1054,1208,1209],chang:[820,896,969,1056,1100,1102,1109,1169,1211],channel:[896,932,1015,1017,1018,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196],check:[15,16,17,18,19,40,41,820,859,869,870,875,886,895,896,907,927,941,949,984,994,999,1005,1056,1100,1101,1108,1169,1212],check_nest:[1100,1108],check_shap:[40,41],check_submod_ret:[1198,1199],check_typ:[40,41],choic:[1169,1212],choleski:[697,1022],choos:[896,995,1034,1040,1169],choose_random_framework:59,chosen:[40,41,896,899,995],chunk:[820,862,863,864,1056],chunk_siz:[820,864,1056],circl:[1034,1035,1037],clark:1169,clear:[820,836,1056],clear_framework_stack:59,clear_mem_on_dev:[386,605,820],click:1169,clip:[40,41,259,388,613,896,912,913,958,960,1169],clip_matrix_norm:896,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,896],clipped_delta:1056,clone:[40,41,820,839,840,841,842,1056],clone_arrai:1056,clone_it:1056,clone_nest:1056,clonedit:1056,cloneditem:1056,clonednest:1056,close:[43,1015,1020,1034,1037,1056,1215],closest:[870,875],closest_valid_dtyp:870,code:[40,41,42,43,442,1169,1170,1211,1212],codebas:[820,862,863,1056,1169,1212,1215],collect:[15,40,41,386,388,426,431,435,438,439,442,779,818,820,870,896,999,1015,1022,1030,1034,1056,1100,1112,1119,1130,1138,1151,1155,1172,1186,1200,1202],color:[40,41,42,1213,1214],column:[896,942],combin:[40,41,42,1015,1020,1169,1215],combined_batch_s:1056,come:1212,command:1169,commit:1215,common:[40,41,1034,1040],common_key_chain:[40,41],commun:[1169,1212],compar:[40,41,896,898,905,906],comparison_oper:[0,9,10],compat:[43,779,804,896,926,969,1034,1044,1119,1120,1169,1215],compil:[259,388,613,1158,1159,1163,1169,1198,1199,1202,1203,1204,1205,1206,1207],compile_graph:[1157,1169,1198,1199,1202,1206],compile_on_next_step:[1198,1199,1202,1203,1204,1205,1206,1207],complet:[40,41,1056],complex:[1212,1215],compon:[896,918],comput:[40,41,767,768,820,864,896,912,913,919,920,926,957,999,1001,1002,1003,1004,1006,1007,1008,1010,1012,1015,1018,1022,1023,1024,1025,1026,1028,1030,1031,1032,1033,1034,1035,1037,1039,1040,1042,1045,1046,1047,1048,1050,1100,1104,1119,1121,1122,1123,1124,1125,1126,1127,1128,1138,1139,1140,1141,1142,1143,1144,1145,1147,1149,1151,1152,1153,1154],concat:[40,41,820,849,850,851,852,864,896,932,1056],concaten:[40,41,108,259,388,499,613,896,932,1056,1169],concatten:[40,41,820,849,850,851,852,864,1056],condit:[388,818,819,896,995,1100,1108],conditon:[1100,1108],config:[40,41,1056],config_list:1056,configur:[40,41],conjunct:1212,connect:[1163,1186,1196,1197],consid:[40,41,1022,1028,1211,1215],consist:[40,41,820,852,1056,1119,1121,1198,1199,1212],constant:[820,829,830,896,915,1056,1100,1104,1151,1152,1153,1154,1155,1156,1177,1178,1182,1185,1198,1199,1200,1201,1212],constant_kwarg:1056,constant_pad:[259,388,499,613,896],constitu:[40,41],construct:[896,986,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211],constructor:[40,41,42,896,900,1208,1209],consum:[820,1056],cont_feat_dim:[1138,1149],contaienr:[40,41],contain:[15,18,19,42,43,779,804,820,839,843,864,870,874,896,897,901,902,903,911,912,913,916,926,941,950,958,960,970,981,982,999,1001,1002,1004,1006,1007,1008,1034,1044,1052,1053,1054,1055,1056,1112,1113,1119,1122,1123,1124,1126,1128,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[388,613,896],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[388,896,961,1138,1149,1186,1197],context_dim:[1186,1197],contextmanag:[59,60],continu:[43,1056,1212],contract:[40,41,1119,1121],contribut:[1169,1170],contributor:1169,control:1169,conv1d:[180,351,457,753,1138,1169,1186],conv1d_transpos:[180,351,457,753,1138],conv1dtranspos:[1169,1186],conv2d:[180,351,457,574,753,1138,1169,1186],conv2d_transpos:[180,351,457,753,1138],conv2dtranspos:[1169,1186],conv3d:[180,351,457,574,753,1138,1169,1186],conv3d_transpos:[180,351,457,753,1138],conv3dtranspos:[1169,1186],convent:[40,41,1119,1121],conver:[820,836,847,859,866,869,1056],convers:[16,17,18,19,40,41,1056,1169],convert:[15,16,17,18,19,40,41,820,847,848,870,876,882,883,896,978,989,990,1015,1017,1021,1022,1029,1056,1100,1102,1109,1169,1176],convert_dtyp:870,convolut:[1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193],cool:43,cooler:43,coordin:[896,959,1034,1035,1037,1040],copi:[40,41,442,896,917,1056,1100,1102],copy_arrai:[388,613,896],copy_nest:1100,core:[386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,443,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1169],correct:[43,1169,1212],correctli:[40,41,1022,1025,1028,1034,1040,1119,1122,1123,1124,1125,1126,1127,1128],correspond:[40,41,43,779,804,896,914,1112,1113],cos:[80,156,365,439,471,556,584,708,767,896,932,1034,1035,1050,1212],cosh:[708,1034],cosin:[767,768,1034,1035,1036,1042,1043],cost:[999,1001,1002,1004,1006,1007,1008,1052,1053,1054,1055],cost_fn:[1052,1055],could:1215,count:[40,41,1056,1119,1120,1125,1127,1167],cprint:1213,cpu:[40,41,820,857,859,865,866,869,896,899,904,934,935,942,954,955,963,964,965,971,972,997,998,1056,1112,1113,1114,1115,1116,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1211,1212],creat:[40,41,820,829,830,896,899,904,933,934,935,942,954,955,963,964,965,971,972,988,997,998,999,1012,1056,1112,1113,1114,1115,1116,1169,1175,1176,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1215],create_if_abs:[40,41],create_vari:1177,creation:[40,41,42],crop:[1015,1019],crop_siz:[1015,1019],cross:[259,613,896,1151,1152,1153,1154],cross_entropi:1151,cuda:[40,41,820,829,848,865,896,899,904,934,935,942,954,955,963,964,965,971,972,997,998,1056,1112,1113,1114,1115,1116,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209],cumprod:[108,259,388,613,896],cumsum:[613,896],cumul:[896,919,920],current:[40,41,42,43,820,829,853,854,856,860,870,876,886,895,896,921,936,944,948,962,966,1056,1100,1101,1108,1169,1215],current_framework:59,current_framework_str:[388,613,896,1056],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1163,d_in:[1138,1139,1140,1141,1142,1143,1144],d_out:[1138,1139,1140,1141,1142,1143,1144],da_can_termin:1056,da_dim_s:[820,1056],da_direct:1056,da_tune_step:[820,1056],dai:1215,daniel:1169,data:[40,41,42,43,779,804,820,822,823,824,825,826,827,832,833,834,848,870,874,875,876,880,881,882,883,884,885,886,887,888,895,896,899,904,926,933,942,949,950,964,965,969,980,984,997,998,999,1005,1013,1034,1044,1056,1138,1147,1169],data_format:[1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193],dataset:[40,41],datatyp:[40,41,870,875,887,888],dcdw:[999,1001,1002,1004,1006,1007],debug_info:1163,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[999,1006,1007,1202,1204,1205],decay_lambda:[999,1006,1007,1202,1204,1205],decid:[40,41,1215],decompos:[1022,1023],decomposit:[1022,1023,1027],decor:43,decrement:[896,945],dedic:[999,1013,1175,1176],deep:[40,41,1169],deep_copi:[40,41],deeper:[820,842,846,852,1056,1100,1109,1169],deepli:[1100,1102],def:[43,60,821,828,831,871,872,873,1000,1056,1060,1067,1164,1168,1169,1178,1181,1184,1211,1212,1215],default_dev:43,default_devic:820,default_dtyp:[43,870],default_float_dtyp:870,default_int_dtyp:870,default_key_color:[40,41,42],default_nod:1056,default_rng:442,default_v:[896,922],defaultdevic:[820,821],defaultdtyp:[870,871],defaultfloatdtyp:[870,872],defaultintdtyp:[870,873],defer:43,defin:[43,896,918,963,965,998,1112,1114],degre:[767,768,1034,1042,1048,1050],del:1056,delta:[999,1001,1056,1163],delta_dim_s:1056,delta_percent_mem:1056,delta_sf:1056,delta_util:1056,demo:1169,denomin:[896,931,938,974,981,982,1155,1156,1200,1201],dens:[1186,1196],depend:[43,779,804,896,995,1022,1027,1169],depth:[40,41,388,415,820,842,846,852,896,940,963,1056,1100,1109,1163,1167,1198,1199],depth_cutoff:[40,41],depthwis:[1138,1145,1186,1193],depthwise_conv2d:[180,351,457,574,753,1138],depthwiseconv2d:[1169,1186],deriv:[999,1001,1002,1004,1006,1007,1008,1100,1102,1109,1169,1198,1202,1206,1208],descend:[1022,1027],descent:[999,1004,1202,1207],describ:[40,41,1119,1121],design:[1169,1170],desir:[40,41,820,865,870,874,896,899,904,942,943,964,965,997,998,1015,1020,1056,1119,1122,1123,1124,1126,1128],desired_aspect_ratio:[431,434,1015,1020],desired_percent_increas:1056,detail:1215,detect:[40,41,1100,1101,1108],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,779,804,820,855,857,858,867,870,874,875,881,886,887,888,895,896,898,899,904,905,906,941,944,948,949,950,984,994,999,1005,1034,1044,1052,1053,1054,1055,1056,1119,1120,1138,1149],dev:[40,41,42,43,101,253,386,388,389,392,403,404,405,413,414,415,416,417,418,419,424,425,442,443,492,605,820,823,824,826,827,829,830,833,834,836,837,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,856,859,860,861,862,863,864,865,866,869,896,899,904,934,935,942,954,955,963,964,965,971,972,997,998,999,1014,1112,1113,1114,1115,1116,1175,1176,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209],dev_clon:[40,41,820],dev_clone_arrai:820,dev_clone_it:820,dev_clone_nest:820,dev_dist:[40,41,820],dev_dist_arrai:820,dev_dist_it:820,dev_dist_nest:820,dev_from_str:[43,101,253,386,492,605,820],dev_mapp:820,dev_str:[40,41],dev_to_str:[101,253,386,492,605,820],dev_unifi:820,dev_unify_arrai:820,dev_unify_it:820,dev_unify_nest:820,dev_util:820,devclonedit:820,devcloneditem:820,devclonednest:820,devdistit:820,devdistitem:820,devdistnest:820,develop:[1169,1212,1215],deviat:[40,41,1112,1115,1119,1126,1155,1156,1200,1201],devic:[21,40,41,43,387,388,402,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,896,899,904,933,934,935,942,954,955,963,964,965,971,972,997,998,999,1014,1112,1113,1114,1115,1116,1169,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209],devmanag:[820,828],devmapp:[820,830],devmappermultiproc:820,diag:[1022,1027],diagon:[896,942],dict:[15,16,17,18,19,40,41,42,820,822,825,829,830,832,842,843,844,845,846,896,923,924,925,956,1052,1053,1054,1056,1100,1102,1103,1104,1107,1109,1175,1176],dict_in:[40,41,42],dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,820,839,840,843,844,1056,1138,1147,1169,1212,1215],differenti:[1169,1212],dilat:[1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193],dim:[40,41,43,896,963,1015,1016,1020,1022,1027,1056,1186,1197],dim_siz:[40,41,820,1056],dimens:[40,41,42,820,851,896,908,914,918,923,924,925,928,932,939,953,963,968,969,979,980,983,991,993,1015,1019,1022,1025,1027,1028,1052,1053,1054,1055,1056,1112,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1135,1138,1139,1140,1141,1142,1143,1144,1145,1148,1151,1153,1154,1186,1187,1188,1189,1190,1191,1192,1193,1196,1197],dimension:[40,41,442,896,979,980,1022,1027],direct:1056,directli:[43,1100,1109,1212,1215],directori:[896,976,987],discret:[1151,1153],disk:[40,41,1015,1017],distanc:[896,899],distribut:[40,41,820,839,843,844,845,846,1056,1112,1113,1114,1115,1116,1138,1146,1186,1194,1198,1199],distribute_nest:1056,distributedarrai:[40,41],distrubt:[1151,1153],dive:[1169,1212],divid:[40,41,896,979,981,1034],dividend:[1034,1044],divis:[896,931,938,974,981,982,999,1001,1002,1006,1034,1044,1202,1203,1204],divisor:[999,1001,1002,1006,1034,1044,1202,1203,1204],doc:1169,docstr:43,doe:[40,41,43,896,899,979,1211],doesn:1169,domain:[1034,1035],don:1169,door:1215,dot:[1022,1024,1138,1149,1150,1186,1197],down:1211,downscal:[896,912,913],drag:[1169,1215],draw:[1112,1113,1115,1116],drawn:[1112,1113,1114,1115,1116],drop:[1169,1215],dropout:[1138,1169,1186,1197],dropout_r:[1186,1197],ds_tune_step:820,dtype:[40,41,43,108,259,388,389,392,393,402,405,416,417,424,425,499,613,874,875,876,877,878,879,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,899,904,933,942,963,964,965,997,998],dtype_bit:[108,259,388,499,613,870],dtype_from_str:[43,108,259,388,499,613,870],dtype_in:[388,398,399,400,870,876,881,882,883,886,887,888,895],dtype_to_str:[108,259,388,499,613,870],duplic:[40,41],dure:[40,41,43,818,819,896,992,999,1001,1002,1006,1052,1053,1054,1055,1198,1199,1202,1203,1204,1206],dynam:[388,394,818,819],each:[40,41,42,43,779,804,820,829,830,839,840,841,842,843,844,845,851,863,864,896,897,898,903,915,926,950,968,979,983,986,996,999,1002,1004,1006,1007,1008,1015,1018,1022,1027,1034,1037,1044,1046,1047,1056,1100,1104,1112,1113,1119,1121,1138,1139,1140,1141,1142,1143,1144,1145,1146,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1212],eager:1212,easi:1215,easili:1169,econom:1215,ecosystem:1169,edg:[896,911,915,996],effect:[999,1008],effective_grad:[999,1008],effici:1215,einop:[40,41,896,923,924,925],einops_rearrang:[40,41,896],einops_reduc:[40,41,896],einops_repeat:[40,41,896],einstein:[40,41,1119,1121],einsum:[40,41,165,338,444,563,732,1119],either:[40,41,896,922,956,959,961,1052,1053,1054,1055,1056,1186,1197,1198,1199,1212],eleg:1056,element:[40,41,43,442,767,768,779,804,820,841,845,851,870,874,896,897,899,901,902,903,905,906,910,911,912,913,919,920,926,929,930,931,942,943,950,958,960,968,970,979,990,995,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1056,1119,1120,1121,1123,1125,1127,1130,1131,1132,1133,1134,1135,1136,1137,1138,1146,1186,1194],elementwis:[40,41],elementwise_affin:[1200,1201],elementwise_funct:[365,366,767,768],elemtn:[1112,1113],elif:1056,els:[896,907,922,927,1056],elsewher:[896,995],emphas:1169,empti:[40,41,1056],enabl:[40,41,42,1169],encod:[896,932,1015,1017],end:[896,899,1169,1212],entir:[40,41,820,864,1056,1119,1120,1169,1186,1195],entri:[40,41,896,929,954,955,979,980],entropi:[1151,1152,1153,1154],enumer:1056,environ:1169,epsilon:[999,1001,1002,1006,1151,1152,1153,1154,1155,1156,1200,1201,1202,1203,1204],equal:[40,41,388,499,613,767,768,896,898,905,906,915,950,979,996,1034,1042,1048,1050,1112,1116],equality_matrix:[896,898],equat:[40,41,1119,1121],equival:[896,899,1034,1050],erf:[439,708,1034],error:[40,41,820,896,980,1034,1045,1056,1130,1131,1198,1199,1202,1206],essenti:43,etc:[40,41,43,820,865,896,899,904,934,935,942,954,955,963,964,965,971,972,997,998,1056,1112,1113,1114,1115,1116,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1215],evalu:[40,41,896,959,1100,1101,1108,1119,1120],even:1215,evenli:[40,41,896,899,954,955,979],everi:[896,898,1215],exact:[40,41],exampl:[43,818,819,896,911,983,1169,1211,1212,1215],example_input:[388,394,818,819],exc_tb:1056,exc_typ:1056,exc_val:1056,exce:[896,960],except:[40,41,44,47,896,899,907,914,922,992,1056,1119,1120],excess_s:1056,excit:[1169,1212],exclud:[59,61,896,899,1112,1116],exclus:[40,41,388,396,410,426,428,896,919,949,999,1005,1112,1114],execut:[896,992,1212],execute_with_gradi:[145,314,426,542,687,999,1169,1211],exist:[40,41,896,922,1056,1169,1202,1206,1215],exp:[708,1034],expand:[40,41,896,928,932],expand_dim:[40,41,259,613,896,1056],expect:[896,900],explain:1212,explicitli:[1186,1195,1197,1198,1199,1212],expon:[43,779,804,896,982],exponenti:[43,779,804,1034,1045,1046],expos:[896,904,916],express:[896,959],exsit:[40,41],extra:[40,41,42,999,1003],eye:[1022,1024],fabian:1169,fabio:1169,factor:[820,829,862,863,864,999,1001,1002,1006,1007,1022,1027,1056,1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193,1202,1203,1204,1205],falck:1169,fall:[1198,1199,1202,1206],fallback_to_non_compil:[1198,1199,1202,1206],fals:[15,18,19,40,41,42,59,66,67,68,69,70,386,388,396,397,410,420,423,426,427,428,435,436,820,838,851,859,864,869,870,877,878,879,880,896,898,919,922,927,932,939,949,950,956,977,979,993,995,999,1002,1003,1004,1005,1006,1007,1008,1022,1025,1028,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1119,1120,1122,1123,1124,1125,1126,1127,1128,1157,1158,1159,1163,1167,1175,1176,1198,1199,1202,1203,1204,1205,1206,1207],fan_in:1177,fan_mod:1177,fan_out:1177,far:[1100,1101,1108,1211],faster:[818,819],favourit:[1169,1211],feasibl:1215,feat_dim:[1138,1149,1150],fed:[820,864,1056],feed:[820,864,1056],field:1215,file:[40,41,43,896,976,987,1198,1199],filepath:[40,41],fill:[40,41,896,933,964,997,1112,1114],fill_valu:[388,402,896,933],filter:[1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193,1215],filter_s:[1186,1187,1188],filter_shap:[1186,1189,1190,1191,1192,1193],find:[40,41,1215],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:870,finish:[1169,1215],finit:[896,950],first:[40,41,442,818,819,820,851,896,905,914,918,926,954,955,983,985,999,1003,1022,1027,1052,1053,1054,1055,1056,1100,1101,1108,1112,1118,1119,1125,1127,1186,1197,1198,1199,1202,1206,1212,1215],firstlayersiren:[1169,1177],firstli:[1212,1215],fist:[820,864,1056],fit:[40,41,386,388,426,431,435,438,439,442,896,968,1015,1020],fkt:1215,flag:[40,41,999,1005],flat:[40,41,43,896,968,971],flat_list:[40,41],flatten:[40,41,896,932,968,1022,1028,1119,1122,1123,1124,1126,1128],flatten_key_chain:[40,41,1198,1199],flexibl:[1169,1212],flip:[40,41,108,259,388,499,613,896],float32:[388,405,870,874,882,883,896,899,904,942,964,965,997,998],float_dtyp:[870,878,890],float_img_to_uint8_img:1015,floor:[259,388,613,896,931,1056],floormod:[259,388,613,896],fluid:1215,fname:[1157,1159,1163,1198,1199],folder:[43,1169],follow:[40,41,43,820,864,896,945,946,947,981,982,999,1002,1004,1006,1007,1008,1056,1100,1104,1109,1138,1149,1150,1169,1186,1196,1202,1206],fomaml_step:1052,forget:[999,1001,1002,1006,1202,1203,1204],fork:[896,961],forkserv:[896,961,1056],form:[15,16,17,18,19,40,41,896,904,999,1002,1004,1006,1007,1008,1100,1102,1109,1138],format:[40,41,43,820,838,870,874,876,880,896,899,904,942,964,965,997,998,1056,1119,1121,1169,1211,1212],format_fn:[40,41],format_key_chain:[40,41],forward:[1198,1199,1202,1206,1211],found:[40,41,42],fourier:[896,932],fourier_encod:896,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,81,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,153,154,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,176,178,179,181,182,183,184,185,186,187,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,320,321,322,324,325,326,327,329,330,331,334,335,336,337,339,340,341,342,343,344,345,346,347,350,352,353,354,355,356,357,358,366,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,429,430,432,433,434,436,437,440,441,443,445,446,447,448,449,450,451,452,455,456,458,459,460,461,462,463,464,472,493,494,495,496,497,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,543,544,545,546,548,549,550,552,553,554,557,559,560,561,562,564,565,566,567,568,569,570,571,575,576,577,585,606,607,608,609,610,611,612,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,688,689,690,691,692,694,695,696,698,699,700,701,702,703,705,706,707,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,726,727,728,729,730,731,733,734,735,736,737,738,739,740,743,744,745,746,747,748,749,751,752,754,755,756,757,758,759,760,768,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1156,1158,1159,1161,1162,1164,1168,1169,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1214,1215],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1056,framewrk:[896,961],frequenc:[896,932],from:[40,41,42,43,820,829,830,864,870,876,896,922,929,934,935,942,969,980,988,995,999,1002,1006,1015,1019,1052,1053,1054,1055,1056,1100,1102,1109,1112,1113,1114,1115,1116,1119,1120,1125,1127,1138,1146,1149,1169,1175,1176,1186,1194,1197,1202,1206,1211,1212],from_cal:[1198,1199],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[108,259,388,499,613,896,1169],full_matric:[1022,1027],fulli:[1169,1186,1196,1197,1211],func:[40,41,388,394,426,427,818,819,820,864,896,909,999,1003,1056],further:1215,furthermor:1215,futur:1215,gain:1177,gamma:[1155,1156],gather:[40,41,108,259,388,499,613,896,935],gather_nd:[40,41,108,259,388,499,613,896],gauss:[1034,1045],gaussian:[1130,1131],geglu:[1169,1172],gelu:[349,454,742,1130,1169,1172],gener:[23,40,41,43,386,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,442,818,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1005,1112,1114,1116,1117,1169,1202,1206],geometr:[896,932],get:[40,41,820,829,830,838,853,854,859,863,866,869,870,880,881,884,885,896,900,936,937,938,967,1056,1167,1169,1186,1195,1215],get_all_arrays_in_memori:896,get_all_arrays_on_dev:820,get_framework:59,get_initial_st:[1186,1195],get_min_bas:896,get_min_denomin:896,get_mod_kei:[1198,1199],get_num_dim:[388,613,896],get_param:1163,get_param_recurs:1163,get_referrers_recurs:896,getfullargspec:1056,gist:1169,give:[896,903,969,1212],given:[40,41,43,820,853,859,862,863,864,866,869,870,874,896,899,903,904,911,919,920,929,935,954,955,964,965,968,971,972,979,986,991,993,997,998,999,1001,1002,1004,1006,1007,1008,1022,1024,1029,1034,1035,1056,1100,1105,1106,1112,1115,1116,1118,1119,1123,1125,1126,1127,1128,1138,1139,1140,1141,1142,1143,1144,1145,1175,1176,1215],global:[40,41,42,820,829,830,837,862,863,864,870,877,878,879,896,921,937,938,967,973,974,975,981,982,999,1014,1056,1155,1156,1161,1162,1169,1200,1201],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1169,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196],got:1169,gpu:[820,855,858,1056],gpu_is_avail:[386,820,1056],grad:[1169,1202,1206,1211],gradient:[25,40,41,427,428,429,430,820,864,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1018,1052,1053,1054,1055,1169,1202,1203,1204,1205,1206,1207,1211,1215],gradient_descent_upd:[999,1052,1053,1054,1055],gradient_imag:[148,319,431,547,693,1015],gradienttrack:[999,1000],graph:[999,1002,1004,1006,1007,1008,1157,1158,1159,1164,1169,1198,1199],graph_compil:[1157,1158,1159,1160,1161,1162,1163,1167],greater:[40,41,896,899,930,980,1112,1116],green:[40,41,42,1213,1214],grid:[896,959],group:[1015,1020],guid:[1169,1170,1215],gym:1169,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1215,half:[896,899,1056,1112,1116],hand:1169,handl:[40,41,42,43,818,819,820,836,838,847,848,859,866,869,999,1002,1004,1006,1007,1008,1056,1202,1203,1204,1205,1206,1207],has:[40,41,896,983,1034,1039],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,896],hasattr:1056,have:[40,41,43,779,804,896,914,918,923,924,925,926,933,950,983,999,1005,1013,1022,1027,1034,1044,1056,1169,1211,1212],hdf5:[40,41,1198,1199],head:[1138,1149,1186,1197],head_dim:[1186,1197],height:[1015,1020],height_cutoff:[40,41],help:[59,386,387,820,832,833,834,835,870,999,1163,1167,1169,1177,1179,1180,1182,1183,1185],helper:1169,here:[43,1169],hidden:[1138,1148,1186,1195],hierarch:[896,916],hierarchi:[40,41],high:[40,41,442,1112,1114,1116],higher:[999,1002,1004,1006,1007,1008,1022,1027],highest:[1112,1114],highest_util:1056,highest_util_nod:1056,highli:1169,highlight:1215,highlight_subgraph:[1157,1159,1163],hint:43,hkt:1215,hold:[870,874,896,899,904,971,972],host:1169,hot:[896,963],how:[1169,1186,1197,1198,1199,1212,1215],howev:[43,1212],http:1215,hyperbol:[1034,1036,1038,1041,1043,1049,1051,1130,1137],hypothet:1215,icon:1169,idea:1169,ident:[40,41,43,108,259,388,499,613,896],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],if_exist:[40,41],ignor:[40,41,1202,1206],ignore_key_error:[40,41],ignore_miss:[1202,1206],ignore_non:[40,41],iinfo:870,imag:[27,432,433,434,896,953,1016,1017,1018,1019,1020,1021,1138,1139,1140,1141,1142,1144,1145,1169,1215],image_dim:[1015,1019],imkkhk:1215,immedi:[1169,1212,1215],implement:[43,779,804,1169,1212,1215],in_featur:[1138,1147],includ:[40,41,896,899,941,981,982,994,1100,1101,1112,1116,1119,1120,1186,1196,1197,1200,1201,1211],include_deriv:[1100,1102,1109],include_empti:[40,41],include_gener:[1157,1158,1159,1163,1198,1199],include_inf:[40,41,896,941,994],include_nest:[1100,1101],include_self:[40,41],inclus:[1112,1114],incom:[1138,1147],increas:[820,842,846,852,896,915,928,996,1056,1100,1109],increasingli:1215,increment:[896,946,1056],increment_param_count:1163,inde:1169,indent:[40,41,42],independ:[1112,1113],index:[40,41,388,442,896,901,902,934,935,959,980,983,1100,1103,1105,1106,1107,1110],index_nest:1100,indic:[40,41,388,403,404,415,418,419,896,901,902,903,934,935,943,963,971,972,1100,1101,1103,1105,1106,1107,1108,1110,1111,1112,1113,1130,1135,1138,1139,1140,1141,1142,1143,1144,1145,1155,1156,1186,1187,1188,1189,1190,1191,1192,1193,1198,1199],indices_wher:[108,259,388,613,896],inevit:1215,inf:[40,41,896,941,951,994,1034,1039],infer:[818,819,896,929,939,942,969,977,1015,1019,1212,1215],infin:[896,950,951],inform:[870,884,885,999,1010],init_c:[1138,1148],init_h:[1138,1148],init_on_first_step:[1202,1206],initi:[40,41,42,59,386,387,820,832,833,834,835,870,999,1056,1138,1148,1163,1167,1169,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1202,1206],initialz:[1198,1199],inner:[1052,1053,1054,1055],inner_batch_fn:[1052,1053,1054],inner_batch_shap:[1138,1147],inner_cost_fn:[1052,1053,1054],inner_grad_step:[1052,1053,1054,1055],inner_learning_r:[1052,1053,1054,1055],inner_optimization_step:[1052,1053,1054,1055],inner_v:[1052,1053,1054],inp:1056,inplac:[40,41,896,907,944,948,984,999,1002,1004,1006,1007,1008,1175,1176,1202,1203,1204,1205,1206,1207],inplace_arrays_support:[388,896],inplace_decr:[108,259,388,499,613,896],inplace_incr:[108,259,388,499,613,896],inplace_oper:[0,11,12],inplace_upd:[40,41,108,259,388,499,613,896,1175,1176],inplace_variables_support:[388,896],input:[15,18,19,40,41,42,43,767,768,818,819,820,829,830,837,838,839,842,843,846,852,864,865,870,874,875,877,878,879,880,881,887,888,896,897,898,901,902,903,905,906,907,908,910,911,912,913,914,915,917,919,920,922,923,924,925,926,927,928,929,930,931,932,939,941,942,943,945,946,947,949,950,951,952,953,957,958,959,960,968,970,977,978,980,983,984,985,986,988,989,990,991,993,994,996,999,1003,1005,1010,1014,1015,1016,1017,1018,1019,1021,1022,1025,1027,1028,1030,1031,1032,1033,1034,1036,1038,1039,1041,1042,1043,1044,1048,1049,1050,1051,1052,1053,1054,1055,1056,1112,1113,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1155,1156,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1200,1201,1212],input_ax:[820,864,1056],input_channel:[1186,1187,1188,1189,1190,1191,1192,1195,1196],input_queu:1056,inputs_split:1056,insert:[896,928],insid:43,inspect:1056,inspir:1215,instal:1169,instanc:[15,16,17,18,19,40,41,43,442,779,804,820,829,1056,1175,1176,1208,1209],instead:[40,41,442,1119,1122,1123,1124,1125,1126,1127,1128,1215],int64:[870,874,896,899,904,942,964,965,997,998],int_dtyp:[870,879,891],integ:[40,41,442,870,885,888,896,899,910,930,970,979,1022,1028,1112,1114,1117,1119,1120],integr:1169,inter:1169,interchang:[40,41,896,985],interest:1169,interfac:[896,904,1212],intermedi:[40,41],intern:[40,41,820,999,1013,1056,1100,1101,1108,1109,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1208,1209],interpol:[896,953],intersect:[1034,1035],interv:[40,41,896,899,911,954,955,1034,1037,1112,1116,1119,1120],introduc:1215,inv:[697,1022,1215],invalid:[1119,1120],invalid_dtyp:870,invers:[1022,1024,1026,1034,1035,1036,1037,1038,1039,1041,1215],invert:[1022,1024,1026],invest:1215,invoc:[818,819],irrespect:1169,is_al:1056,is_arrai:[108,259,388,499,613,896,1056],is_float_dtyp:870,is_int_dtyp:870,is_mean:1056,is_sum:1056,is_var:[1163,1167],is_vari:[145,314,426,542,687,999],isfinit:[108,259,388,499,613,896],isinf:[259,499,613,896],isinst:1056,isnan:[259,499,613,896],isnumer:1056,item:[15,19,40,41,779,791,792,820,829,830,832,839,841,843,845,851,870,877,896,916,940,981,982,1056,1100,1104,1105,1106,1109,1110,1111,1169,1198,1199,1211],iter:[15,16,17,18,19,40,41,42,818,819,820,823,824,826,827,829,830,833,834,841,843,844,845,846,851,864,896,898,908,914,915,929,942,959,964,968,969,972,977,979,983,986,991,996,997,1056,1100,1101,1102,1104,1108,1109],iterbal:[820,841,845,851,1056],its:[442,820,864,896,903,942,969,985,991,1056,1169],itself:[43,1100,1109],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,365,366,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,767,768,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1167,1169,1170,1172,1173,1174,1175,1176,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1213,1214],ivy_backend:[40,41],ivy_bay:1215,ivyfcmodel:1211,ivyh:[40,41,42],ivymodul:[177,750],jame:1169,jax:[999,1005,1169,1215],jax_concat:1169,jnp:1169,join:[40,41,896,914,983,1056],journal:1169,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[1169,1186,1195,1215],kaimingnorm:[1177,1181],kalman:1215,kalman_filt:1215,kalman_filter_step:1215,kalman_filter_upd:1215,keep:[40,41,820,865,896,993,1056,1169,1215],keep_inner_v:[1052,1053,1054],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1052,1053,1054],keepdim:[40,41,388,423,435,436,896,993,1022,1025,1028,1119,1120,1122,1123,1124,1125,1126,1127,1128],kei:[15,16,17,40,41,42,779,784,820,832,896,916,1052,1053,1054,1056,1100,1103,1107,1138,1149,1150,1169,1175,1176,1186,1197,1202,1206],kept:[40,41,42,1052,1053,1054],kera:1215,kernel:[1138,1148],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,820,829,830,842,846,852,896,900,923,924,925,956,1056,1100,1104,1198,1199],keyword_color_dict:[40,41,42],kind:[870,884,885,1215],kwarg:[15,16,17,40,41,42,59,63,820,829,842,846,852,896,956,1056,1157,1158,1159,1163,1175,1176,1198,1199],kwarg_stateful_idx:[1157,1158,1159,1163,1198,1199],kwargs_clon:1056,kwargs_dist:1056,kwargs_uni:1056,label:[1151,1152,1153,1154],lamb:[999,1006,1169,1202],lamb_upd:999,lambda:[1056,1202,1205,1207,1211],lar:[999,1006,1007,1169,1202],larger:[896,911],largest:[40,41,896,901,930],lars_upd:999,last:[40,41,896,899,918,953,979,983,1022,1025,1027,1119,1120,1125,1127,1130,1135,1138,1148,1186,1196],later:[40,41,896,909],latest:[1186,1195],layer:[999,1002,1004,1006,1008,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1155,1156,1169,1177,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1215],layer_norm:1155,layernorm:[1169,1200],layerwis:[999,1007,1202,1205],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1100,1101,1108],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1130,1131,1132],leaky_relu:[742,1130],learn:[999,1002,1004,1006,1007,1008,1052,1053,1054,1055,1112,1118,1169,1202,1203,1204,1205,1206,1207,1212,1215],learnabl:[1155,1156,1200,1201],leav:[15,18,19,40,41,1100,1101,1102,1108,1109],left:[40,41,1022,1025,1028,1119,1122,1123,1124,1125,1126,1127,1128,1169],leftmost:[40,41],len:1056,length:[40,41,42,896,899,969,980,991],lenton2021ivi:1169,lenton:1169,less:[40,41,896,910,1056,1112,1116],less_util_node_str:1056,let:[1212,1215],level:1169,librari:[1169,1211,1215],lightweight:1169,like:[43,999,1005,1112,1116,1169,1211,1212,1215],limit:[40,41,42,870,884,885,896,911,912,913],linalg:[29,436,437,1023,1024,1025,1026,1027,1028,1029,1169],linear0:[1169,1211],linear1:1169,linear2:1211,linear:[435,896,932,953,1022,1130,1131,1132,1133,1138,1146,1169,1186,1187,1188,1189,1190,1191,1192,1193,1211],linear_resampl:[108,259,388,499,613,896],linearli:[896,932],link:1169,linspac:[108,259,388,499,613,896,899],list:[15,18,19,40,41,820,829,830,839,840,842,843,844,846,849,850,864,896,899,904,906,959,978,979,988,993,1052,1053,1054,1056,1100,1101,1102,1104,1108,1109,1138,1139,1140,1141,1142,1143,1144,1145,1169,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193],list_join:[40,41,42],list_stack:[40,41],littl:1212,load:[40,41],loaded_kwarg:1056,loader:1169,local_set:[896,940],locat:[43,896,951,952,1112,1113],log:[708,896,955,1034,1056,1151,1152,1153,1154,1169],log_all_op:1163,log_global_inference_abs_tim:[1160,1169],log_global_inference_rel_tim:[1160,1169],logarithm:[1034,1047],logic:[31,1031,1032,1033,1119,1120,1169],logical_and:[328,704,1030],logical_not:[328,704,1030],logical_or:[328,704,1030],logit:[1151,1154],logspac:[108,259,388,499,613,896],look:[43,1212,1215],loop:[1052,1053,1054,1055],loss:[1152,1153,1154,1169,1211],loss_fn:[1169,1211],lot:1212,low:[40,41,442,1112,1114,1116],lower:[40,41,896,958,1112,1116],lower_depth:[1198,1199],lowest:[15,18,19,40,41,1100,1109,1112,1114],lstm:[1138,1148,1169,1186],lstm_updat:1138,machin:[870,884,885,1112,1118,1169,1212,1215],mai:[896,899,922,926,1169,1212,1215],main:[896,942,1169],mainli:1169,make:[43,442,820,1056,1169,1212],maml:[1052,1053,1054],maml_step:1052,manag:[820,1056],mani:[40,41,43,896,979,1169],manner:[15,18,19,40,41,43,1100,1109],manual:[1100,1101,1108,1215],map:[40,41,42,820,829,896,951,952,1056,1100,1105,1106,1109,1186,1197,1211],map_cont:[40,41],map_nest_at_index:1100,map_nest_at_indic:1100,map_sequ:[40,41],mapper:[820,829,830,1056],mask:[1138,1149,1150],match:[40,41,896,956],match_kwarg:896,math:[33,440,441,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1056,1169],mathbb:[1022,1029],mathbf:[1022,1029],matmul:[43,259,388,499,613,896,1215],matplotlib:1212,matric:[1138,1147],matrix:[40,41,896,898,912,957,1022,1023,1024,1025,1026,1029,1138,1147,1186,1196],matrix_norm:[40,41,152,323,435,551,697,1022],matter:1169,max:[40,41,896,912,913,924,958,971,972,1056,1119,1122,1202,1204],max_batch_s:[40,41],max_chunk_s:[820,864,1056],max_depth:[40,41,820,824,827,834,842,846,852,896,940,1056,1100,1109],max_dev_dim_step_ratio:820,max_freq:[896,932],max_length:[40,41],max_node_dim_step_ratio:1056,max_norm:[40,41,896,912,913],max_split_factor_step_s:[820,1056],max_trust_ratio:[999,1006,1202,1204],maxim:[1169,1212,1215],maximis:1169,maximum:[40,41,42,613,820,842,846,852,864,896,901,911,912,913,932,999,1006,1056,1100,1109,1119,1122],mayb:[15,18,19],mdi:1056,mean:[40,41,442,820,849,850,851,852,864,896,924,1052,1053,1054,1055,1056,1100,1104,1112,1115,1119,1123,1126,1128,1177,1211,1215],measur:[1138,1149,1186,1197],mech:1169,mechan:[1169,1215],medic:1215,memori:[820,836,859,864,866,869,1056,1138,1148,1169],meshgrid:[259,388,613,896],messag:[1213,1214],meta:[35,1053,1054,1055,1169],method:[40,41,42,43,442,896,904,916,959,971,972,999,1006,1007,1056,1100,1101,1108,1109,1169,1186,1197,1198,1199,1212],might:[896,922,1215],min:[40,41,896,924,960,971,972,981,1056,1119,1124],min_bas:[896,982],min_denomin:[896,981],min_dev_dim_s:820,min_node_dim_s:1056,min_sf_tune_step:[820,1056],min_unit_dev_tune_step:820,min_unit_node_tune_step:1056,mind:1169,mini:[1155,1156,1200,1201],minimum:[40,41,613,820,870,874,896,899,902,904,911,937,938,973,974,981,982,1056,1119,1124],miss:[1202,1206],ml_framework:[896,899],mod:[896,931],mod_depth:[1198,1199],mod_height:[1198,1199],mod_with_top_mod_key_chain:[1198,1199],mode:[40,41,818,819,820,849,850,851,852,864,1022,1027,1056,1212],model:[1169,1211],modul:[40,41,42,59,896,961,1056,1169,1170,1172,1173,1174,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1200,1201,1208,1209,1215],moment:[999,1001,1002,1006,1202,1203,1204],more:[43,896,983,1056,1169,1212,1215],more_util_node_str:1056,most:[40,41,43,1169,1215],move:[40,41,43,820,865,1056],much:[1169,1215],multi:[442,896,961,1138,1149,1186,1197],multi_head_attent:1138,multi_index_nest:1100,multi_map:[40,41],multi_nod:1056,multidev:[820,831,832,833,852],multidevcontain:[40,41],multidevic:[820,829],multidevit:[820,823,826,829,830,834],multidevitem:[820,822,825],multidevnest:[820,824,827],multiheadattent:[1169,1186],multinod:[1056,1060],multinodecontain:1056,multinodeit:1056,multinodeitem:1056,multinodenest:1056,multinomi:[158,333,442,558,725,1112],multipl:[40,41,896,956,979,1022,1024,1119,1120,1122,1123,1124,1125,1126,1128,1155,1156,1186,1196,1212],multipli:[40,41,896,919,1119,1125],multiprocess:[40,41,42,388,613,820,829,896,1056],must:[40,41,42,43,779,804,820,849,850,851,852,864,896,899,914,916,918,926,950,958,960,972,983,1034,1040,1044,1056,1112,1117,1119,1120,1202,1206],mutabl:[1100,1102,1109],mutlidevic:[820,829],mutlinod:1056,mw_tm1:[999,1002,1006],mx_concat:1169,mxnet:[43,1169,1215],my_func:43,mymodel:1169,name:[818,819,1157,1158,1159,1163,1211],namespac:[43,1212],nan:[40,41,896,941,950,952,994],nativ:[15,17,18,19,40,41,820,836,838,847,848,859,866,869,870,875,882,883,1056,1169,1170,1175,1176],native_modul:[1175,1176],native_module_class:[1175,1176],nativearrai:[15,18,19,43,779,804,820,838,864,865,870,874,880,884,885,887,888,896,897,898,899,901,902,903,904,905,906,908,910,911,912,913,914,915,917,918,919,920,923,924,925,926,928,929,930,931,932,934,935,939,941,942,943,950,951,952,953,954,955,957,958,959,960,963,964,965,968,969,970,971,972,977,979,980,983,985,986,988,989,990,991,993,994,995,996,997,998,1056,1100,1102,1109],natur:[1034,1047,1215],ncdhw:[1138,1143,1144,1186,1191,1192],nchw:[1138,1141,1142,1145,1186,1189,1190,1193],ncw:[1138,1139,1140,1186,1187,1188],ndarrai:[365,366,439,440,442,896,989],ndhwc:[1138,1143,1144,1186,1191,1192],nearest:[896,970],need:[43,896,912,913,1138,1140,1142,1144,1169,1186,1188,1190,1192,1215],neg:[40,41,896,950,1119,1120,1125,1127,1130,1132],negative_slop:1177,neither:1056,nest:[15,16,17,18,19,40,41,42,820,842,846,852,896,904,988,1052,1053,1054,1056,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1198,1199,1202,1203,1204,1205,1206,1207],nested_indices_wher:1100,nested_map:[1056,1100],network:[1138,1147,1169,1170,1172,1186,1198,1199,1215],neural:[1138,1169,1172,1186,1211],new_node_percent_mem:1056,new_node_util:1056,new_node_utils_kei:1056,new_std:[1155,1156,1200,1201],newli:[818,819,896,908,909],newlin:[40,41,42],newshap:[896,908,969],next:[1056,1198,1199,1202,1203,1204,1205,1206,1207],nhwc:[1138,1141,1142,1145,1186,1189,1190,1193],node:[40,41,1100,1101,1108],node_clon:1056,node_dist:1056,node_dist_arrai:1056,node_dist_it:1056,node_in:1056,node_mapp:1056,node_str:1056,node_to_str:1056,node_util:1056,nodedistit:1056,nodedistitem:1056,nodedistnest:1056,nodemanag:[1056,1067],nodemapp:1056,nodemappermultiproc:1056,noinspect:[43,821,871,872,873,1000,1056,1164],non:[40,41,818,819,870,886,1198,1199,1202,1206,1212],none:[40,41,42,43,59,61,64,386,388,389,392,394,401,402,403,404,405,413,414,415,416,417,418,419,420,421,422,424,425,435,436,442,443,818,819,820,829,830,836,837,862,863,864,865,870,877,878,879,884,885,896,899,904,921,922,927,929,933,934,935,940,942,944,945,946,947,948,954,955,961,963,964,965,968,971,972,973,974,979,980,981,982,991,992,997,998,999,1002,1004,1006,1007,1008,1014,1015,1019,1022,1025,1028,1052,1053,1054,1055,1056,1100,1101,1104,1108,1109,1112,1113,1114,1115,1116,1119,1120,1122,1123,1124,1125,1126,1127,1128,1138,1140,1142,1144,1147,1148,1149,1150,1155,1156,1157,1158,1159,1163,1167,1175,1176,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209],norm:[40,41,896,912,913,1022,1025,1028,1156,1169,1201,1202,1204],normal:[1112,1115,1155,1156,1200,1201],normalized_idx:[1155,1156],normalized_shap:[1200,1201],notat:[40,41,1119,1121],noth:[40,41,1212],notimpl:43,notimplementederror:1056,now:[40,41,820,865,896,897,1056,1169,1186,1197,1198,1199,1211,1212,1215],np_concat:1169,ns_tune_step:1056,num:[388,413,414,896,954,955],num_arrai:[40,41],num_arrays_in_memori:896,num_arrays_on_dev:820,num_band:[896,932],num_channel:[1186,1193],num_chunk:1056,num_chunks_floor:1056,num_class:[1112,1113],num_cpu_cor:820,num_gpu:[101,386,820,1056],num_head:[1138,1149,1186,1197],num_kei:[1138,1149,1150],num_lay:[1186,1195],num_or_size_split:[40,41,388,420,896,979],num_output:1056,num_queri:[1138,1149,1150],num_sampl:[388,412,442,443,896,953,1015,1016,1112,1113],num_task:[1052,1053,1054,1055],number:[40,41,42,818,819,820,856,857,858,870,881,887,888,896,899,911,915,928,932,939,942,952,953,954,955,958,962,968,979,986,990,994,996,1022,1027,1052,1053,1054,1055,1056,1112,1113,1117,1119,1120,1122,1123,1124,1126,1128,1138,1149,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1212,1215],numer:[43,779,804,896,937,938,973,974,981,982,1034,1044,1177],numhead:[1138,1149],numpi:[40,41,365,366,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,896,989,1022,1027,1119,1121,1169,1211,1212,1215],nwc:[1138,1139,1140,1186,1187,1188],obj:[40,41],object:[40,41,42,59,820,870,874,884,885,896,899,904,999,1100,1103,1105,1106,1107,1110,1111,1112,1118,1163,1167,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199],object_in:[388,392,896,904],observ:1056,occupi:[896,971,972],off:[896,899],offer:1169,offset:[1155,1156],often:1212,old:[40,41],on_init:[1186,1197,1198,1199],onc:[820,864,1056,1112,1113,1169],one:[40,41,43,820,849,850,851,852,864,870,876,896,942,956,963,971,972,980,983,1022,1025,1028,1056,1119,1121,1122,1123,1124,1125,1126,1127,1128,1169,1212,1215],one_hot:[108,388,499,613,896],onearrai:[896,928],ones:[40,41,108,259,388,499,613,896,942,963,965,1169],ones_lik:[108,259,388,499,613,896],ongo:43,onli:[40,41,442,820,1056,1100,1101,1102,1108,1202,1203,1204,1205,1206,1207,1211,1212],onlin:1169,onto:[820,849,850,865,1056,1100,1104,1109],oom:[820,1056],open:[896,899,1112,1116,1169,1215],opencv:1212,oper:[40,41,896,907,923,924,925,954,955,984,999,1002,1004,1006,1007,1008,1030,1031,1032,1033,1138,1139,1140,1141,1142,1143,1144,1145,1147,1169,1170],operand:[40,41,1119,1121],oppos:[896,932],optim:[820,999,1002,1004,1006,1007,1008,1052,1053,1054,1055,1056,1169,1203,1204,1205,1207,1211,1215],optimizer_upd:999,option:[15,18,19,40,41,42,43,818,819,820,829,830,838,842,843,844,845,846,849,850,851,852,859,862,863,864,865,869,870,875,880,886,895,896,898,899,901,902,903,904,912,913,914,919,921,922,929,932,933,934,935,939,941,942,949,953,954,955,956,959,961,963,964,965,968,971,972,975,977,979,980,981,982,983,991,993,994,997,998,999,1002,1004,1005,1006,1007,1008,1010,1015,1019,1022,1025,1028,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1119,1122,1123,1124,1125,1126,1127,1128,1130,1131,1135,1138,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1212],ord:[896,929,1022,1027],order:[40,41,42,896,903,999,1002,1004,1006,1007,1008,1022,1025,1028,1052,1053,1054,1208,1209],ordered_node_util_kei:1056,org:1215,organ:43,origin:[40,41,42,896,965,969,998,1022,1025,1028],other:[40,41,43,779,781,782,787,789,790,794,796,797,798,799,800,802,804,805,806,807,808,809,811,812,813,815,816,817,818,819,896,898,899,942,999,1003,1112,1116,1169,1211,1212,1215],other_i:[43,779,804],otherwis:[15,16,17,18,19,40,41,820,837,870,877,878,879,896,907,950,991,992,995,999,1005,1010,1014,1052,1053,1054,1056,1119,1120,1122,1123,1124,1126,1128],our:[1169,1215],out:[442,870,884,885,896,899,1034,1039,1138,1146,1148,1169,1186,1194],out_feat_dim:[1138,1149],out_featur:[1138,1146,1147],out_i:[896,950],outdat:1215,outer:[1052,1053,1054,1055],outer_batch_fn:[1052,1053,1054],outer_batch_shap:[1138,1147],outer_cost_fn:[1052,1053,1054],outer_v:[1052,1053,1054],outlin:1212,output:[40,41,820,829,830,864,896,899,909,933,942,968,986,999,1003,1034,1040,1056,1112,1114,1115,1116,1138,1140,1142,1144,1146,1148,1149,1150,1169,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197],output_ax:[820,864,1056],output_axi:1056,output_channel:[1186,1187,1188,1189,1190,1191,1192,1195,1196],output_connected_onli:[1157,1159,1163,1198,1199],output_queu:1056,output_shap:[1138,1140,1142,1144,1186,1188,1190,1192],outsid:[896,911],over:[40,41,896,929,1022,1025,1028,1112,1116,1119,1120,1122,1123,1124,1126,1128,1155,1156,1200,1201],overal:1212,overflow:[896,899],overhead:1212,overrid:[896,963,965,998],overriden:[1202,1206],overwrit:[40,41,820,864,1056],overwrite_at_key_chain:[40,41],own:[1169,1212,1215],packag:[43,1212],pad:[896,915,932,996,1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193],pad_width:[388,896,915,996],page:1169,pair:[1138,1150],parallel:[820,829,830,1056],parallelis:[820,829,830,1056],param:[40,41,42,43,388,403,404,820,864,896,897,934,935,963,964,997,1056,1168,1169,1198,1199,1211],paramet:[15,16,17,18,19,40,41,42,767,768,779,804,818,819,820,829,830,836,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,859,862,863,864,865,866,869,870,874,875,876,880,881,882,883,884,885,886,887,888,895,896,898,899,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,917,918,919,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,939,941,942,943,945,946,947,949,950,951,952,953,954,955,956,957,958,959,960,961,964,965,968,969,970,971,972,973,974,975,977,978,979,980,981,982,983,984,985,986,988,989,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1010,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211],parameter:[1112,1115,1116],params_all_empti:1163,pardo:1169,pars:[896,916],part:[999,1002,1004,1006,1007,1008,1034,1039,1169,1198,1199,1212],partial:[40,41,1198,1199],particl:1215,particular:1215,pass:[40,41,42,820,829,864,870,875,896,909,999,1013,1052,1053,1054,1056,1175,1176,1198,1199,1202,1206,1208,1209],pattern:[40,41,896,923,924,925],per:[820,1056,1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193],percent_used_mem_on_dev:820,percent_used_mem_on_nod:1056,percentag:[820,859,1056],perf_count:1056,perform:[40,41,820,896,901,902,903,919,923,924,925,945,946,947,953,954,955,999,1002,1004,1006,1007,1008,1015,1016,1052,1053,1054,1055,1056,1100,1105,1106,1119,1120,1122,1123,1124,1125,1126,1127,1128,1130,1135,1138,1146,1148],permissable_step:1056,permut:[442,896,985,991],perpendicular:[896,918],person:1169,physci:1215,pickl:[40,41,1056],pickle_filepath:[40,41],pid:1163,pinv:[323,697,1022],pip:1169,pipelin:1211,pkk:1215,pkkm1:1215,pkm1km1:1215,place:[40,41,43,820,865,896,928,933,945,946,947,1056,1202,1203,1204,1205,1206,1207],placehold:[1100,1109],pleas:442,point:[870,884,887,896,899,1034,1044],popul:[40,41,1112,1113],popular:1215,population_s:[442,443,1112,1113],portabl:[1169,1170],posit:[15,16,17,820,842,846,852,896,897,899,928,932,950,1056,1112,1117,1175,1176],possibi:[40,41],possibl:[896,956,988,1015,1020,1215],post:[1155,1156],post_shap:[40,41],power:[43,779,804,810,896,937,973,982,1177],practic:1169,pre:[820,1056,1169],pre_shap:[40,41],pred:[1151,1152,1153,1154],predict:[1151,1152,1153,1154,1215],preprint:1169,present:[40,41],preserv:[40,41,42,896,929,999,1010],preserve_typ:[40,41,426,429,999,1010],press:1169,prevent:[999,1001,1002,1006,1056,1202,1203,1204],previou:[999,1002,1006],previous:[896,909],prime:1169,print:[40,41,42,820,860,896,966,1169,1211],print_all_arrays_in_memori:896,print_all_arrays_on_dev:820,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1202,1206],prob:[442,443,1112,1113,1138,1146,1186,1194],probabl:[1112,1113,1138,1146,1186,1194],problem:[43,1215],process:[43,820,829,830,859,869,896,961,1056],process_specif:[820,859,869,1056],prod:[40,41,896,924],produc:[820,829,830,1056],product:[40,41,896,918,919,957,1119,1121,1138,1149,1150,1186,1197],profil:[101,253,386,492,605,820,1056],project:[1169,1211,1212,1215],promot:[43,779,804,1034,1044],prompt:1169,properli:43,properti:[40,41,820,832,1056,1163,1167,1198,1199,1202,1203,1204,1205,1207],provid:[40,41,43,818,819,820,837,870,877,878,879,886,895,896,922,963,965,972,998,999,1002,1004,1006,1007,1008,1014,1056,1119,1120,1169,1186,1195,1202,1203,1204,1205,1206,1207,1212],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1022,1026],ptype:[1163,1167],pure:[40,41,1169,1215],purpos:1215,put:1056,pybroadexcept:1056,pyprotectedmemb:[1056,1164],pyshadowingbuiltin:43,pyshadowingnam:[821,871,872,873,1000,1056],python:[40,41,820,859,869,896,899,1056,1169],pytorch:[999,1002,1004,1006,1007,1008,1169,1202,1203,1204,1205,1206,1207,1211,1212,1215],pyunresolvedrefer:1056,quadrant:[1034,1040],queri:[40,41,779,793,814,820,853,863,1056,1138,1149,1150,1186,1197],query_dim:[1186,1197],query_kei:[40,41],queue:[40,41,42,820,829,830,896,967,975,1056],queue_class:[820,829,830,1056],queue_load_s:[40,41,42],queue_timeout:[40,41,42,896,1056],quick:[442,1169],quickli:1211,radian:[767,768,1034,1035,1037,1040,1042,1048,1050],rai:[1034,1035],rais:[40,41,43,779,804,896,907,937,973,980,982,992,1056,1119,1120,1198,1199,1202,1206],ram:[820,859,866,869,1056],randint:[158,333,442,558,725,1112],random:[37,40,41,443,1113,1114,1115,1116,1117,1118,1169],random_crop:1015,random_norm:[158,333,442,558,725,1112],random_uniform:[158,333,442,558,725,1112],randomli:[442,1015,1019,1138,1146,1186,1194],randomness_factor:[1157,1159,1163,1198,1199],rang:[442,896,899,954,955,1034,1040,1056,1169,1211,1215],rank:[896,915,993,996,1119,1120],rate:[999,1002,1004,1006,1007,1008,1052,1053,1054,1055,1186,1197,1202,1203,1204,1205,1206,1207],rather:[40,41,820,864,896,899,949,999,1005,1056],ratio:[820,999,1006,1015,1020,1056,1202,1204],raw:[40,41],raw_delta:1056,reach:[820,842,846,852,1056,1100,1109],read:[40,41],readi:[1056,1211],real:[1034,1035,1039],realiti:1212,rearrang:[40,41,896,923,925],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1052,1054],receiv:[820,829,830,896,900,956,1056,1186,1196],receivess:[820,1056],receiving_fn:1163,receivng:[1052,1055],recev:[1052,1053,1054],recognit:1215,recommend:1169,rectifi:[1130,1132,1133],recurr:[1138,1148],recurrent_bia:[1138,1148],recurrent_kernel:[1138,1148],recurs:[40,41,1100,1101,1102,1108,1109],redefin:43,reduc:[40,41,820,864,896,924,1056,1119,1120,1122,1123,1124,1125,1126,1127,1128],reduce_max:[40,41,165,338,444,563,732,1119],reduce_mean:[40,41,165,338,444,563,732,1119,1169,1211],reduce_min:[40,41,165,338,444,563,732,1119],reduce_prod:[40,41,165,338,444,563,732,1119],reduce_std:[40,41,338,1119],reduce_sum:[40,41,165,338,444,563,732,1056,1119],reduce_var:[40,41,165,338,444,563,732,1119],reduct:[39,40,41,388,418,419,896,924,971,972,1120,1121,1122,1123,1124,1125,1126,1127,1128,1169],refactor:43,refer:[999,1001,1002,1022,1029,1119,1120,1186,1196,1215],reflected_oper:[0,13,14],regard:[820,1056],regardless:[40,41,818,819],register_paramet:1211,reimplement:1215,rel:[999,1002,1004,1006,1007,1008],rel_slice_obj:1056,relev:[1202,1203,1204,1205,1206,1207],relu:[742,1130,1131,1132,1169,1211],remain:[43,896,969,1100,1104],remaind:[40,41,896,931,979],remov:[40,41,896,980,1052,1053,1054],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,896,929],rep:[896,986],repeat:[40,41,259,613,896,925,986,1056,1212],repeated_config_check:[820,1056],repeatedli:[1100,1107],repetit:[40,41,896,968,986],replac:[40,41,43,442,443,896,911,971,972,1112,1113],repo:1169,repres:[870,876,881,1138,1147],represent:[40,41,42,820,847,848,870,876,882,883,896,978,988,1056],reptil:[1052,1055],reptile_step:1052,requir:[43,818,819,870,874,896,899,904,1175,1176],res:43,resampl:[896,953],reshap:[40,41,43,442,613,896],reshape_lik:[40,41],respect:[896,926,999,1001,1002,1003,1004,1006,1007,1008,1034,1044,1052,1053,1054,1055],respons:1056,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,779,804,820,829,896,899,926,950,971,972,983,1022,1025,1028,1030,1031,1032,1033,1034,1044,1056,1119,1120,1122,1123,1124,1125,1126,1127,1128,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1169],ret:1056,ret_dict:1056,ret_fn:[820,829,830,1056],retain:[999,1003],retain_grad:[426,427,999,1003],retreiv:1056,retrn:[896,978],return_cont:[40,41],return_dict:[40,41],return_graph:[1157,1158,1159],return_inner_v:[1052,1053,1054,1055],return_sequ:[1186,1195],return_st:[1186,1195],rev:[896,922],revers:[40,41,896,922,929,991],right:[40,41],rk_e:1215,robot:1169,ronald:1169,round:[259,388,613,896,899,1056],row:[896,942,1112,1113],rule:[43,779,804,896,899,1034,1044],run:[820,829,999,1001,1002,1006,1052,1053,1054,1055,1056,1169,1170,1186,1197,1198,1199],safe:[820,829,1056],safety_factor:[820,1056],same:[15,16,17,40,41,43,820,829,830,864,865,870,874,896,897,910,914,930,931,934,935,963,965,970,971,972,983,998,999,1005,1010,1022,1027,1034,1039,1052,1053,1054,1056,1119,1121,1138,1139,1140,1141,1142,1143,1144,1145,1169,1186,1187,1188,1189,1190,1191,1192,1193,1211,1215],same_arrai:[40,41],sampl:[896,953,1015,1016,1112,1113,1115,1116,1138,1146,1169,1186,1194],satisfi:[896,904,1022,1024,1029],save:[40,41,896,976,987,1015,1017,1198,1199],save_debug_info:1163,save_dir:[386,387,820,835,1056],save_to_disk:[1157,1159,1163,1198,1199],save_weight:[1198,1199],scalar:[896,911,963,990,994],scale:[820,862,863,999,1007,1056,1138,1146,1149,1150,1155,1156,1186,1194,1197,1202,1205],scaled_dot_product_attent:1138,scatter:[896,963,971,972],scatter_flat:[108,259,388,499,613,896],scatter_nd:[108,259,388,499,613,896],scene:[999,1002,1004,1006,1007,1008],schemat:1169,screen:[40,41],search:[15,18,19,40,41],second:[40,41,820,851,896,905,918,926,967,975,985,999,1001,1002,1006,1052,1054,1056,1202,1203,1204],secondli:1215,see:[43,59,386,387,442,779,804,820,832,833,834,835,870,896,899,954,955,999,1034,1044,1119,1120,1163,1167,1169,1177,1179,1180,1182,1183,1185],seed:[40,41,158,442,725,1112],seed_valu:[40,41,442,1112,1117],seem:1169,seen_set:[896,940],select:[896,904,980,1212,1215],self:[40,41,43,59,386,387,779,804,820,832,833,834,835,870,999,1056,1163,1167,1169,1177,1179,1180,1182,1183,1185,1202,1206,1211,1215],sent:1056,seper:[896,932],seq:[40,41,42,1119,1121,1198,1199],sequenc:[15,16,17,40,41,42,442,818,819,820,829,830,839,840,841,842,843,844,845,846,849,850,864,870,874,896,899,904,906,908,914,915,929,942,956,959,964,968,969,972,979,983,986,991,996,997,999,1003,1015,1019,1020,1022,1025,1028,1056,1100,1111,1112,1114,1116,1119,1122,1123,1124,1125,1126,1127,1128,1138,1139,1140,1141,1142,1143,1144,1145,1155,1156,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1195,1198,1199,1200,1201,1202,1206,1208,1209],sequenti:1169,set:[15,18,19,40,41,820,849,850,862,863,864,896,898,921,942,973,974,975,976,999,1002,1004,1005,1006,1007,1008,1022,1025,1028,1056,1100,1101,1108,1110,1111,1112,1113,1117,1119,1122,1123,1124,1125,1126,1127,1128,1167,1169,1186,1195,1202,1203,1204,1205,1206,1207,1212,1215],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1167,set_debug_mod:44,set_default_devic:820,set_default_dtyp:870,set_default_float_dtyp:870,set_default_int_dtyp:870,set_default_nod:1056,set_exception_debug_mod:44,set_framework:[40,41,59,1056,1169,1211,1212,1215],set_ivy_backend:[40,41],set_min_bas:896,set_min_denomin:896,set_nest_at_index:1100,set_nest_at_indic:1100,set_param:1163,set_queue_timeout:896,set_split_factor:[820,1056],set_stat:[1202,1203,1204,1205,1206,1207],set_tmp_dir:896,set_with_grad:999,setter:1056,sever:1215,sgd:[1169,1202],shape0:1056,shape:[40,41,388,402,416,419,424,442,613,820,832,870,874,896,897,908,910,914,915,928,929,930,931,933,935,939,942,963,964,965,968,969,970,971,972,978,980,983,996,997,998,1015,1019,1022,1024,1034,1039,1040,1056,1112,1114,1115,1116,1119,1121,1138,1140,1142,1144,1163,1167,1186,1188,1189,1190,1191,1192,1193,1200,1201],shape_slic:[40,41],shape_to_tupl:896,share:[40,41,1169,1212],shift:1056,should:[40,41,42,43,442,779,804,818,819,820,896,908,909,916,963,969,999,1002,1004,1006,1007,1008,1034,1044,1056,1119,1121,1169],show:[40,41,1163,1169,1215],show_debug_info:1163,show_graph:[1157,1169,1198,1199,1202,1206],show_mod_in_top_mod:[1198,1199],show_structur:[1198,1199],show_sub_contain:[40,41],show_v:[1198,1199],show_v_in_top_v:[1198,1199],shown:[40,41],shp:1056,shuffl:[40,41,158,442,725,1112],shuffle_h5_fil:[40,41],sigmoid:[742,1130,1169,1211],signatur:[43,59,386,387,388,426,431,435,438,439,442,820,832,833,834,835,870,999,1163,1167,1177,1179,1180,1182,1183,1185],signific:1215,similar:[1138,1149,1186,1197],simpl:[43,896,927,1169,1212,1215],simplest:1212,simpli:[40,41,43,1169,1212,1215],simultan:1169,sin:[708,896,932,1034,1050,1212],sinco:1212,sine:[1034,1037,1038,1048,1049],singl:[40,41,818,819,820,829,830,849,850,851,852,896,980,990,994,1015,1020,1056,1112,1115,1116,1119,1122,1123,1124,1125,1126,1127,1128,1169,1212,1215],singleton:[1119,1120],singular:[1022,1027],sinh:[708,1034],siren:[1169,1177],size:[40,41,42,388,418,820,843,844,845,846,862,863,864,896,899,908,954,955,971,979,1015,1019,1022,1025,1027,1028,1056,1112,1113,1115,1116,1119,1122,1123,1124,1125,1126,1127,1128,1186,1187,1188],size_ordered_arrai:[40,41],skew:[1022,1029],skinv:1215,skip:[40,41],slice:[40,41,896,903,934,935,1056,1100,1107],slice_kei:[40,41],slice_obj:[40,41,1056],slice_via_kei:[40,41],slide:[1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193],slope:[1130,1132],small:[1151,1152,1153,1154,1155,1156,1169,1200,1201,1212],smaller:[896,911],smallest:[40,41,896,902,910],softmax:[175,454,742,1130,1138,1149,1150],softplu:[742,1130],solv:1215,some:[40,41,43,896,899,999,1001,1002,1004,1006,1007,1008,1013,1138,1146,1169,1186,1194,1212,1215],some_backend:43,some_namespac:43,someth:[43,1215],something_cool:43,somewher:[40,41],sort:[40,41,42,896,903,1022,1027,1056],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,365,366,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,443,767,768,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1167,1172,1173,1174,1175,1176,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1213,1214,1215],space:[896,899,932,954,955],spars:[1151,1154],sparse_cross_entropi:1151,spawn:[896,961],specif:[40,41,43,820,862,896,916,923,924,925,961,1052,1053,1054,1055,1056,1112,1118,1169,1198,1199,1211,1212],specifc:[1112,1113],specifi:[40,41,43,820,839,840,841,842,843,844,845,846,849,850,854,856,860,863,864,865,870,874,876,896,899,901,902,904,911,914,915,933,934,935,941,954,955,983,993,996,1022,1025,1028,1056,1100,1105,1106,1110,1111,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128],split:[40,41,108,259,388,499,613,820,829,843,844,845,846,862,863,864,896,956,1056],split_arg:1056,split_factor:[820,829,1056],split_func_cal:[820,1056],split_siz:1056,spread:[820,852,1056],squar:[896,942,1022,1024],squeez:[108,259,388,499,613,896],stabil:[896,981,982],stabl:[896,937,938,973,974,981,982],stable_divid:896,stable_pow:896,stack:[40,41,259,613,896,1015,1020,1100,1101,1108,1186,1195],stack_imag:[148,319,431,547,693,1015],stacked_dim_s:1056,stage:43,standard:[40,41,43,1112,1115,1119,1126,1155,1156,1200,1201],start:[40,41,386,387,388,389,413,414,442,820,835,896,899,954,955,1056,1169,1212],starting_index:[40,41],starting_split_factor:[820,1056],state:[1056,1138,1148,1157,1158,1159,1163,1169,1172,1173,1174,1175,1176,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211],statement:1212,static_argnam:[388,394,818,819],static_argnum:[388,394,818,819],std:[442,1112,1115],step:[40,41,388,389,820,896,899,954,955,999,1001,1002,1004,1006,1007,1008,1052,1053,1054,1055,1056,1169,1202,1203,1204,1205,1206,1207,1211,1215],stephen:1169,stick:1169,still:[40,41],stochast:[1202,1207],stop:[40,41,386,387,388,389,413,414,820,835,864,896,899,954,955,999,1002,1004,1006,1007,1008,1010,1052,1053,1054,1055,1056,1202,1203,1204,1205,1206,1207],stop_gradi:[40,41,314,426,542,687,820,864,999,1002,1004,1006,1007,1008,1052,1053,1054,1055,1056,1202,1203,1204,1205,1206,1207],stopiter:1056,store:[40,41,896,932,979,999,1013,1198,1199],store_var:[1198,1199],str:[15,16,17,40,41,42,43,818,819,820,829,830,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,864,870,875,876,881,882,883,884,885,886,887,888,895,896,904,921,923,924,925,959,961,964,971,972,1022,1025,1028,1052,1053,1054,1055,1056,1100,1104,1119,1121,1175,1176,1186,1197,1198,1199],str_to_nod:1056,straight:1212,strength:[1169,1215],stride:[1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193],string:[40,41,820,836,838,847,848,853,859,865,866,869,870,874,880,882,883,886,895,896,899,904,921,942,964,965,997,998,1056,1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193,1198,1199],structur:[40,41,42,43,896,916],structural_diff:[40,41],sub:[40,41,820,843,844,849,850,851,852,896,979,1052,1053,1054,1055,1056],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1056,sub_mod:[1198,1199],sub_modul:[1208,1209],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1169,1170,1200,1201,1208,1209],substr:[40,41],suggest:1169,suitabl:[1015,1020],sum:[40,41,388,418,419,820,849,850,851,852,864,896,920,924,971,972,1056,1119,1121,1127],summat:[40,41,1119,1121],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,81,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,153,154,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,176,178,179,181,182,183,184,185,186,187,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,320,321,322,324,325,326,327,329,330,331,334,335,336,337,339,340,341,342,343,344,345,346,347,350,352,353,354,355,356,357,358,366,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,429,430,432,433,434,436,437,440,441,443,445,446,447,448,449,450,451,452,455,456,458,459,460,461,462,463,464,472,493,494,495,496,497,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,543,544,545,546,548,549,550,552,553,554,557,559,560,561,562,564,565,566,567,568,569,570,571,575,576,577,585,606,607,608,609,610,611,612,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,688,689,690,691,692,694,695,696,698,699,700,701,702,703,705,706,707,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,726,727,728,729,730,731,733,734,735,736,737,738,739,740,743,744,745,746,747,748,749,751,752,754,755,756,757,758,759,760,768,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,819,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1055,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1156,1158,1159,1161,1162,1164,1168,1169,1173,1174,1176,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1214,1215],supports_inplac:896,suppos:1215,svd:[323,551,697,1022],swap:[40,41,896,985],swapax:[40,41,499,613,896,1215],symmetr:[1022,1029],syntax:[386,388,426,431,435,438,439,442],tab:1169,take:[896,953],taken:[1119,1122,1123,1124,1126,1128],tan:[708,1034,1039],tangent:[1034,1039,1040,1041,1050,1051,1130,1137],tanh:[708,742,1034,1130],target:[40,41,820,836,839,840,841,842,843,844,845,846,849,850,851,852,865,1056,1169],target_dict:[40,41],task:[1052,1053,1054,1055],team:1215,templat:1169,temporari:[896,976,987],tensor:[40,41,43,388,418,419,820,838,870,880,896,899,901,902,903,908,954,955,958,960,963,964,965,969,971,972,979,997,998,1056,1112,1113,1114,1138,1146,1148,1169,1186,1194,1196,1202,1203,1204,1205,1206,1207,1211,1212],tensorflow:[1138,1140,1142,1144,1169,1186,1188,1190,1192,1212,1215],term:[40,41,1138,1148,1169,1186,1196],termcolor:[40,41,42],termin:[40,41,42,1056],test:[870,887,888,896,950,1119,1120],tf_concat:1169,than:[40,41,820,864,896,899,910,911,930,949,958,980,983,999,1005,1056,1112,1116,1169,1212],thei:[40,41,43,1034,1040,1052,1053,1054,1112,1113,1169,1208,1209,1212],them:[1169,1215],themselv:[1100,1101],therefor:43,thi:[40,41,42,43,820,842,846,852,859,864,869,896,899,932,967,969,975,999,1002,1004,1005,1006,1007,1008,1013,1022,1025,1028,1056,1100,1104,1109,1119,1122,1123,1124,1125,1126,1127,1128,1138,1147,1169,1198,1199,1202,1203,1204,1205,1206,1207,1211,1212,1215],thing:[43,1169],those:[40,41,896,911,999,1013,1022,1027,1056],threshold:[896,958,960],through:[40,41],tile:[259,499,613,896],time:[896,986,999,1002,1006,1052,1053,1054,1055,1056,1112,1113,1138,1148,1186,1197,1198,1199,1215],time_chronolog:[1157,1158,1163],time_infer:[1157,1158],timeout:[40,41,42,820,829,830,896,967,975,1056],timestep:[1138,1148,1186,1195],timing_fnam:[1157,1158],titl:1169,tmp_dir:896,tmp_dr:[896,976],to_appli:[40,41],to_clon:[820,1056],to_dev:[40,41,101,253,386,492,605,820],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[820,1056],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,43,1169],to_ivy_modul:[177,750,1169,1175],to_json:[40,41],to_kv_fn:[1138,1149],to_kv_v:[1138,1149],to_list:[40,41,388,613,896],to_multi_dev:[40,41],to_mut:[1100,1102,1109],to_n:[15,40,41,43,1169],to_nod:1056,to_numpi:[40,41,388,613,896,1169,1211],to_out_fn:[1138,1149],to_out_v:[1138,1149],to_q_fn:[1138,1149],to_q_v:[1138,1149],to_raw:[40,41],to_scalar:[388,613,896],todo:1056,togeth:[40,41,1208,1209],tool:[1169,1212],top_mod:[1198,1199],topic:1215,torch:[43,818,819,1169,1211,1212,1215],torch_concat:1169,torchfcmodel:1211,total:[40,41,42,820,866,1056],total_mem_on_dev:820,total_mem_on_nod:1056,tpu:[820,867,1056],tpu_is_avail:[386,492,605,820,1056],tpye:[870,881],trace:[40,41,896,949],track:[820,1056,1100,1109,1198,1199],track_submod_call_ord:[1198,1199],track_submod_ret:[1198,1199],trail:[1200,1201],train:[999,1001,1002,1006,1169,1170],trainabl:[999,1005,1169,1170,1175,1176,1198,1199,1208],trainer:1169,tran:1215,transform:[1138,1146,1147],transpos:[40,41,108,259,388,613,820,851,896,1056,1138,1140,1142,1144,1186,1188,1190,1192],travers:[15,18,19,40,41,1100,1109],treat:[40,41,818,819],tree_depth:1167,tree_height:1163,tri:[40,41],trigonometr:[767,768,1034,1035,1039,1042,1048],trim_kei:[40,41],trust:[999,1006,1202,1204],truth:[896,926,1030,1031,1032,1033],try_else_non:896,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[820,1056],tune_dev_alloc:820,tune_dev_split:820,tune_node_alloc:1056,tune_node_split:1056,tune_step:[820,1056],tupl:[15,16,17,18,19,40,41,818,819,896,915,932,933,978,996,1056,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1114,1119,1120,1122,1123,1124,1125,1126,1127,1128],two:[40,41,896,899,905,918,957,985,1022,1025,1027],type:[15,18,40,41,42,43,59,386,387,779,804,820,832,833,834,835,847,848,852,864,870,874,875,876,880,881,882,883,884,885,886,887,888,895,896,897,899,904,910,914,916,926,930,931,933,942,949,950,963,964,965,970,984,994,997,998,999,1005,1010,1034,1044,1056,1163,1167,1169,1177,1179,1180,1182,1183,1185,1198,1199,1212],types_to_iteratively_nest:[40,41,42],uint8:[1015,1017,1021],uint8_img_to_float_img:1015,unchang:[15,16,17,18,19],unif:1056,unifi:[40,41,820,849,850,851,852,864,1056,1169],uniform:[40,41,1112,1113,1115,1116,1177,1179,1180,1183,1184],uniformli:[1112,1114,1116],unify_arrai:1056,unify_it:1056,unify_nest:1056,union:[15,18,19,40,41,43,779,804,818,819,820,838,843,844,845,846,864,865,870,874,875,876,880,881,882,883,884,885,886,887,888,895,896,897,898,899,901,902,903,904,905,906,908,910,911,912,913,914,915,917,918,919,920,923,924,925,926,928,929,930,931,932,933,934,935,939,941,942,943,950,951,952,953,954,955,957,958,959,960,963,964,965,968,969,970,971,972,977,978,979,980,983,985,986,988,989,990,991,993,994,995,996,997,998,1056,1100,1101,1102,1108,1109],uniqu:[820,829,830,1052,1053,1054,1055,1056,1100,1104],unique_kwarg:1056,unit:[820,1034,1035,1037,1056,1130,1131,1132,1133],unitari:[1022,1027],unless:[896,963,965,998],unlik:[820,1056],unnorm:[1112,1113],unpack:[896,993],unrol:[1138,1148],unset:1212,unset_debug_mod:44,unset_default_devic:820,unset_default_dtyp:870,unset_default_float_dtyp:870,unset_default_int_dtyp:870,unset_framework:[59,1212],unset_with_grad:999,unstack:[40,41,108,259,388,499,613,896],unus:[818,819],updat:[40,41,388,418,419,820,829,896,947,971,972,999,1001,1002,1004,1006,1007,1008,1052,1053,1054,1056,1100,1105,1106,1110,1111,1138,1148,1175,1176,1202,1203,1204,1205,1206,1207,1212,1215],update_backend:[40,41],update_config:[40,41],update_inference_tim:1163,upper:[40,41,1112,1116],upper_depth:[1198,1199],usabl:[1169,1215],usag:[820,864,1056],use:[40,41,42,43,442,820,829,830,855,867,896,968,981,982,1056,1138,1149,1155,1156,1169,1200,1201,1212,1215],used:[40,41,43,442,820,829,859,862,863,869,870,881,896,937,938,956,965,971,972,973,974,998,999,1006,1007,1022,1025,1052,1053,1054,1055,1056,1100,1109,1186,1197,1202,1204,1205,1211,1212],used_dev:[820,829],used_mem_on_dev:820,used_mem_on_nod:1056,used_node_str:1056,used_node_strs_dict:1056,useful:[40,41,820,864,1056,1138,1147,1169,1212],user:[1169,1186,1197,1198,1199,1212,1215],uses:1169,using:[40,41,999,1001,1002,1100,1103,1107,1119,1121,1138,1146,1150,1169,1186,1194,1211,1212,1215],util:[820,853,1056],v_with_top_v_key_chain:[1198,1199],val:[40,41,388,407,408,409,779,814,896,945,946,947,973,974,1167],valid:[870,875,896,981,982,1119,1120,1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193],valid_dtyp:870,valu:[40,41,388,820,832,863,864,896,897,899,901,902,903,911,912,913,915,916,922,926,932,933,934,935,951,952,954,955,958,960,967,968,969,970,971,972,973,974,975,991,994,995,996,999,1003,1006,1015,1021,1022,1027,1030,1031,1032,1033,1034,1045,1046,1047,1052,1053,1054,1056,1100,1104,1105,1106,1110,1111,1112,1115,1116,1119,1122,1124,1138,1149,1150,1155,1156,1163,1186,1197,1200,1201,1202,1204],value_is_nan:896,vanilla:[1052,1054],var_shap:1177,variabl:[15,16,17,18,19,40,41,314,426,542,687,896,907,945,946,947,948,949,984,999,1002,1003,1004,1005,1006,1007,1008,1010,1013,1052,1053,1054,1055,1138,1149,1155,1156,1175,1176,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209],variable_data:[426,687,999],varianc:[40,41,1119,1128,1215],varieti:1212,variou:[43,1169],vector:[40,41,435,437,896,913,918,1022,1027,1028,1029,1138,1147,1186,1196],vector_norm:[40,41,1022],vector_to_skew_symmetric_matrix:[152,323,435,551,697,1022],verbos:1214,veri:[43,1169],version:43,via:[1100,1101,1108,1212],view:[1015,1020],vision:1169,visual:1212,volum:[1138,1143],vw_tm1:[999,1002,1006],wai:[1212,1215],wait:[40,41,42],want:[1169,1212,1215],warn:[59,66,67,68,69,70],warp:[431,432,1015,1016],watch:1211,weight:[999,1001,1002,1004,1006,1007,1008,1138,1147,1148,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1202,1204,1205],weight_initi:[1186,1187,1188,1189,1190,1191,1192,1193,1195,1196],weights_path:[1198,1199],well:[40,41,896,941],were:[40,41,1056],what:1169,when:[40,41,42,820,896,909,982,995,1022,1027,1056,1169,1198,1199,1212,1215],where:[40,41,43,259,388,613,779,804,896,899,908,911,915,928,943,951,952,963,996,1022,1027,1100,1101,1108,1112,1113,1119,1120],wherebi:[1100,1109],whether:[15,18,19,40,41,42,818,819,820,838,851,855,859,864,867,869,870,880,886,887,888,895,896,898,905,906,919,922,927,932,939,941,944,948,949,956,977,984,993,994,999,1002,1003,1004,1005,1006,1007,1008,1010,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1119,1120,1130,1131,1138,1146,1169,1175,1176,1186,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],which:[40,41,42,43,442,818,819,820,829,830,838,843,844,845,846,849,850,851,852,854,856,860,862,863,864,870,875,880,884,885,886,895,896,899,904,914,916,918,919,920,922,929,933,934,935,936,942,943,953,954,955,962,963,964,965,966,968,971,972,979,983,993,995,997,998,999,1002,1003,1004,1006,1007,1008,1010,1012,1013,1015,1017,1022,1025,1028,1034,1040,1056,1100,1104,1105,1106,1110,1111,1112,1113,1114,1115,1116,1119,1120,1122,1123,1124,1125,1126,1127,1128,1130,1135,1138,1149,1150,1169,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1211,1212],whitespac:[40,41,42],whose:[43,779,804,896,904,909,1119,1121,1122,1123,1124,1126,1128],why:[1169,1170],width:[1015,1020],wiki:1215,wikipedia:1215,window:[1015,1020,1138,1139,1140,1141,1142,1143,1144,1145,1186,1187,1188,1189,1190,1191,1192,1193],wise:[40,41,43,767,768,779,804,896,910,911,926,930,931,958,960,970,999,1002,1004,1006,1008,1030,1031,1032,1033,1034,1035,1037,1039,1040,1042,1044,1045,1046,1047,1048,1050,1130,1131,1132,1133,1134,1135,1136,1137],wish:1212,with_arg_label:[1157,1159,1163,1198,1199],with_array_cach:[1157,1158,1159,1163],with_bia:[1186,1196],with_cal:[896,922],with_default_key_color:[40,41],with_edge_label:[1157,1159,1163,1198,1199],with_entries_as_list:[40,41],with_grad:[999,1009,1198,1199],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1056,with_output_label:[1157,1159,1163,1198,1199],with_partial_v:[1198,1199],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,388,420,896,979,1056],with_to_kv_fn:[1186,1197],with_to_out_fn:[1186,1197],with_to_q_fn:[1186,1197],within:[15,18,19,896,899,1022,1027,1112,1116],without:[40,41,43,896,967,969,975,1100,1102,1212],wonder:1169,word:[15,16,17,896,899,1112,1116,1175,1176],work:[43,1211],worker:[820,829,830,1056],worker_class:[820,829,830,1056],worker_kwarg:1056,would:[43,896,903,1130,1135,1169,1212,1215],wrap:[15,40,41,42,386,388,426,431,435,438,439,442,896,909,999,1013,1169],wrapper:43,write:[40,41,43,1169,1170,1215],written:[43,1169,1215],ws_new:[999,1002,1004,1006,1007,1008],x1_i:[896,926,1034,1044],x2_i:[896,926,1034,1044],x_feat_dim:[1138,1149],x_i:[896,950],x_in:[1169,1211],x_inv:[1022,1024],x_max:[388,896,911],x_min:[388,896,911],x_sub:1056,xkk:1215,xkkm1:1215,xkm1km1:1215,xs0:1056,xs_t:1056,year:[1169,1215],yet:[1100,1109,1215],yield:[896,995],you:[1169,1211,1212,1215],your:[1169,1211,1212,1215],your_awesome_project:1212,yourself:1169,zero:[40,41,108,259,388,499,613,896,915,963,965,971,972,996,998,999,1001,1002,1006,1007,1138,1146,1169,1177,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1202,1203,1204,1205],zero_pad:[259,388,499,613,896],zeros_lik:[108,259,388,499,613,896],zip:1056,zk_e:1215},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","cos","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","cos","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","cos","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","cos","erf","Random","multinomial","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","cos","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","cos","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","cos","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","cos","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","finfo","iinfo","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":922,"function":[77,78,80,82,84,85,86,87,88,89,90,191,192,194,195,197,198,199,200,201,202,203,362,363,365,367,369,370,371,372,373,374,375,468,469,471,473,475,476,477,478,479,480,481,581,582,584,586,588,589,590,591,592,593,594,764,765,767,769,771,772,773,774,775,776,777],Ones:1182,Using:1212,abs:[260,500,614,897],aco:[709,1035],acosh:[710,1036],activ:[175,349,454,573,742,1130,1172],adam:1203,adam_step:1001,adam_upd:1002,algebra:[83,84,196,197,368,369,474,475,587,588,770,771],all:[166,339,445,564,733,1120],all_equ:898,all_nested_indic:1101,api:[0,43,75,92,189,205,360,377,466,483,579,596,762],arang:[109,261,389,501,615,899],arg_nam:900,argmax:[110,390,502,616,901],argmin:[111,391,503,617,902],args_to_ivi:16,args_to_n:17,argsort:[618,903],arithmet:[1,93,206,378,484,597],arrai:[0,3,43,75,91,92,94,112,189,204,205,207,214,262,360,376,377,379,392,466,482,483,485,504,579,595,596,598,619,762,779,904],array_equ:[263,620,905],arrays_equ:906,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[711,1037],asinh:[712,1038],assert_supports_inplac:907,atan2:[714,1040],atan:[713,1039],atanh:[715,1041],attribut:[5,95,208,380,486,599],backend:[43,73],bilinear_resampl:[149,320,432,548,694,1016],binary_cross_entropi:1152,bitwis:[7,96,209,381,487,600],broadcast_to:[264,621,908],builder:51,builtin:[91,204,214,376,482,595,779],builtin_ab:[215,780],builtin_add:[216,781],builtin_and:[217,782],builtin_bool:[218,783],builtin_contain:[219,784],builtin_deepcopi:[220,785],builtin_dir:[221,786],builtin_eq:[222,787],builtin_float:[223,788],builtin_floordiv:[224,789],builtin_g:[225,790],builtin_getattr:[226,791],builtin_getattribut:[227,792],builtin_getitem:[228,793],builtin_gt:[229,794],builtin_int:[230,795],builtin_invert:[231,796],builtin_l:[232,797],builtin_lt:[233,798],builtin_mul:[234,799],builtin_n:[235,800],builtin_neg:[236,801],builtin_or:[237,802],builtin_po:[238,803],builtin_pow:[239,804],builtin_radd:[240,805],builtin_rand:[241,806],builtin_rfloordiv:[242,807],builtin_rmul:[243,808],builtin_ror:[244,809],builtin_rpow:[245,810],builtin_rsub:[246,811],builtin_rtruediv:[247,812],builtin_rxor:[248,813],builtin_setitem:[249,814],builtin_sub:[250,815],builtin_truediv:[251,816],builtin_xor:[252,817],cache_fn:909,cast:[113,265,393,505,622,874],ceil:[266,623,910],choleski:[698,1023],choose_random_framework:61,citat:1169,clear_framework_stack:62,clear_mem_on_dev:[607,836],clip:[267,624,911],clip_matrix_norm:912,clip_vector_norm:913,clone:1071,clone_arrai:1072,clone_it:1073,clone_nest:1074,clonedit:1058,cloneditem:1057,clonednest:1059,closest_valid_dtyp:875,code:1215,comparison:[9,97,210,382,488,601],compil:[268,394,625,818,819,1157],compile_graph:1158,concaten:[114,269,395,506,626,914],constant:[76,190,361,467,580,763],constant_pad:[270,507,627,915],contain:[40,41],container_typ:[628,916],content:1169,contribut:43,conv1d:[181,352,458,754,1139,1187],conv1d_transpos:[182,353,459,755,1140],conv1dtranspos:1188,conv2d:[183,354,460,575,756,1141,1189],conv2d_transpos:[184,355,461,757,1142],conv2dtranspos:1190,conv3d:[185,356,462,576,758,1143,1191],conv3d_transpos:[186,357,463,759,1144],conv3dtranspos:1192,convers:15,convert:[177,750,1175],convert_dtyp:876,copy_arrai:[629,917],copy_nest:1102,core:[100,213,385,491,604,778],cos:[81,157,366,440,472,557,585,716,768,1042],cosh:[717,1043],cprint:1214,creation:[77,191,362,468,581,764],cross:[271,630,918],cross_entropi:1153,cumprod:[115,272,396,631,919],cumsum:[632,920],current_framework:63,current_framework_str:[633,921],data:[78,79,192,193,363,364,469,470,582,583,765,766],debug_mod:45,debugg:44,default_devic:837,default_dtyp:877,default_float_dtyp:878,default_int_dtyp:879,default_nod:1075,depthwise_conv2d:[187,358,464,577,760,1145],depthwiseconv2d:1193,design:43,dev:[103,255,494,608,838],dev_clon:839,dev_clone_arrai:840,dev_clone_it:841,dev_clone_nest:842,dev_dist:843,dev_dist_arrai:844,dev_dist_it:845,dev_dist_nest:846,dev_from_str:[104,256,495,609,847],dev_to_str:[105,257,496,610,848],dev_unifi:849,dev_unify_arrai:850,dev_unify_it:851,dev_unify_nest:852,dev_util:853,devclonedit:823,devcloneditem:822,devclonednest:824,devdistit:826,devdistitem:825,devdistnest:827,devic:[20,101,253,386,492,605,820],devmapp:829,devmappermultiproc:830,distribute_nest:1076,divid:1044,document:1169,dropout:[1146,1194],dtype:[116,273,397,508,634,870,880],dtype_bit:[117,274,398,509,635,881],dtype_from_str:[118,275,399,510,636,882],dtype_to_str:[119,276,400,511,637,883],ecosystem:52,einops_rearrang:923,einops_reduc:924,einops_repeat:925,einsum:[167,340,446,565,734,1121],elementwis:[80,194,365,471,584,767],equal:[512,638,926],erf:[441,718,1045],execute_with_gradi:[146,315,427,543,688,1003],exist:927,exp:[719,1046],expand_dim:[277,639,928],extens:[83,196,368,474,587,770],finfo:884,firstlayersiren:1179,flip:[120,278,401,513,640,929],float_img_to_uint8_img:1017,floor:[279,641,930],floormod:[280,642,931],fomaml_step:1053,fourier_encod:932,framework:59,full:[121,281,402,514,643,933],func:72,gather:[122,282,403,515,644,934],gather_nd:[123,283,404,516,645,935],geglu:1173,gelu:[350,455,743,1131,1174],gener:[22,108,259,388,499,613,896],get_all_arrays_in_memori:936,get_all_arrays_on_dev:854,get_framework:64,get_min_bas:937,get_min_denomin:938,get_num_dim:[646,939],get_referrers_recurs:940,global:1160,glorotuniform:1180,gpu_is_avail:[855,1077],gradient:[24,145,314,426,542,687,999],gradient_descent_upd:1004,gradient_imag:[150,321,433,549,695,1018],graph:1163,gym:53,handler:59,has_nan:941,helper:1165,ident:[124,284,405,517,647,942],iinfo:885,imag:[26,148,319,431,547,693,1015],index_nest:1103,indices_wher:[125,285,406,648,943],initi:1177,inplac:[11,98,211,383,489,602],inplace_arrays_support:944,inplace_decr:[126,286,407,518,649,945],inplace_incr:[127,287,408,519,650,946],inplace_upd:[128,288,409,520,651,947],inplace_variables_support:948,inv:[699,1024],invalid_dtyp:886,is_arrai:[129,289,410,521,652,949],is_float_dtyp:887,is_int_dtyp:888,is_vari:[147,316,428,544,689,1005],isfinit:[130,290,411,522,653,950],isinf:[291,523,654,951],isnan:[292,524,655,952],ivi:[43,50,51,52,53,54,55,56,57,58,761,1211,1212,1215],ivymodul:[178,751],jax:74,lamb:1204,lamb_upd:1006,lar:1205,lars_upd:1007,layer:[180,351,457,574,753,1138,1186],layer_norm:1156,layernorm:1201,leaky_relu:[744,1132],linalg:[28,152,323,435,551,697,1022],linear:[83,84,196,197,368,369,474,475,587,588,770,771,1147,1196],linear_resampl:[131,293,412,525,656,953],linspac:[132,294,413,526,657,954],log:[720,1047,1166],log_global_inference_abs_tim:1161,log_global_inference_rel_tim:1162,logic:[30,155,328,438,555,704,1030],logical_and:[329,705,1031],logical_not:[330,706,1032],logical_or:[331,707,1033],logspac:[133,295,414,527,658,955],loss:1151,lstm:1195,lstm_updat:1148,maml_step:1054,manipul:[85,198,370,476,589,772],map:1104,map_nest_at_index:1105,map_nest_at_indic:1106,match_kwarg:956,math:[32,156,332,439,556,708,1034],matmul:[296,528,659,957],matrix_norm:[153,324,436,552,700,1025],maximum:[660,958],mech:54,memori:55,meshgrid:[297,661,959],meta:[34,1052],method:[82,195,367,473,586,769],minimum:[662,960],model:56,modul:[1198,1199,1211],multi:1056,multi_head_attent:1149,multi_index_nest:1107,multidevcontain:42,multidevit:833,multidevitem:832,multidevnest:834,multiheadattent:1197,multinodeit:1062,multinodeitem:1061,multinodenest:1063,multinomi:[159,334,443,559,726,1113],multiprocess:[663,961],mxnet:188,nativ:1211,nest:1100,nested_indices_wher:1108,nested_map:1109,network:1211,next:1169,node:[1056,1078],node_dist:1079,node_dist_arrai:1080,node_dist_it:1081,node_str:1082,node_to_str:1083,node_util:1084,nodedistit:1065,nodedistitem:1064,nodedistnest:1066,nodemapp:1068,nodemappermultiproc:1069,norm:[1155,1200],num_arrays_in_memori:962,num_arrays_on_dev:856,num_cpu_cor:857,num_gpu:[106,858,1085],numpi:359,nutshel:1169,one_hot:[134,415,529,664,963],ones:[135,298,416,530,665,964],ones_lik:[136,299,417,531,666,965],oper:[1,3,7,9,11,13,43,93,94,96,97,98,99,206,207,209,210,211,212,378,379,381,382,383,384,484,485,487,488,489,490,597,598,600,601,602,603],optim:[1202,1206],optimizer_upd:1008,overview:1169,param:1167,percent_used_mem_on_dev:859,percent_used_mem_on_nod:1086,pinv:[325,701,1026],portabl:1215,print_all_arrays_in_memori:966,print_all_arrays_on_dev:860,profil:[102,254,387,493,606,835,1070],queue_timeout:967,randint:[160,335,560,727,1114],random:[36,158,333,442,558,725,1112],random_crop:1019,random_norm:[161,336,561,728,1115],random_uniform:[162,337,562,729,1116],reduce_max:[168,341,447,566,735,1122],reduce_mean:[169,342,448,567,736,1123],reduce_min:[170,343,449,568,737,1124],reduce_prod:[171,344,450,569,738,1125],reduce_std:[345,1126],reduce_sum:[172,346,451,570,739,1127],reduce_var:[173,347,452,571,740,1128],reduct:[38,165,338,444,563,732,1119],reflect:[13,99,212,384,490,603],relu:[745,1133],repeat:[300,667,968],reptile_step:1055,reshap:[668,969],robot:57,round:[301,669,970],run:1212,scaled_dot_product_attent:1150,scatter_flat:[137,302,418,532,670,971],scatter_nd:[138,303,419,533,671,972],search:[86,199,371,477,590,773],seed:[163,730,1117],sequenti:[1208,1209],set:[87,200,372,478,591,774],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:861,set_default_dtyp:889,set_default_float_dtyp:890,set_default_int_dtyp:891,set_default_nod:1087,set_exception_debug_mod:48,set_framework:65,set_min_bas:973,set_min_denomin:974,set_nest_at_index:1110,set_nest_at_indic:1111,set_queue_timeout:975,set_split_factor:[862,1088],set_tmp_dir:976,set_with_grad:1009,sgd:1207,shape:[672,977],shape_to_tupl:978,show_graph:1159,shuffl:[164,731,1118],sigmoid:[746,1134],signatur:[82,195,367,473,586,769],sin:[721,1048],sinh:[722,1049],siren:1183,softmax:[176,456,747,1135],softplu:[748,1136],sort:[88,201,373,479,592,775],sparse_cross_entropi:1154,split:[139,304,420,534,673,979],split_factor:[863,1089],split_func_cal:[864,1090],squeez:[140,305,421,535,674,980],stable_divid:981,stable_pow:982,stack:[306,675,983],stack_imag:[151,322,434,550,696,1020],statist:[89,202,374,480,593,776],stop_gradi:[317,429,545,690,1010],str_to_nod:1091,submodul:43,supports_inplac:984,svd:[326,553,702,1027],swapax:[536,676,985],tan:[723,1050],tanh:[724,749,1051,1137],tensorflow:465,tile:[307,537,677,986],tmp_dir:987,to_dev:[107,258,497,611,865],to_ivi:18,to_ivy_modul:[179,752,1176],to_list:[678,988],to_n:19,to_nod:1092,to_numpi:[679,989],to_scalar:[680,990],torch:578,total_mem_on_dev:866,total_mem_on_nod:1093,tpu_is_avail:[498,612,867,1094],train:1211,trainabl:1211,transpos:[141,308,422,681,991],tree:1169,try_else_non:992,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,79,192,193,363,364,469,470,582,583,765,766],uint8_img_to_float_img:1021,unifi:1095,unify_arrai:1096,unify_it:1097,unify_nest:1098,unset_debug_mod:49,unset_default_devic:868,unset_default_dtyp:892,unset_default_float_dtyp:893,unset_default_int_dtyp:894,unset_framework:71,unset_with_grad:1011,unstack:[142,309,423,538,682,993],used_mem_on_dev:869,used_mem_on_nod:1099,util:[90,203,375,481,594,777],valid_dtyp:895,value_is_nan:994,variabl:[318,430,546,691,1012],variable_data:[692,1013],vector_norm:1028,vector_to_skew_symmetric_matrix:[154,327,437,554,703,1029],verbos:1213,vision:58,where:[310,683,995,1169],why:1215,with_grad:1014,wrapper:72,write:1212,zero:[143,312,424,540,685,997,1185],zero_pad:[311,539,684,996],zeros_lik:[144,313,425,541,686,998]}})